
.. index:: namelist format

.. _NamelistFormat:

Namelist Format
==============================================

All namelist names must be prefaced with an ``&`` and all namelist blocks must end
with the statement ``/``. For some FORTRAN compilers an optional format is
allowed, where the namelist names are prefaced with ``$`` and namelist endings are
designated by ``$end``. Excerpts of a :file:`prepin.*` file are shown below to indicate the
proper standard and optional formats.

.. tabularcolumns:: |p{7.25cm}|p{7.25cm}|

.. _namelistFormatTable:

.. list-table:: 
   :widths: 50 50
   :header-rows: 1
   :class: longtable

   * - STANDARD FORMAT
     - OPTIONAL FORMAT

   * - ::

          This is the title card
          This is an additional title card

          &xput
           twfin=1.,
           gz=-9.8,
           remark= 'Units are si,'
          /

          &limits
           itmax=100,
          /

          This is a comment between 
          namelists.
          
          &props
           rhof=1., 
           mui=1.e-2,
           remark='mui, viscosity is a 
              real no.',
          /
           .
           .
           .
          &parts
          /
          This is additional text at the 
             end of the file.

     - ::

         This is the title card
         This is an additional title card

         $xput
          twfin=1.,
          gz=-9.8,
          remark= 'Units are si,'
         $end

         $limits
          itmax=100,
         $end

         This is a comment between 
         namelists.

         $props
          rhof=1.,
          mui=1.e-2,
          remark='mui, viscosity is a real 
             no.,'
         $end
          .
          .
          .
         $parts
         $end
         This is additional text at the 
            end of the file.

.. index:: namelist rules

.. _NamelistRules:

Namelist Rules
==============================================

Namelists must conform to the following rules:

* All entries must begin after Column 1 (nothing should be entered in Column 1).
* Namelists are read in free format so spacing is not important.
* Namelist blocks are not case sensitive. 
* Integer data must be entered as integer values and real data as real values.
* A comma is required after each data entry (on most computers).
* Text outside of namelist blocks is ignored. (This is useful for annotating your input file.)

.. index:: problem title

.. _ProblemTitle:

Problem Title
==============================================

At least one title line must be included at the top of the file. This title
line will appear on all |prod| output including plots. Additional title lines
may be included, but they are ignored by |prod|. Specifying unique,
descriptive titles is a valuable habit to cultivate for reducing confusion
when reviewing results of similar calculations.

.. index:: remark variable

.. _AddingComments:

Adding Comments Using the Remark Variable
==============================================

Within each namelist block, comments may be added using the character variable
:envvar:`REMARK`. For example,

:samp:`Remark = "Units are SI,"`

could be added in :envvar:`XPUT` as a reminder of the units system used for the
calculation. :envvar:`REMARK` may contain up to 50 characters and may appear as many
times as desired within each block.

.. _ConventionsUsed:

Conventions Used for the Input Variable Summary
====================================================

* A complete list of input variables is included in the Input Variable Summary for each of the namelist blocks. A brief description of each variable is given along with default values.
* Units are given as [t] for time, [T] for temperature, [M] for mass, [L] for length, and [Q] for charge.
* All dimensional default values are in CGS units (cm, gm, sec), and all (non-zero) fluid #1 property defaults are for water.
* Subscripted variables are indicated with dummy indexes.
* The word "Alternate:" indicates alternative input variables.
* Whenever "..." is listed in the DEFAULT column, there are conditional defaults that are described in the DESCRIPTION column. More details about some options can be found in the :doc:`model-reference` chapter, under the appropriate topic.

.. index:: 
   pair: physical and computational parameters; XPUT

.. _PhysicalAndComputationalParameters:

================================================
Physical and Computational Parameters - XPUT 
================================================

.. index:: advection options

.. _AdvectionOptions:

Advection Options
====================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTAdvectionOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`APPLICATION`
     - 0
     - Flag for type of application being modeled

       | =0, undefined
       | =1, ...

     - NONE

   * - :envvar:`PROCESS`
     - 0
     - Flag for type of process being modeled

       | =0, undefined
       | =1, high-pressure die casting'

     - NONE

   * - :envvar:`SUBPROCESS`
     - 0
     - Flag for type of subprocess being modeled

       | =0, undefined
       | =1, if :envvar:`PROCESS` = 1, then 'thermal die cycling'
       | =2, if :envvar:`PROCESS` = 1, then 'die cavity filling'
       | =3, if :envvar:`PROCESS` = 1, then 'solidification'
       | =4, if :envvar:`PROCESS` = 1, then 'cooling'

     - NONE          

   * - :envvar:`ALPHA`
     - 1.0
     - Controls weighting of upstream values in advection approximations when :envvar:`IORDER` = 1

       | =0.0, central differencing
       | =1.0, upstream differencing

       .. note:: Should always be in the range between 0.0 and 1.0.
     - NON-DIM

   * - :envvar:`ALPHA_SWAT`
     - 1.0
     - Controls weighting of upstream values in advection approximations in the shallow water model when :envvar:`IORDER_SWAT` = 1

       | =0.0, central differencing
       | =1.0, upstream differencing

       .. note:: Should always be in the range between 0.0 and 1.0.
     - NON-DIM

   * - :envvar:`DTIMPX`
     - 1.0\ :math:`\times`\ 10\ :sup:`10`
     - Maximum Courant number used to limit the time step size in the implicit advection model, :envvar:`IMPADV` = 1. Used in addition to any other limiting factors.

       .. seealso:: \  :envvar:`IMPADV` and :envvar:`IMPADV2` below.
     - NON-DIM

   * - :envvar:`IFENRG`
     - ...
     - Flag for internal energy evaluation

       | =0, no energy solution
       | =2, solve transport equation for internal energy (1st order advection)
       | =3, solve energy transport equation using monotonicity preserving, second order method. Not used for two-fluid compressible flow with sharp interface.

       .. note:: Defaults to 0 if :envvar:`ICMPRS` = 0; defaults to 2 if :envvar:`ICMPRS` = 1.

       .. seealso:: \  

          * :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.

     - NONE

   * - :envvar:`IFPK`
     - ...
     - Flag for F-packing

       | =0, no F-packing
       | =1, close up interior voids in free-surface problems

       .. note:: Defaults to 1 if :envvar:`ITB` = 1 and :envvar:`NMAT` = 1; defaults to 0 otherwise.

       .. seealso:: \  

          * :envvar:`ITB` and :envvar:`NMAT` in :ref:`FlowModeOptions`.

     - NONE

   * - :envvar:`IFRHO`
     - ...
     - Flag for density evaluation

       | =0, constant uniform density
       | =1, evaluate density as function of fluid fraction and local temperature
       | =2, solve transport equation for density (1st order advection)
       | =3, solve density transport equation using monotonicity preserving, second order method. Not used for two-fluid compressible flow with sharp interface.

       .. note:: Defaults to 0 if :envvar:`NMAT` = 1; defaults to 1 if :envvar:`NMAT` = 2 and :envvar:`ICMPRS` = 0; defaults to 2 if :envvar:`ICMPRS` = 1. 

       .. seealso:: \  

          * :envvar:`NMAT` in :ref:`FlowModeOptions`.

          * :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`IFTHEXP`
     - 0
     - Thermal expansion flag for flow with density a function of temperature

       | =0, no volume expansion
       | =1, fluid volume expands in accordance with density charges

       .. note:: Requires :envvar:`IFRHO` = 1 and :envvar:`IFENRG` = 2 or 3.
     - NONE

   * - :envvar:`IFVOF`
     - ...
     - Flag for F advection options

       | =0, no F advection
       | =2, monotonicity preserving, second-order advection
       | =3, VOF interface tracking
       | =4, VOF plus interior donor cell
       | =5, Unsplit Lagrangian method
       | =6, Split Lagrangian method.

       .. note:: | Defaults to 0 if :envvar:`ITB` = 0 and :envvar:`NMAT` = 1
                 | Defaults to 2 if :envvar:`ITB` = 0 and :envvar:`NMAT` = 2
                 | Defaults to 4 if :envvar:`ITB` = 1 and :envvar:`NMAT` = 1
                 | Defaults to 3 if :envvar:`ITB` = 1 and :envvar:`NMAT` = 2

       .. seealso:: \  :envvar:`ITB` and :envvar:`NMAT` in :ref:`FlowModeOptions`.
     - NONE

   * - :envvar:`IFSLP`
     - 0
     - Flag for two-fluid interface velocity slip option

       | =0, no-slip condition at the interface between liquid and gas
       | =1, free-slip condition at the interface between liquid and gas.

       .. note:: The free-slip should be used in two-fluid, sharp-interface (:envvar:`NMAT` = 2 and :envvar:`ITB` = 1), cases when fluid #1 is heavier than fluid #2 by at least a factor of 10.0, and the viscous boundary layer thickness at the interface between the two fluids is much smaller than a cell size.

       .. seealso:: \  :envvar:`ITB` in :ref:`FlowModeOptions`.
     - NONE

   * - :envvar:`IMPADV`
     - 0
     - Advection explicit/implicit flag

       | =0, explicit evaluation of advection terms
       | =1, locally implicit evaluation of advection terms
     - NONE

   * - :envvar:`IMPADV2`
     - 0
     - Time step control flag for implicit advection option, :envvar:`IMPADV` = 1

       | =0, use explicit time step limit in cells containing free surface
       | =1, time step is controlled by stability limit defined with threshold velocity defined by :envvar:`V_THRESH`. Cells with velocity above :envvar:`V_THRESH` are treated implicitly.
       | =2, time step is controlled by threshold time step defined by :envvar:`DT_THRESH`. Cells with local advective stability limit below :envvar:`DT_THRESH` are treated implicitly. The actual time step size during simulation may be below :envvar:`DT_THRESH` if another stability limit (for example, from the heat transfer or surface tension approximations) controls it.

       .. seealso:: \  :envvar:`DTIMPX` above.
     - NONE    

   * - :envvar:`IORDER`
     - 1
     - Momentum equation approximation flag

       | =0, linear approximation
       | =1, first order
       | =2, second order in space and time
       | =3, monotonicity-preserving second order

       .. note:: Always set to 1 when :envvar:`IMPADV` = 1.

       .. seealso:: \  :envvar:`IMPADV` in :ref:`ExplicitImplicitOptions`.
     - NONE

   * - :envvar:`IORDER_SWAT`
     - 3
     - Momentum equation approximation flag for the shallow water model

       | =0, linear approximation
       | =1, first order
       | =2, second order in space and time
       | =3, monotonicity-preserving second order

       .. note:: Always set to 1 when :envvar:`IMPADV` = 1.

       .. seealso:: \  :envvar:`IMPADV` in :ref:`ExplicitImplicitOptions`.
     - NONE

   * - :envvar:`IBM`
     - 0
     - Immersed boundary method flag

       | =0, deactivate immersed boundary method
       | =1, activate immersed boundary method with no-penetration condition for advection and diffusion terms at a solid boundary
       | =2, activate immersed boundary method with no-penetration condition for advection term, and no-slip condition for diffusion term
       | =3, activate immersed boundary method with no-slip condition for advection and diffusion terms

     - NONE

   * - :envvar:`IBM_PROBE_DIRECTION_METHOD`
     - 0
     - Flag for probe directions of ghost nodes

       | =0, weighted average
       | =1, shortest distance
       | =2, upstream

     - NONE

   * - :envvar:`DT_THRESH`
     - 0.0
     - Time step threshold for implicit advection. Cells with local advective stability limit below :envvar:`DT_THRESH` are treated implicitly. Used when :envvar:`IMPADV` = 1 and :envvar:`IMPADV2` = 2. 
     - [t] 

   * - :envvar:`V_THRESH`
     - 1.0\ :math:`\times`\ 10\ :sup:`35`
     - Velocity threshold for implicit advection. Cells with velocity above :envvar:`V_THRESH` are treated implicitly. Used when :envvar:`IMPADV` = 1 and :envvar:`IMPADV2` = 1. 
     - [L/t]

.. index:: volume correction options

.. _AutoVolumeCorrectionOptions:

Automatic Volume Correction Options
===================================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTAutoVolumeCorrectionOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_VOL_CORR`
     - 0
     - Flag for fluid #1 volume correction model. Only applied to one-fluid with free-surface and two-fluid problems to maintain fluid #1 volume conservation.

       | =0, no volume correction
       | =1, automatically correct fluid #1 volume
     - NONE

   * - :envvar:`IVOL_CORR_TIME`
     - 1
     - Flag for the definition of the characteristic time for volume correction :envvar:`VOL_CORR_TIME`

       | =1, define :envvar:`VOL_CORR_TIME` as the number of time steps
       | =2, define :envvar:`VOL_CORR_TIME` as time
     - NONE

   * - :envvar:`VOL_CORR_TIME`
     - ...
     - Characteristic time for fluid #1 volume correction. Defaults to 10.0 when :envvar:`IVOL_CORR_TIME` = 1. Must be positive when :envvar:`IVOL_CORR_TIME` = 2.

     - NON-DIM if :envvar:`IVOL_CORR_TIME` = 1, [t] otherwise

.. index:: 
   single: models; collision

.. index:: collision model

.. _CollisionModelOptions:

Collision Model Options
============================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTCollisionModelOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ICLID`
     - 0
     - Flag for the collision model. Only applied to the coupled-motion GMO components

       | =0, no collisions 
       | =1, activate collision model
     - NONE

   * - :envvar:`FRCMOB`
     - 0.0
     - Global coefficient of friction during collision between coupled-motion GMO components and other components and walls
     - NON-DIM

   * - :envvar:`STRNGMOB`
     - 1.0
     - Global coefficient of Stronge's restitution during collision between coupled-motion GMO components and other components and walls. Values should be between 0.0 and 1.0.
     - NON-DIM

.. index:: convergence criteria

.. _ConvergenceCriteriaOptions:

Convergence Criteria Options
===============================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTConvergenceCriteriaOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`EPSADJ`
     - 1.0
     - Multiplier for the calculated pressure iteration convergence criterion 

       Alternate: :envvar:`EPSI`

       The convergence criterion is set automatically at each time step using :envvar:`EPSADJ`.

       | =1.0, standard convergence criterion
       | :math:`>`\ 1.0, coarser convergence
       | :math:`<`\ 1.0, finer convergence

       .. note:: Used only when :envvar:`IFDYNCONV` = 1.
     - NON-DIM

   * - :envvar:`EPSI`
     - -1.0
     - Constant pressure iteration convergence criterion

       Alternate: :envvar:`EPSADJ`

       .. note:: Used only when :envvar:`IFDYNCONV` = 0 and :envvar:`EPSI` :math:`>` 0.0, in which case the automatic convergence criterion selection, controlled by :envvar:`EPSADJ`, is not used.
     - [1/t]

   * - :envvar:`EPSFSI`
     - 1.0\ :math:`\times`\ 10\ :sup:`-3`
     - Fluid-structure interaction (FSI) and thermal stress evolution (TSE) convergence criterion.

       .. note:: Used only when :envvar:`IFSI(m)` = 1 for any geometry component :envvar:`m`, or :envvar:`ITHRMST` = 1.

       .. seealso:: \  

          * :envvar:`IFSI(m)` in :ref:`ComponentPropertiesFluidStructureInteractionFSImodel`.

          * :envvar:`ITHRMST` in :ref:`PhysicalModelOptions`.
     - NON-DIM

   * - :envvar:`EPSHTC`
     - 1.0
     - Multiplier for temperature iteration convergence criterion

       | :math:`>`\ 1, coarser convergence
       | :math:`<`\ 1, finer convergence
     - NON-DIM

   * - :envvar:`EPSVIS`
     - 1.0
     - Convergence adjustment for implicit viscous model

       | :math:`>`\ 1, coarser convergence
       | :math:`<`\ 1, finer convergence
     - NON-DIM

   * - :envvar:`EPSELS`
     - 1.0
     - Convergence adjustment for implicit elastic stress model

       | :math:`>`\ 1, coarser convergence
       | :math:`<`\ 1, finer convergence
     - NON-DIM

   * - :envvar:`IFDYNCONV`
     - 1
     - Pressure iteration convergence criterion flag

       | =0, use constant criterion :envvar:`EPSI`
       | =1, use dynamically computed criterion with :envvar:`EPSADJ` as the multiplier
     - NONE

   * - :envvar:`OMEGA`
     - ...
     - Relaxation factor used in pressure iteration solvers.

       Default value is defined as follows (logic applied in this order):

       | 1.0, if :envvar:`ICMPRS` = 1, or :envvar:`IMP` = 0, or :envvar:`IMPVIS` = 2
       | 2.0, if :envvar:`IGMRES` = 2 and :envvar:`IADIX` = :envvar:`IADIY` = :envvar:`IADIZ` = 1; defaults to 1.7, if any of :envvar:`IADIX`, :envvar:`IADIY` and :envvar:`IADIZ` is equal to 0.
       | 1.7, for the SOR pressure solver, :envvar:`IGMRES` = 0.
       | 1.0, for the GMRES pressure solver, :envvar:`IGMRES` = 1, when :envvar:`IMPMOB` = 0
       | :math:`<` 1.0 if :envvar:`IMPMOB` = 1, the actual values based on the GMO to fluid density ratio.

       .. seealso:: \  

          * :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.

          * :envvar:`IADIX` in :ref:`PressureIterationOptions`.
     - NON-DIM

   * - :envvar:`OMEGHT`
     - 2.0
     - Relaxation factor for implicit heat transfer and conduction
     - NON-DIM

   * - :envvar:`OMEGVS`
     - ...
     - Relaxation factor used in velocity iteration for implicit viscous model

       .. note:: Defaults to 1.0 when :envvar:`IMPVIS` = 2. Not used when :envvar:`IMPVIS` = 1 or 3.

       .. seealso:: \  :envvar:`IMPVIS` in :ref:`ExplicitImplicitOptions`.
     - NON-DIM

.. index:: core gas generation

.. _CoreGasGenerationIVS:

Core Gas Generation
===============================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTCoreGasGeneration:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFCOR`
     - 0
     - Core gas model flag

       | =0, core gas model is not activated
       | =1, activate core gas model
     - NONE

   * - :envvar:`IPRTVNT`
     - 0
     - Print venting flag

       | =0, no venting at print surfaces
       | =1, vent at all print surfaces
     - NONE

   * - :envvar:`ISSDIMCG`
     - 4
     - Sub-scaling dimension of the binder array. Each computational cell within a core is subdivided into :envvar:`ISSDIMCG` equal sub-cells in each coordinate direction to store binder concentration.

       .. note:: The total number of sub-cells in each computational cell has to be less than 1000. Thus if using cartesian coordinates, :envvar:`ISSDIMCG` must be less than 10. If using cylindrical coordinates, :envvar:`ISSDIMCG` must be less than 32.
     - [sub-cells]

   * - :envvar:`TAURLXCG`
     - 0.0
     - Time over which the metal pressure at core surface is averaged
     - [t]

   * - :envvar:`EPSADJCG`
     - 1.0
     - Multiplier for the convergence criterion for the implicit core gas pressure solver.
     - NON-DIM

.. _EnergyHeatTransferOptionsIVS:

Energy and Heat Transfer Options
=============================================

.. index:: energy options

.. _EnergyOptions:

Energy Options
-------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTEnergyOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFENRG`
     - ...
     - Flag for internal energy evaluation

       | =0, no energy solution
       | =2, solve transport equation for internal energy (1st order advection)
       | =3, solve energy transport equation using monotonicity preserving, second order method. Not used for two-fluid compressible flow with sharp interface.

       .. note:: Defaults to 0 if :envvar:`ICMPRS` = 0; defaults to 2 if :envvar:`ICMPRS` = 1.

       .. seealso:: \  

          * :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.

     - NONE

.. index:: heat transfer options

.. _HeatTransferOptionsIVS:

Heat Transfer Options
---------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTHeatTransferOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CGFOB`
     - 0.0
     - Coefficient of gravity effect on metal/foam heat transfer for the lost foam casting model (used in conjunction with foam component roughness).
     - NON-DIM

   * - :envvar:`IHTC`
     - 0
     - Fluid/component/void heat transfer flag 

       | =0, no heat transfer
       | =1, activate heat transfer within geometry components, between fluid and components, and components and void

     - NONE

   * - :envvar:`IMPHTC`
     - ...
     - Heat transfer and conduction explicit/implicit flag

       | =0, explicit evaluation of temperature terms
       | =1, implicit evaluation of temperature terms

       .. note:: Defaults to 1 for thermal die cycling model, 0 otherwise.
     - NONE

.. index:: explicit/implicit options

.. _ExplicitImplicitOptions:

Explicit/Implicit Options
============================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTExplicitImplicitOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ACCIMP`
     - 1.0
     - Coriolis acceleration explicit/implicit weighting parameter

       | =0, for explicit
       | =(0.5 to 1.0), for fraction of implicitness
     - NON-DIM

   * - :envvar:`IFFS`
     - 0
     - Free surface pressure explicit/implicit flag

       | =0, explicit evaluation
       | =1, implicit evaluation

       .. note:: Valid only for one-fluid, free-surface flows: :envvar:`NMAT` = 1 and :envvar:`ITB` = 1.

       .. seealso:: \  :envvar:`NMAT` and :envvar:`ITB` in :ref:`FlowModeOptions`.
     - NONE

   * - :envvar:`IMP`
     - 1
     - Pressure-velocity coupling Explicit/Implicit option

       | =0, explicit coupling (incompatible with :envvar:`ICMPRS` = 0)
       | =1, implicit coupling
       | =2, automatic limited compressibility for improved pressure iteration convergence for incompressible flow
     - NONE

   * - :envvar:`IMP_SWAT`
     - 1
     - Pressure-velocity coupling Explicit/Implicit option for the shallow water model

       | =0, explicit coupling
       | =1, implicit coupling
     - NONE

   * - :envvar:`IMPADV`
     - 0
     - Advection explicit/implicit flag

       | =0, explicit evaluation of advection terms
       | =1, locally implicit evaluation of advection terms
     - NONE

   * - :envvar:`IMPADV2`
     - 0
     - Time step control flag for implicit advection option, :envvar:`IMPADV` = 1

       | =0, use explicit time step limit in cells containing free surface
       | =1, time step is controlled by stability limit defined with threshold velocity defined by :envvar:`V_THRESH`. Cells with velocity above :envvar:`V_THRESH` are treated implicitly.
       | =2, time step is controlled by threshold time step defined by :envvar:`DT_THRESH`. Cells with local advective stability limit below :envvar:`DT_THRESH` are treated implicitly. The actual time step size during simulation may be below :envvar:`DT_THRESH` if another stability limit (for example, from the heat transfer or surface tension approximations) controls it.

       .. seealso:: \  :envvar:`DTIMPX` below.
     - NONE

   * - :envvar:`DT_THRESH`
     - 0.0
     - Time step threshold for implicit advection. Cells with local advective stability limit below :envvar:`DT_THRESH` are treated implicitly. Used when :envvar:`IMPADV` = 1 and :envvar:`IMPADV2` = 2. 
     - [t] 

   * - :envvar:`V_THRESH`
     - 1.0\ :math:`\times`\ 10\ :sup:`10`
     - Velocity threshold for implicit advection. Cells with velocity above :envvar:`V_THRESH` are treated implicitly. Used when :envvar:`IMPADV` = 1 and :envvar:`IMPADV2` = 1. 
     - [L/t]

   * - :envvar:`DTIMPX`
     - 1.0\ :math:`\times`\ 10\ :sup:`10`
     - Maximum Courant number used to limit the time step size in the implicit advection model, :envvar:`IMPADV` = 1. Used in addition to any other limiting factors.

       .. seealso:: \  :envvar:`IMPADV` and :envvar:`IMPADV2` above.
     - NON-DIM

   * - :envvar:`IMPBUB`
     - 1
     - Flag to indicate implicit evaluation of bubble state. :envvar:`IMPBUB` applies to both the adiabatic bubble model (:envvar:`GAMMA` :math:`>` 0, set in namelist :envvar:`PROPS`) and the thermal bubble model.

       | =0, explicit algorithm during pressure iteration
       | =1, implicit algorithm during pressure iteration

       .. seealso:: \  :envvar:`GAMMA` in :ref:`PhaseChangeProperties`.
     - NONE

   * - :envvar:`IMPHTC`
     - ...
     - Heat transfer and conduction explicit/implicit flag

       | =0, explicit evaluation of temperature terms
       | =1, implicit evaluation of temperature terms

       .. note:: Defaults to 1 for thermal die cycling model, 0 otherwise.
     - NONE

   * - :envvar:`IMPMOB`
     - 0
     - Explicit/implicit flag for the couple-motion GMO coupling with fluid 

       | =0, explicit evaluation of forces between GMO and fluid
       | =1, implicit evaluation of forces between GMO and fluid
     - NONE

   * - :envvar:`IMPVIS`
     - 0
     - Viscous stress calculation explicit/implicit flag

       | =0, explicit algorithm
       | =1, implicit algorithm, SOR method
       | =2, implicit algorithm, ADI method
       | =3, implicit algorithm, GMRES method
     - NONE

   * - :envvar:`IMPELS`
     - 0
     - Elastic stress calculation explicit/implicit flag

       | =0, explicit algorithm
       | =1, implicit algorithm, SOR method
     - NONE

   * - :envvar:`IMPSFT`
     - 0
     - Surface tension and capillary pressure explicit/implicit flag

       | =0, explicit evaluation
       | =1, implicit evaluation
     - NONE

   * - :envvar:`ITIMP3`
     - 1
     - Flag to indicate if iteratively update velocity boundary condition

       | =0, do not update 
       | =1, iteratively update

       .. note:: Used only when :envvar:`IMPVIS` = 3.
     - NONE

.. index:: file control options

.. _FileControlOptions:

File Control Options
============================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTFileControlOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`FFEMF`
     - ...
     - Finite element (FE) mesh file name for the solidified fluid region

       Defaults to :file:`solidified_fluid.prjext.FEmesh`, where :file:`prjext` is the project extension.

       Can include the full path, e.g., :file:`c:/work/my_solidified_fluid.FEmesh` (up to 256 characters).

       .. note:: Used only with thermal stress evolution model (TSE): :envvar:`ITHRMST` = 1

       .. seealso:: \  :envvar:`ITHRMST` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`IFFEMF`
     - 0
     - Flag to use finite element (FE) mesh file for the thermal stress evolution (TSE) solver in the solidified fluid region

       | =0, generate finite element (FE) mesh file for the solidified fluid region
       | =1, use existing finite element (FE) mesh file for the solidified fluid region
       | =2, use existing :program:`EXODUS II` mesh file for the solidified fluid region

       .. note:: Used only with thermal stress evolution model (TSE): :envvar:`ITHRMST` = 1

       .. seealso:: \  :envvar:`ITHRMST` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`IFSIOUT`
     - 0
     - Flag to export Tecplot\ |reg| compatible output file(s) for fluid-structure interaction (FSI) and thermal stress evolution (TSE) models

       | =0, no Tecplot\ |reg| compatible output file(s)
       | =1, only Tecplot\ |reg| compatible FSI/TSE finite element (FE) mesh output file(s)
       | =2, only Tecplot\ |reg| compatible FSI/TSE finite element (FE) data output file(s)
       | =3, both Tecplot\ |reg| compatible FSI/TSE finite element (FE) mesh as well as data output files
     - NONE

   * - :envvar:`IEXODUSOUT`
     - 0
     - Flag to export :program:`EXODUS II`\ |reg| compatible output file(s) for fluid-structure interaction (FSI) and thermal stress evolution (TSE) models

       | =0, no :program:`EXODUS II`\ |reg| compatible output file(s)
       | =1, only :program:`EXODUS II`\ |reg| compatible FSI/TSE finite element (FE) output file(s)
       | =2, only :program:`EXODUS II`\ |reg| compatible FSI/TSE finite element (FE) data output file(s)
       | =3, both :program:`EXODUS II`\ |reg| compatible FSI/TSE finite element (FE) mesh as well as data output files
     - NONE

   * - :envvar:`ITIMER`
     - 0
     - Flag to activate built-in wall clock timers in the solver

       | =0, timers are switched off
       | =1, activate timers

       There are several dozen timers that register the wall clock time for various sections of the solver. The output from all timers is written at the end of the calculation to the solver summary file :file:`hd3out`.
     - NONE

   * - :envvar:`IBENCH`
     - 0
     - Flag to output history plot data in text format. The history variables that are output are the same that are automatically plotted and stored in the :file:`flsplt` file at the end of each calculation.

       | =0, do not produce text output
       | =1, write history data as text output into the :file:`flslnk` file
     - NONE

.. index:: flow mode options

.. _FlowModeOptions:

Flow Mode Options
============================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTFlowModeOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ICMPRS`
     - 0
     - Compressible flow option (mass conservation equation)

       | =0, incompressible flow or limited compressibility model
       | =1, compressible flow

       .. note:: Only Fluid #2 can be compressible and so must be used with 2 fluid option, :envvar:`NMAT` = 2.

       .. seealso:: \  

          * :envvar:`NMAT` in :ref:`PhysicalModelOptions`.

          * :doc:`model-reference` -->  :ref:`compressibleFlowMR`.
     - NONE

   * - :envvar:`IPOT`
     - 0
     - Flag for potential flow calculation

       | =0, full flow equation
       | =1, potential equation
     - NONE

   * - :envvar:`ITB`
     - 0
     - Indicator for free surfaces or sharp interfaces

       | =0, no free surface or sharp interface
       | =1, free surface or sharp interface

     - NONE

   * - :envvar:`NMAT`
     - ...
     - Number of materials

       .. note:: Defaults to 1 if :envvar:`ICMPRS` = 0; defaults to 2 if :envvar:`ICMPRS` = 1.
     - NONE

   * - :envvar:`IFVELP`
     - 0
     - Fluid flow solver options

       | =0, solve all fluid transport equations
       | =1, assume velocities are fixed in time and skip fluid flow calculations
       | =2, assume zero velocities and skip fluid flow calculations

     - NONE

.. index:: global conditions for active simulation control

.. index::
   single: global conditions for active simulation control; global conditions; active simulation control

.. _GlobalConditionsForActiveSimulationControl:

Global Conditions for Active Simulation Control
===========================================================

.. seealso:: \  :doc:`model-reference` ->  :ref:`activeSimulationControlMR`.

| *n* :math:`\leq` *10, global condition index*
| *k* :math:`\leq` *10, probe condition index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTGlobalConditionsForActiveSimulationControl:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NGLOBALS`
     - 0
     - Number of global conditions
     - NONE

   * - :envvar:`CONDITION_NAME_GLOBAL(n)`
     - 
     - Name for global condition :envvar:`n` (up to 50 characters)
     - NONE

   * - :envvar:`IF_ENABLED_GLOBAL(n)`
     - 1
     - Activation flag for global condition :envvar:`n`

       | =0, global condition :envvar:`n` disabled
       | =1, global condition :envvar:`n` enabled

     - NONE

   * - :envvar:`NPROBES_GLOBAL(n)`
     - 0
     - Number of probe conditions for global condition :envvar:`n`
     - NONE

   * - :envvar:`CONDITION_LOGIC_GLOBAL(n)`
     - 
     - Logical operator between probe conditions for global condition :envvar:`n`

       | ='ANY', global condition :envvar:`n` triggered when any of the enabled probe conditions satisfied
       | ='ALL', global condition :envvar:`n` triggered when all of the enabled probe conditions satisfied

     - NONE

   * - :envvar:`IF_CONDITION_ENABLED_GLOBAL(k,n)`
     - 1
     - Activation flag for probe condition :envvar:`k`

       | =0, probe condition :envvar:`k` disabled
       | =1, probe condition :envvar:`k` enabled

     - NONE

   * - :envvar:`IPRBD_GLOBAL(k,n)`
     - 0
     - Probe id for probe condition :envvar:`k`
     - NONE

   * - :envvar:`IPRBSC_GLOBAL(k,n)`
     - 0
     - Scalar id for probe condition :envvar:`k`

       .. note:: Used when :envvar:`PRBVNAM_GLOBAL(k,n)` = 'SCSCLR'
     - NONE

   * - :envvar:`IPRBSCN_GLOBAL(k,n)`
     - 0
     - Additional scalar index for probe condition :envvar:`k`

       Sediment species id, when :envvar:`PRBVNAM_RESTART` = 'NSSPC', or
       Baffle flux surface id, when :envvar:`PRBVNAM_RESTART` = 'TRACERN'.
     - NONE

   * - :envvar:`PRBVNAM_GLOBAL(k,n)`
     - 
     - Probe variable name for probe condition :envvar:`k`
     - NONE

   * - :envvar:`IFPRBVABS_ GLOBAL(k,n)`
     - 0
     - Specify if to use the absolute probe variable value for probe condition :envvar:`k`

       | =0, use the real value
       | =1, use the absolute value

     - NONE

   * - :envvar:`PRBVROP_GLOBAL(k,n)`
     - 
     - Probe variable relational operator for probe condition :envvar:`k`

       | ='LT', probe condition satisfied when probe variable value is *less* than the critical value
       | ='LE', probe condition satisfied when probe variable value is *less* than or *equal* to the critical value
       | ='EQ', probe condition satisfied when probe variable value is *equal* to the critical value
       | ='NE', probe condition satisfied when probe variable value is *not equal* to the critical value
       | ='GE', probe condition satisfied when probe variable value is *greater* than or *equal* to the critical value
       | ='GT', probe condition satisfied when probe variable value is *greater* than the critical value

     - NONE

   * - :envvar:`PRBVAL_CRITICAL_GLOBAL(k,n)`
     - 0.0
     - Critical value for probe condition :envvar:`k`
     - NONE

   * - :envvar:`PRBDT_GLOBAL(k,n)`
     - 0.0
     - Duration after the critical value has reached for probe condition :envvar:`k`
     - [t]

.. index:: gravity options

.. index::
   single: non-inertial reference frame; options

.. _GravityAndNIRFOptions:

Gravity and Non-Inertial Reference Frame Options
===========================================================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTGravityAndNIRFOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IACCF`
     - 0
     - Non-inertial reference frame flag

       | =0, not in a non-inertial reference frame, i.e., domain is not moving
       | =1, motion of non-inertial reference frame is prescribed
       | =2, evaluate reference frame motion using coupled rigid body dynamics model

       .. seealso:: \  

          * :envvar:`MOTN` namelist: :ref:`NonInertialReferenceFrameMOTN`
       
          * :envvar:`RBDATA` namelist: :ref:`RigidBodyNamelistRBDATA`
     - NONE

   * - :envvar:`GX`
     - 0.0
     - Gravity component in x-direction

       .. note:: 

          * Used only when :envvar:`IACCF` = 0.

          * For cylindrical coordinates, use :envvar:`GRAVX`, :envvar:`GRAVY`. 

       .. seealso:: \  :envvar:`GRAVX` and :envvar:`GRAVY` in :ref:`NonInertialReferenceFrameGravityField` for time-varying gravity.
     - [L/t\ :sup:`2`]

   * - :envvar:`GY`
     - 0.0
     - Gravity component in y-direction

       .. note:: 

          * Used only when :envvar:`IACCF` = 0.

          * For cylindrical coordinates, use :envvar:`GRAVX`, :envvar:`GRAVY`.

       .. seealso:: \  :envvar:`GRAVX` and :envvar:`GRAVY` in :ref:`NonInertialReferenceFrameGravityField` for time-varying gravity.
     - [L/t\ :sup:`2`]

   * - :envvar:`GZ`
     - 0.0
     - Gravity component in z-direction

       .. note:: Used only when :envvar:`IACCF` = 0.

       .. seealso:: \  :envvar:`GRAVZ` in :ref:`NonInertialReferenceFrameGravityField` for time-varying gravity.
     - [L/t\ :sup:`2`]

.. index:: initialization option

.. _InitializationRestartOptions:

Initialization and Restart Options
=====================================

.. _InitializationOption:

Initialization Option
---------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTInitializationOption:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IPDIS`
     - 0
     - Flag for initial hydrostatic pressure distribution

       | =0, uniform pressure
       | =1, hydrostatic initial pressure obtained using an iterative solver

       .. note:: Relevant only if gravity is specified or the non-inertial reference frame model is used. See :ref:`GravityAndNIRFOptions` and :ref:`NonInertialReferenceFrameGravityField`.
     - NONE

.. index:: restart options

.. _RestartOptions:

Restart Options
---------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTRestartOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFREST`
     - 0
     - Restart activation flag

       | =0, not a restart calculation
       | =1, activate restart data initialization
     - NONE

   * - :envvar:`IEVENT_RST`
     - 1
     - Active simulation control events restart flag

       | =0, do not maintain event status
       | =1, maintain event status
     - NONE

   * - :envvar:`DELTR`
     - ...
     - Initial time-step size for restart calculation

       .. note:: Defaults to |Delta|\ t from restart file at point of data extraction.
     - [t]

   * - :envvar:`IACRST`
     - 0
     - Non-inertial reference frame restart options

       | =0, restart with acceleration and angular velocity data from restart source file :file:`flsgrf`
       | =1, do not read acceleration and angular velocity data from restart source file :file:`flsgrf`
     - NONE

   * - :envvar:`IFVFRST`
     - 0
     - Flag for fluid fraction initialization during restart

       | =0, restart using fluid fraction, :math:`F`
       | =1, restart using the product of fluid fraction and volume fraction, :math:`F\cdot V_f`

       .. note:: The option :envvar:`IFVFRST` = 1 is useful when a part of the geometry is removed during restart exposing fluid to void thus creating new free surface.
     - NONE

   * - :envvar:`IHTRST`
     - 0
     - Restart temperature options

       | =0, restart with all data in restart source :file:`flsgrf`
       | =1, restart with all data in restart source file :file:`flsgrf` except for fluid/solid temperatures, which are reset with :file:`prepin.*` data
       | =2, restart using only solid temperatures from restart source file :file:`flsgrf`, all other conditions from :file:`prepin.*` data
       | =3, void data is reset with :file:`prepin.*` data

       .. note:: If :envvar:`IHTRST` :math:`>` 0, void data is reset with :file:`prepin.*` data.
     - NONE

   * - :envvar:`IHTRST2`
     - 0
     - Restart component temperature options

       | =0, use component-specific heat transfer options defined by :envvar:`IHTOBS(n)`
       | =1, make all component temperatures static by setting :envvar:`IHTOBS(n)` to 3 for all solid components

       .. note:: Only valid for restart simulations: :envvar:`IFREST` = 1.
     - NONE     

   * - :envvar:`IRESF1`
     - 0
     - Fluid condition restart flag

       | =0, standard restart
       | =1, fill every non-empty cell with fluid \#1, i.e., set f = 1.0

       .. note:: For a restart simulation using thermal die cycling model from a simulation without thermal die cycling activated, :envvar:`IRESF1` is always set equal to 1.

     - NONE

   * - :envvar:`IRESV`
     - 0
     - Fluid velocity condition restart flag

       | =0, standard restart
       | =1, reset fluid velocities to 0.0 and pressure to :envvar:`PVOID`

       .. seealso:: \  :envvar:`PVOID` in :ref:`InitialConditionsUniform`.
     - NONE

   * - :envvar:`IRSTOE`
     - ...
     - Flag for restart based on fluid temperature or energy

       | =0, restart based on internal energy
       | =1, restart based on temperature

       .. note:: Defaults to 1 for compressible flow (\ :envvar:`ICMPRS` = 1), otherwise, defaults to 0.

       .. seealso:: \  :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`ISCRST`
     - 0
     - Restart scalar transport options

       | =0, restart with all scalar data (sclr1, sclr2, etc.) from restart source file :file:`flsgrf`
       | =1, restart conditions for scalar data are set in :file:`prepin.*`

       .. seealso:: \  

          * :envvar:`SCLRI(ns)` in :ref:`InitialConditionsUniform`.

          * :envvar:`SCLREG(n,ns)` in :ref:`InitialConditionsRegionValues`.
     - NONE

   * - :envvar:`ITRST`
     - 0
     - Restart time flag

       | =0, do not reset time at restart
       | =1, reset time to zero at restart

       .. note:: For a restart simulation using thermal die cycling model from a simulation without thermal die cycling activated, :envvar:`ITRST` is always set equal to 1. 

     - NONE

   * - :envvar:`ITURST`
     - 0
     - Restart turbulence options

       | =0, restart with all turbulence data (*mu, tke, dtke*) from restart source file :file:`flsgrf`
       | =1, do not use *tke, dtke* data from restart source file :file:`flsgrf`
       | =2, do not use *mu, tke, dtke* data from restart source file :file:`flsgrf`

       .. seealso:: \  :ref:`TurbulenceandViscousOptions`
     - NONE

   * - :envvar:`TREST`
     - ...
     - Restart calculation time

       Data at the nearest available restart data edit in the restart source :file:`flsgrf` will be used to initialize the solution in a restart simulation.
     - [t]

   * - :envvar:`IFIED`
     - 1
     - Flag for writing the spatial data edit at the start of simulation

       | 0 = do not write
       | 1 = write

       .. note:: Not writing the data reduces the size of the :file:`flsgrf` data file, but having the initial data edit is useful when doing restart calculations.
     - NONE

   * - :envvar:`IFCOMP_VF`
     - 1
     - Flag for writing the volume fraction data for individual components. 

       | 0 = do not write
       | 1 = write

       .. note:: The volume fraction data for individual components improves geometry visualiziton in FlowSight, but may significantly increase the size of the :file:`flsgrf` data file, especially when selected data is output.

       .. seealso::
          * See the :ref:`flowsight` section of the :doc:`postprocessing` chapter.

     - NONE     

   * - :envvar:`RESFILE`
     - " "
     - Name of the restart source file, e.g. :envvar:`resfile` = :file:`'flsgrf.dat'`

       Can include the full path, e.g., :file:`'c:\\work\\flsgrf.dat'` (up to 400 characters).
     - NONE

.. index:: numerical options

.. _NumericalOptions:

Numerical Options
==========================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTNumericalOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ALPHA`
     - 1.0
     - Controls weighting of upstream values in advection approximations when :envvar:`IORDER` = 1

       | =0.0, central differencing
       | =1.0, upstream differencing 

       .. note:: Should always be in the range between 0.0 and 1.0.
     - NON-DIM

   * - :envvar:`ALPHA_SWAT`
     - 1.0
     - Controls weighting of upstream values in advection approximations in the shallow water model when :envvar:`IORDER_SWAT` = 1

       | =0.0, central differencing
       | =1.0, upstream differencing

       .. note:: Should always be in the range between 0.0 and 1.0.
     - NON-DIM

   * - :envvar:`ALPHAMB`
     - 0.25 
     - Controls weighting of Neumann- and Dirichlet-type boundary conditions for pressure at inter-block boundaries: 

       | =0.0, pure Dirichlet-type
       | =1.0, pure Neumann-type

       .. note:: Should always be in the range between 0.0 and 1.0.
     - NON-DIM

   * - :envvar:`CFPK`
     - 1.0
     - Multiplies F-packing term (for :envvar:`IFPK` :math:`>` 0)

       .. seealso:: \  :envvar:`IFPK` below.
     - NON-DIM

   * - :envvar:`FCLEAN`
     - 0.0
     - Fluid fraction cleanup coefficient for fluid #1. Throws away fluid #1 "mist" regions where local (isolated) fluid fraction within a cell is less than :envvar:`FCLEAN`.
     - NON-DIM

   * - :envvar:`FCLEAN2`
     - 0.0
     - Complement of fluid fraction cleanup coefficient for fluid #2. Throws away fluid #2 "mist" regions where local (isolated) fluid fraction complement, :math:`1-F`, within a cell is less than :envvar:`FCLEAN2`.
     - NON-DIM     

   * - :envvar:`IFLOSS`
     - 0
     - Flag for the treatment of possible secular instabilities in the flow solution

       | =-1, no treatment
       | =0, preemptive treatment: apply stabilizing treatment based on geometry and flow configuration
       | =1, reactive treatment: detect the onset of a secular instability apply treatment accordingly

       .. note:: Used only for full flow solution, :envvar:`IFVELP` = 0.

       .. seealso:: \ :envvar:`IFVELP` in :ref:`FlowModeOptions`.
     - NONE

   * - :envvar:`IFPK`
     - ...
     - Flag for F-packing

       | =0, no F-packing
       | =1, close up interior voids in free-surface problems

       .. note:: Defaults to 1 if :envvar:`ITB` = 1 and :envvar:`NMAT` = 1; defaults to 0 otherwise.

       .. seealso:: \  

          * :envvar:`ITB` and :envvar:`NMAT` in :ref:`FlowModeOptions`.

     - NONE

   * - :envvar:`IFVOF`
     - ...
     - Flag for F advection options

       | =0, no F advection
       | =2, monotonicity preserving, second-order advection
       | =3, VOF interface tracking
       | =4, VOF plus interior donor cell
       | =5, Unsplit Lagrangian method
       | =6, Split Lagrangian method.

       .. note:: | Defaults to 0 if :envvar:`ITB` = 0 and :envvar:`NMAT` = 1
                 | Defaults to 2 if :envvar:`ITB` = 0 and :envvar:`NMAT` = 2
                 | Defaults to 4 if :envvar:`ITB` = 1 and :envvar:`NMAT` = 1
                 | Defaults to 3 if :envvar:`ITB` = 1 and :envvar:`NMAT` = 2

       .. seealso:: \  :envvar:`ITB` and :envvar:`NMAT` in :ref:`FlowModeOptions`.
     - NONE

   * - :envvar:`IHELP`
     - 1
     - Flag for mentor help feature

       | =0, no mentor help
       | =1, mentor help offers helpful suggestions
     - NONE

   * - :envvar:`IORDER`
     - 1
     - Momentum equation approximation flag

       | =0, linear approximation
       | =1, first order
       | =2, second order in space and time
       | =3, monotonicity-preserving second order

       .. note:: Always set to 1 when :envvar:`IMPADV` = 1.

       .. seealso:: \  :envvar:`IMPADV` in :ref:`ExplicitImplicitOptions`.
     - NONE

   * - :envvar:`IORDER_SWAT`
     - 3
     - Momentum equation approximation flag for the shallow water model

       | =0, linear approximation
       | =1, first order
       | =2, second order in space and time
       | =3, monotonicity-preserving second order

       .. note:: Always set to 1 when :envvar:`IMPADV` = 1.

       .. seealso:: \  :envvar:`IMPADV` in :ref:`ExplicitImplicitOptions`.
     - NONE

   * - :envvar:`IELADV`
     - 1
     - Advection flag for elastic stress tensor components. Advection can be turned off for simulations where there are very large elastic stresses with only small movements.

       | =0, no advection
       | =1, second-order advection

       .. note:: Relevant only with the visco-elastic-plastic model, when :envvar:`IELAST` :math:`>` 0.

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`.

          * :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`.

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.
     - NONE

   * - :envvar:`ISTDY`
     - 0
     - Steady state accelerator for compressible flow

       | =0, normal transients
       | =1, accelerate approach to steady state using non-physical transient

       .. note:: Do not use if a time-accurate solution is desired. Only valid for compressible flow simulations (\ :envvar:`ICMPRS` = 1).

       .. seealso:: \  :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`IAUTOSET`
     - 0
     - Flag to use algorithm to automatically adjust subspace size used for GMRES pressure solver.

       =0 do not automatically adjust pressure solver GMRES subspace size; :envvar:`MRSTRT` is fixed.

       =1 automatically adjust pressure solver GMRES subspace size; :envvar:`MRSTRT` changes automatically.

       .. note:: Used only with GMRES pressure iteration solver, :envvar:`IGMRES` = 1.

       .. seealso:: \  

          * :envvar:`MRSTRT` in :ref:`ComputationalLimitsNamelistLIMITS`

          * :envvar:`ITRNMAX` in :ref:`PressureIterationOptions`
     - NONE

   * - :envvar:`IAUTOSETFSI`
     - 0
     - Flag to use algorithm to automatically adjust subspace size used for GMRES fluid structure interaction (FSI) and thermal stress evolution (TSE) solver.

       | =0 do not automatically adjust pressure solver GMRES subspace size; :envvar:`MRSTRTFSI` is fixed.
       | =1 automatically adjust pressure solver GMRES subspace size; :envvar:`MRSTRTFSI` changes automatically from the initially set value.

       .. note:: Used only with FSI (\ :envvar:`IFSI(m)` = 1) or TSE (\ :envvar:`ITHRMST` = 1) models.

       .. seealso:: \  

          * :envvar:`MRSTRTFSI` in :ref:`ComputationalLimitsNamelistLIMITS`

          * :doc:`model-reference` -->  :ref:`fsiTseMR`

          * :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`
     - NONE

   * - :envvar:`IFSIPRCND`
     - 1
     - Flag to use preconditioning algorithm that can improve convergence of the  GMRES fluid structure interaction (FSI) and thermal stress evolution (TSE) solver.

       | =0 do not use preconditioning algorithm.
       | =1 automatically use preconditioning algorithm when average number of GMRES solver iterations exceeds 4.

       .. note:: Used only with FSI (\ :envvar:`IFSI(m)` = 1) or TSE (\ :envvar:`ITHRMST` = 1) models.

       .. seealso:: \ 

          * :doc:`model-reference` -->  :ref:`fsiTseMR`

          * :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`
     - NONE

   * - :envvar:`SSACC`
     - 0.0
     - Damping rate coefficient for steady-state acceleration for free surface flows. Used when positive, and :envvar:`NMAT` = 1 and :envvar:`ITB` = 1.
     - NON-DIM  

   * - :envvar:`SSCOF`
     - 0.0
     - Damping coefficient for capillary waves. Used when positive and :envvar:`IFSFT` = 1.
     - NON-DIM    

   * - :envvar:`IOPT_FSI_GMRES`
     - 1
     - Flag specifying the FSI solver algorithm. 

       | =0, Use old (v11.1 and earlier) FSI GMRES solver where the entire FSI solution matrix is computed at every GMRES iteration. This solver uses less memory but can be very slow.
       | =1, Use new (v11.2 and later) FSI GMRES solver where only part of the FSI solution matrix is computed at every GMRES iteration while the remaining rows of the FSI solution matrix is stored and re-used. This solver uses more memory but may be significantly faster.

       .. note:: 
          * Used only for full flow solution, :envvar:`IFVELP` = 0.
          * Both solvers are mathematically identical but there may be small differences arising from round off errors accumulated over several cycles

       .. seealso:: \ :envvar:`FSI_MEMORY` in :ref:`ComputationalLimitsNamelistLIMITS`.
     - NONE

.. index:: physical model options

.. _PhysicalModelOptions:

Physical Model Options
==========================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTPhysicalModelOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IACCF`
     - 0
     - Non-inertial reference frame flag

       | =0, not in a non-inertial reference frame, i.e., domain is not moving
       | =1, motion of non-inertial reference frame is prescribed
       | =2, evaluate reference frame motion using coupled rigid body dynamics model

       .. seealso:: \  

          * :envvar:`MOTN` namelist: :ref:`NonInertialReferenceFrameMOTN`

          * :envvar:`RBDATA` namelist: :ref:`RigidBodyNamelistRBDATA`
     - NONE

   * - :envvar:`ICAV`
     - 0
     - Cavitation option

       | =0, no cavitation
       | =1, activate cavitation

       .. seealso:: \  

          * :envvar:`PCAV` in :ref:`CavitationProperties`

          * :envvar:`IPCAV` in :ref:`CavitationPotentialModel`

          * :doc:`model-reference` -->  :ref:`cavitationBubbleFormationMR`.

          * :ref:`CavitationVoidRegionsTh` in the theory manual.
     - NONE

   * - :envvar:`ICAVMODEL`
     - 0
     - Cavitation model selection

       | =0, *Simplified* cavitation model: uses :envvar:`PCAV` and :envvar:`CAVRT` to estimate production of cavitation
       | =1, *Empirical* cavitation model: uses :envvar:`PCAV`, :envvar:`RHOCAV`, :envvar:`SIGMA`, :envvar:`CAVPROD` and :envvar:`CAVDISS` to estimate cavitation production and dissipation via an empirical model

       .. seealso:: \  

          * :envvar:`PCAV`, :envvar:`RHOCAV`, :envvar:`SIGMA`, :envvar:`CAVPROD` and :envvar:`CAVDISS`  in :ref:`CavitationProperties`

          * How do I model ... :ref:`cavitationBubbleFormationMR`.

          * :ref:`CavitationVoidRegionsTh` in the theory manual.
     - NONE

   * - :envvar:`ICAV_VOID`
     - 1
     - Cavitation void opening option

       | =0, passive cavitation model with transport: cavitating voids are **not** opened
       | =1, active cavitation model: cavitating voids **are** opened

       .. seealso:: How do I model ... :ref:`cavitationBubbleFormationMR`.

     - NONE

   * - :envvar:`ICHM`
     - 0
     - Reaction kinetics option

       | =0, no reaction kinetics calculations
       | =1, read namelist :envvar:`CHM` and do reaction kinetics calculations

       .. seealso:: \  :doc:`model-reference` -->  :ref:`chemicallyReactingFlowsMR`.
     - NONE

   * - :envvar:`ICLID`
     - 0
     - Flag for the collision model. Only applied to the coupled-motion General Moving Object (GMO) components

       | =0, no collisions
       | =1, activate collision model

       .. note:: Relevant only when GMO is turned on :envvar:`IMOBS` = 1.

       .. seealso:: \  

          * Information on General Moving Objects in :ref:`ComponentPropertiesGeneralMovingObjectsGMO`

          * :doc:`model-reference` -->  :ref:`gmoCollisionMR`.
     - NONE

   * - :envvar:`ICMPRS`
     - 0
     - Compressible flow option (mass conservation equation)

       | =0, incompressible flow or limited compressibility model
       | =1, compressible flow

       .. note:: Only Fluid #2 can be compressible and so must be used with 2 fluid option, :envvar:`NMAT` = 2.

       .. seealso:: \  

          * :envvar:`NMAT` in :ref:`PhysicalModelOptions`.

          * :doc:`model-reference` -->  :ref:`compressibleFlowMR`.
     - NONE

   * - :envvar:`IDPTH`
     - 0
     - Hydraulics output data flag

       | =0, no additional hydraulics output
       | =1, compute and output free-surface elevation, fluid depth, Froude number, depth-averaged velocity and velocity at a distance set by :envvar:`OFFSET` above the bottom of the reservoir.

       .. seealso:: \  

          * :envvar:`OFFSET` below.

          * :doc:`outputs` -->  :ref:`hydraulicDataOut`.
     - NONE

   * - :envvar:`IFSFT`
     - 0
     - Surface tension flag

       | =0, deactivate surface tension model
       | =1, activate surface tension model

       .. seealso:: \  

          * :envvar:`SIGMA` and :envvar:`CSIGMA` in :ref:`SurfaceTensionProperties`

          * :doc:`model-reference` -->  in :ref:`surfaceTensionMR`

          * Theory manual section: :ref:`SurfaceTensionWallAdhesionTh`
     - NONE 

   * - :envvar:`IFDFT`
     - 0
     - Drift-flux model flag

       | =0, deactivate drift-flux model
       | =1, activate drift-flux model

       .. note:: Requires either 2-fluid flow (\ :envvar:`NMAT` = 2), the variable-density model (\ :envvar:`IFRHO` :math:`\geq` 2 with :envvar:`NMAT` = 1) or solidification model (\ :envvar:`IFSLD` = 1).

       .. seealso:: \  

          * :envvar:`NMAT`, :envvar:`IFRHO`, :envvar:`IFSLD` all in this section.

          * Various parameters in :ref:`DriftFluxIVS`

          * :doc:`model-reference` -->  in :ref:`driftFluxMR`

          * Theory manual section: :ref:`DriftFluxModelTh`
     - NONE


   * - :envvar:`IFDFT_TYPE`
     - ...
     - Flag for the type of dispersed phase in the two-phase drift-flux model

       | =0, dispersed phase is made of liquid particles
       | =1, dispersed phase is made of solid particles
       | =2, dispersed phase is made of gaseous particles   

       | Defaults to 1 for granular flow model, :envvar:`IFGRN` = 1 or 2, to 2 for air entrainment model, :envvar:`IDFAIR` = 1, and to 0 otherweise.           

       .. note:: Requires :envvar:`IFDFT` = 1.

     - NONE     

   * - :envvar:`IFGRN`
     - 0
     - Granular flow model flag

       | =0, deactivate granular flow model
       | =1, granular flow with gas
       | =2, granular flow with liquid

       .. seealso:: \  

          * :doc:`model-reference` -->  in :ref:`granularFlowMR`

          * Theory manual section: :ref:`HighConcentrationGranularMediaModelTh`
     - NONE

   * - :envvar:`IFDRYING`
     - 0
     - Moisture drying model flag

       | =0, deactivate moisture drying model
       | =1, isothermal moisture drying model (requires :envvar:`IHTC` = 1)
       | =2, two-phase moisture drying model (requires :envvar:`IHTC` = 1, the two fluid phase change model, :envvar:`IPHCHG` = 2, and the non-condensable gas model, :envvar:`INCG` = 1)
       
       .. seealso:: \  :envvar:`IFMST`, :envvar:`IHTC`, :envvar:`IPHCHG`, :envvar:`INCG` all in this section.
     - NONE

   * - :envvar:`IFMST`
     - 1
     - Initial moisture content flag

       | =1, initial moisture content is defined as % of weight fraction of dry component weight
       | =2, initial moisture content is defined as macroscopic moisture density (weight per unit bulk component volume).

       .. note:: Requires the activation of a moisture drying model, :envvar:`IFDRYING` = 1 or 2.

       .. seealso:: \  :envvar:`IFDRYING` above.
     - NONE

   * - :envvar:`IFLFOAM`
     - 0
     - Lost foam model flag

       | =0, deactivate lost foam model
       | =1, full lost foam model, with heat transfer and flow
       | =2, simple lost foam model, where only the metal/foam interface is tracked

       .. note:: Requires the activation of the heat transfer model between fluid and components, :envvar:`IHTC` = 1.

       .. seealso:: \  

          * :envvar:`IHTC` in :ref:`HeatTransferOptionsIVS`.

          * :doc:`model-reference` -->  in :ref:`lostFoamMR`

          * Theory manual section: :ref:`LostFoamModelTh`
     - NONE

   * - :envvar:`IFVISWAT`
     - 2
     - Flag for viscous flow for shallow water model.

       | =0, inviscid flow
       | =1, laminar flow
       | =2, turbulent flow

       .. note:: Relevant only mesh blocks with shallow water model, :envvar:`ISWATLOC` = 1.

       .. seealso:: \  

          * :envvar:`ISWATLOC` in :ref:`MeshGeneratorMESH`.

          * :doc:`model-reference` -->  in :ref:`shallowWaterFlowsMR`
     - NONE

   * - :envvar:`IELAST`
     - 0
     - Visco-elastic-plastic stress model flag. The model simulates elastic stresses within fluid.

       | =0, model not activated -- no elastic stress computed
       | =1, Elasto-viscoplastic model activated. Models Bingham-like materials whereby elastic stress is limited by the yield stress limit.
       | =2, Oldroyd-B model. This model allows the user to specify the sear modulus and relaxation time parameter to control the rate of relaxation of the elastic stresses with the fluids.
       | =3, Giesekus model. This model builds upon the Oldroyd-B model with the inclusion of a mobility factor.
       | =4, user-customizable model. User can specify any of the built-in parameters, as well as create new user parameters. At minimum, elastic modulus must be provided.

       .. seealso:: \  

          :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`.

          :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - NONE

   * - :envvar:`IELADV`
     - 1
     - Advection flag for elastic stress tensor components. Advection can be turned off for simulations where there are very large elastic stresses with only small movements.

       | =0, no advection
       | =1, second-order advection

       .. note:: Relevant only with the elastic-plastic model above, when :envvar:`IELAST` :math:`>` 0.

       .. seealso:: \  

          :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`.

          :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - NONE

   * - :envvar:`IFENRG`
     - ...
     - Flag for internal energy evaluation

       | =0, no energy solution
       | =2, solve transport equation for internal energy (1st order advection)
       | =3, solve energy transport equation using monotonicity preserving, second order method. Not used for two-fluid compressible flow with sharp interface.

       .. note:: Defaults to 0 if :envvar:`ICMPRS` = 0; defaults to 2 if :envvar:`ICMPRS` = 1.

       .. seealso:: \  

          * :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.

          * :doc:`model-reference` -->  :ref:`EnergyAdvectionMR`.
     - NONE

   * - :envvar:`IFRHO`
     - ...
     - Flag for density evaluation

       | =0, constant uniform density
       | =1, evaluate density as function of fluid fraction and local temperature
       | =2, solve transport equation for density (1st order advection)
       | =3, solve density transport equation using monotonicity preserving, second order method. Not used for two-fluid compressible flow with sharp interface.

       .. note:: Defaults to 0 if :envvar:`NMAT` = 1; defaults to 1 if :envvar:`NMAT` = 2 and :envvar:`ICMPRS` = 0; defaults to 2 if :envvar:`ICMPRS` = 1. 

       .. seealso:: \  

          * :envvar:`NMAT` in :ref:`FlowModeOptions`.

          * :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.

          * :doc:`model-reference` -->  :ref:`DensityAdvectionMR` and :ref:`flowWithDensityVariationsMR`
     - NONE

   * - :envvar:`IFTHEXP`
     - 0
     - Thermal expansion flag for flow with density a function of temperature

       | =0, no volume expansion
       | =1, fluid volume expands in accordance with density charges

       .. note:: Requires :envvar:`IFRHO` = 1 and :envvar:`IFENRG` = 2 or 3, or :envvar:`ICMPRS` = 1.

       .. seealso:: \  

          * :envvar:`IFRHO`, :envvar:`IFENRG` and :envvar:`ICMPRS`, all in this section.

          * :doc:`model-reference` -->  :ref:`buoyantFlowMR`
     - NONE

   * - :envvar:`IFSPRAY`
     - 0
     - Spray cooling model activation flag for thermal die cycling simulations

       | =0, no spray cooling
       | =1, activate spray cooling

       .. note:: Requires thermal die cycle to be on (:envvar:`NCYC` > 0 and :envvar:`ISEG_TYPE(n)` = 4.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`thermalDieCyclingMR` --> :ref:`SprayCoolingThermalDieCycling`.
     - NONE

   * - :envvar:`IFSLD`
     - 0
     - Solidification model flag

       | =0, no solidification
       | =1, activate solidification

       .. note:: Requires energy transport to be turned on (:envvar:`IFENRG` = 2 or 3).

       .. seealso:: \  :doc:`model-reference` -->  :ref:`solidificationSectionMR`
     - NONE

   * - :envvar:`IFSLD_DRG`
     - 1
     - Solidified fluid flow model flag

       | =0, viscosity-based
       | =1, Darcy drag force-based

       .. note:: Requires solidification model (:envvar:`IFSLD` = 1).

       .. seealso:: \  :doc:`model-reference` -->  :ref:`solidificationSectionMR`
     - NONE

   * - :envvar:`IFIRON`
     - 0
     - Iron solidification model flag

       | =0, deactivates cast iron solidification model
       | =1, activates cast iron solidification model. Requires :envvar:`IFSLD` = 1.

       .. note:: Volume changes computed by the iron model are coupled only to the simple solidification shrinkage model, :envvar:`ISHRNK` = 2.
     - NONE

   * - :envvar:`ITHRMST`
     - 0
     - Flag for the thermal stress evolution (TSE) model

       | =0, deactivates thermal stress evolution in the solidified fluid region
       | =1, activates thermal stress evolution in the solidified fluid region.

       .. note:: Requires solidification model, :envvar:`IFSLD` = 1.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`
     - NONE

   * - :envvar:`ITETTSE`
     - 0
     - Flag to use tetrahedral meshing to generate the mesh of the solidified fluid region of the thermal stress evolution model. Default is hexahedral meshes, and this value is overridden when reading in an existing mesh from a file (see :envvar:`IFFEMF` in :ref:`namelistXPUTFileControlOptions`).

       | =0 use hexahedral meshes for thermal stress evolution (TSE) regions
       | =1 use tetrahedral meshes for thermal stress evolution (TSE) regions

       .. note:: Used only with TSE (\ :envvar:`ITHRMST` = 1) model.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`
     - NONE

   * - :envvar:`ICPLTSE`
     - 0
     - Flag to control coupling between the solidified fluid region (the Thermal Stress Evolution region) and neighboring Fluid Structure Interaction (FSI) components (see :envvar:`IFSI(m)` in :ref:`ComponentPropertiesFluidStructureInteractionFSImodel`). Default is only basic constraining/non-constraining behavior between the TSE region and neighboring FSI components (see :envvar:`IFSOFT(m)` in :ref:`ComponentPropertiesThermalStressEvolutionTSEModel`).

       | =0 basic coupling between the thermal stress evolution (TSE) region and all  neighboring components. Can still define constraining and non-constraining option.
       | =1 partial coupling between the thermal stress evolution (TSE) region and all neighboring fluid structure interaction (FSI) components. Selection of this option allows the solidified fluid region to slide past and pull away from neighboring FSI components but not interfere, and tangential forces are controlled by a friction parameter (see :envvar:`FRCTTSE` below). Note that this overrides any constraint selection (:envvar:`IFSOFT(m)` in :ref:`ComponentPropertiesThermalStressEvolutionTSEModel`) and has no effect on regular components (i.e., components where :envvar:`IFSI(m)` = 0).

       .. note:: Used only with TSE (\ :envvar:`ITHRMST` = 1) model.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`
     - NONE

   * - :envvar:`FRCTTSE`
     - 0.0
     - Friction coefficient between Thermal Stress Evolution (TSE) region and neighboring Fluid Structure Interaction (FSI) components. A negative value indicates that the coefficient is infinite (i.e., tangential traction is not limited), and a positive value indicates the friction coefficient. Its value represents the ratio between the limit of the magnitude of tangential traction to the normal traction between the TSE region and the component face. Physical values are typically less than 1.0.

       .. note:: Used only with TSE (\ :envvar:`ITHRMST` = 1) model when coupling between the TSE region and neighboring FSI components is specified (\ :envvar:`ICPLTSE` = 1).

       .. seealso:: \  :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`
     - NONE

   * - :envvar:`IRMFLUX`
     - 0
     - Flag for the net volume flux at mesh wave boundaries

       | =0, include net mean volume flux at wave boundaries
       | =1, eliminate net mean volume flux at wave boundaries.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`waveBoundaryConditionsMR`
     - NONE    

   * - :envvar:`IFVIS`
     - 0
     - Viscosity and turbulence options flag

       | =0, local viscosity evaluation (no turbulence model)
       | =1, Prandtl mixing length
       | =2, turbulent energy model
       | =3, two-equation (k-|epsilon|) turbulence model
       | =4, Renormalized Group Theory model (RNG)
       | =5, two-equation (k-|omega|) turbulence model
       | =-1, large eddy simulation model (this model is only valid for limited cases)

       .. seealso:: \  

          * :ref:`TurbulenceandViscousOptions` and :ref:`TurbulenceEquationCoefficientsandDiffusionParameters`.

          * :doc:`model-reference` -->  :ref:`turbulenceSectionMR`

          * Theory manual section: :ref:`TurbulenceModelsTh`
     - NONE

   * - :envvar:`IFVISC`
     - 0
     - Viscous flow flag

       | =0, inviscid flow
       | =1, viscous flow

       .. note:: The viscous flow model must be activated to use a turbulence model.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`ComputingViscousStressesMR`
     - NONE

   * - :envvar:`IFMU`
     - ...
     - Force output of fluid dynamic viscosity

       | =0, no output of fluid viscosity
       | =1, output fluid viscosity

       .. note:: Defaults to 0 for one-fluid, Newtonian, laminar flow problems, 1 otherwise.
     - NONE

   * - :envvar:`IHTC`
     - 0
     - Fluid/component heat transfer flag 

       | =0, no heat transfer
       | =1, activate heat transfer within geometry components, between fluid and components, and components and void

       .. seealso:: \  :doc:`model-reference` -->  :ref:`heatTransferAndConductionsInComponentsMR`
     - NONE

   * - :envvar:`IMEMB`
     - 0
     - Deforming elastic membrane and wall model flag

       | =0, deactivate the model
       | =1, activate the model 

       .. seealso:: \  :doc:`model-reference` -->  :ref:`elasticMembraneMR`
     - NONE

   * - :envvar:`IMOBS`
     - 0
     - General moving object (GMO) model flag

       | =0, deactivate the GMO model
       | =1, activate the GMO model 

       .. seealso:: \  

          * :doc:`model-reference` -->  :ref:`gmoBasicsMR`

          * Theory manual section: :ref:`GmoModelTh`
     - NONE

   * - :envvar:`IMUT`
     - 0
     - Thixotropic viscosity flag

       | =0, standard model, no thixotropy
       | =1, thixotropic viscosity model with time-dependent flow thickening and thinning.

       .. note:: The thixotropic viscosity model is only relevant when used with a non-Newtonian viscosity model, :envvar:`IMU1` = 2, 3, 5, 6 or 7.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`thixotropicFluidsMR`
     - NONE

   * - :envvar:`INCG`
     - 0
     - Non-condensable gas model flag

       | =0, no non-condensable gas component in the gas phase
       | =1, activate non-condensable gas model

       .. note:: Only used with 2-fluid model :envvar:`NMAT` = 2 with the compressible fluid option, :envvar:`ICMPRS` = 1 along with the two-fluid phase change model, :envvar:`IPHCHG` = 2.

       .. seealso:: \  

          * :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.

          * :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`
     - NONE

   * - :envvar:`IRSAT`
     - 0
     - Flag to control input parameters for non-condensable gas model

       | =0, all input parameters for non-condensable gas model are in volume fraction of non-condensable gas
       | =1, all input parameters for non-condensable gas model are in relative saturation of vapor

       .. note:: Only used with non-condensable gas model (\ :envvar:`INCG` = 1)

       .. seealso:: \  

          * :envvar:`INCG` in this section.

          * :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`
     - NONE

   * - :envvar:`IPHCHG`
     - 0
     - Phase change and bubble model flag

       =0, constant pressure void regions

       =1, constant pressure void regions with vaporization, for use with one-fluid flow with free surfaces (:envvar:`NMAT` = 1, :envvar:`ITB` = 1)

       =2, two-fluid phase change model with fluid #1 representing the liquid and fluid #2 the compressible vapor phase. For use with two-fluid compressible flow (:envvar:`NMAT` = 2, :envvar:`ICMPRS` = 1)

       =3, adiabatic bubble model, for use with one-fluid flow with free surfaces (:envvar:`NMAT` = 1, :envvar:`ITB` = 1)

       =4, thermal bubbles with heat transfer. Each bubble's pressure and temperature are dynamically computed from equation of state for perfect gas. For use with one-fluid flow with free surfaces (:envvar:`NMAT` = 1, :envvar:`ITB` = 1)

       =5, thermal bubbles with heat transfer and phase change. Each bubble's pressure and temperature are dynamically computed from equation of state for perfect gas. For use with one-fluid flow with free surfaces (:envvar:`NMAT` = 1, :envvar:`ITB` = 1).

       .. seealso:: \  

          * :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.

          * :doc:`model-reference` -->  :ref:`condensationEvaporationOneFluidThermalBubblesMR` for one-fluid modeling and :ref:`condensationEvaporationTwoFluidsMR` for two-fluid modeling.
     - NONE

   * - :envvar:`ICROTBC`
     - 0
     - Flag for adding counter rotating flow component at inlet mesh boundaries for non-inertial reference frame (RF) motion model (:envvar:`IACCF` :math:`>` 0)

       | =0, do not add counter rotating flow component
       | =1, add counter rotating flow component at inlet mesh boundaries based on the current RF motion.

       .. seealso:: \  

          * :envvar:`IACCF` above.

          * :doc:`model-reference` -->  :ref:`nonInertialReferenceFrameMotionMR`
     - NONE

   * - :envvar:`ISCOUR`
     - 0
     - Flag for sediment scour model 

       | =0, model is not activated
       | =1, model is activated

       .. seealso:: \  :doc:`model-reference` -->  :ref:`sedimentScourMR`
     - NONE     

   * - :envvar:`ISCPOT`
     - ...
     - Flag for the output of the wall shear stress 

       | =0, no shear stress output
       | =1, compute and output wall shear stress

       .. note:: Defaults to 1 when sediment scour model is active, :envvar:`ISCOUR` = 1, and to 0 otherwise.
     - NONE     

   * - :envvar:`ISHRNK`
     - 0
     - Solidification shrinkage flag

       Shrinkage models may only be used for one-fluid problems (:envvar:`NMAT` = 1) with free surface (:envvar:`ITB` = 1) and solidification (:envvar:`IFSLD` = 1).

       | =0, no shrinkage model
       | =1, activate dynamic shrinkage model
       | =2, activate simple shrinkage model, based only on heat transfer and solidification solution

       .. seealso:: \  

          * :envvar:`NMAT`, :envvar:`ITB` and :envvar:`IFSLD`, all in this section.

          * :doc:`model-reference` -->  :ref:`solidificationShrinkageMR`
     - NONE

   * - :envvar:`ISHRNK2`
     - 0
     - Type of feeding flag for the simple solidification shrinkage model

       =0, gravity feeding until maximum solid fraction in the mushy zone reaches the coherency point :envvar:`FSCO`, after which switches to interdendritic feeding along the temperature gradient

       =1, interdendritic feeding along the temperature gradient all the time - from hot zones to cold.

       .. note:: Defaults to 1 when gravity is zero, :envvar:`GX` = :envvar:`GY` = :envvar:`GZ` = 0.0.

       .. seealso:: \  

          * :envvar:`FSCO` in :ref:`SolidificationProperties`

          * :envvar:`GX`, :envvar:`GY` and :envvar:`GZ` in :ref:`GravityAndNIRFOptions`

          * :doc:`model-reference` -->  :ref:`solidificationShrinkageMR`
     - NONE

   * - :envvar:`IMUPOR`
     - 0
     - Microporosity model flag

       | =0, no microporosity is computed
       | =1, activate microporosity model

       .. note:: Requires :envvar:`RHOFS` :math:`>` :envvar:`RHOF` and :envvar:`FSCR` :math:`<` 1.0

       .. seealso:: \  

          * :envvar:`RHOF` in :ref:`DensityProperties`.

          * :envvar:`RHOFS` and :envvar:`FSCR` in :ref:`SolidificationProperties`.
     - NONE

   * - :envvar:`ISTNR`
     - 0
     - Strain rate calculation flag

       | =0, do not calculate strain rates
       | =1, calculate strain rates

       .. note:: Defaults to 1 if :envvar:`IFVIS` = 4 or :envvar:`IVISH` :math:`>` 0 or :envvar:`IMU1` = 2, 3, 5, 6 or 7; otherwise defaults to 0.

       .. seealso:: \  :envvar:`IFVIS`, :envvar:`IVISH` and :envvar:`IMU1`, all in this section.
     - NONE

   * - :envvar:`ISWAT`
     - 0
     - Shallow water model flag

       | =0, do not use shallow water model
       | =1, use shallow water model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`shallowWaterFlowsMR`
     - NONE

   * - :envvar:`ITB`
     - 0
     - Indicator for free surfaces or sharp interfaces

       | =0, no free surface or sharp interface
       | =1, free surface or sharp interface

       .. seealso:: \  

          * Theory manual section: :ref:`FluidInterfacesAndFreeSurfacesTh`
     - NONE

   * - :envvar:`ITHEAD`
     - 0
     - Flag for the output of the total hydraulic head

       | =0, no hydraulic head output
       | =1, compute and output the total hydraulic head. The output includes a spatial variable and an average hydraulic head at each flux surface.

       .. seealso:: \  :doc:`outputs` -->  :ref:`hydraulicDataOut`.
     - NONE

   * - :envvar:`IVISH`
     - 0
     - Viscous heating flag

       | =0, no viscous heating
       | =1, include viscous heating effects

       .. note:: Relevant only with energy transport (:envvar:`IFENRG` = 2 or 3) and viscous flow (:envvar:`IFVISC` = 1). 

       .. seealso:: \  

          * :envvar:`IFENRG` and :envvar:`IFVISC` in :ref:`PhysicalModelOptions`.

          * :doc:`model-reference` -->  :ref:`viscosityHeatingMR`.
     - NONE

   * - :envvar:`IVORT`
     - 0
     - Vorticity output flag

       | =0, do not compute and store vorticity vector for post-processing
       | =1, compute and store vorticity vector for post-processing
     - NONE

   * - :envvar:`IWSH`
     - 1
     - Wall shear stress flag

       | =0, no wall shear stress
       | =1, wall shear stress

       .. note:: Only relevant for viscous flows (\ :envvar:`IFVISC` = 1)

       .. seealso:: \  :doc:`model-reference` -->  :ref:`wallEffectsMR`.
     - NONE

   * - :envvar:`NMAT`
     - ...
     - Number of materials

       .. note:: Defaults to 1 if :envvar:`ICMPRS` = 0; defaults to 2 if :envvar:`ICMPRS` = 1.

       .. seealso:: \  :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`OFFSET`
     - 0.0
     - Distance in z-direction above the bottom of a reservoir at which velocity is computed and stored as part of the Hydraulic data output.

       .. seealso:: \  

          * :envvar:`IDPTH` above.

          * :doc:`outputs` -->  :ref:`hydraulicDataOut`.
     - NONE

   * - :envvar:`RHOAIR`
     - ...
     - Air density for use in the calculation of wind shear stress on horizontal fluid surfaces, air drag for mooring lines, 
       default void/gas particle density and venting component loss coefficients. 

       | Defaults to air density in simulation units, which is 1.225 kg/m\ :sup:`3` in SI system.

       .. seealso:: \

          *  :ref:`WindShear` and :doc:`model-reference` -->  :ref:`windShearStressMR`.
          *  :ref:`ElasticSpringsandRopes` and :doc:`theory` -->  :ref:`mooringlinesth`.
          *  :ref:`ComponentPropertiesVents` and :doc:`model-setup` --> :ref:`flowventcomptype`.

     - [M/L\ :sup:`3`] 

   * - :envvar:`TAUBC`
     - 0.0
     - Relaxation time for fluid elevation change at rating curve and natural inlet boundaries. Used to dampen out possible noise in highly transient 
       flows at mesh boundaries with :envvar:`IRATING(n)` > 0, see :envvar:`IRATING` in :ref:`ratingcurves`.

     - [t]       

.. index:: plot output control

.. _PlotOutputControl:

Plot Output Control
==========================

| *n* :math:`\leq` *500, time index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTPlotOutputControl:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IDBG`
     - 0
     - Flag for additional debug data edits

       | =0, standard output
       | =1, force spatial, history and long print data edits if a pressure convergence problem or cycle restart occur
     - NONE

   * - :envvar:`IEDT`
     - 1
     - Selects the basis for long print and spatial plot intervals

       | =1, use time, :envvar:`TPRTD`, :envvar:`TPLTD`, :envvar:`TAPLTD`
       | =2, use fill fraction, :envvar:`PRTFRC`, :envvar:`PLTFRC`, :envvar:`PLTAFRC`
       | =3, use solidified fraction, :envvar:`PRTFRC`, :envvar:`PLTFRC`, :envvar:`PLTAFRC`
     - NONE

   * - :envvar:`IOVOID`
     - 0
     - Void ID tracking flag

       | =0, do not track individual void ID's
       | =1, track individual void ID's for void history data

       .. note:: Relevant only for one-fluid flows with sharp interfaces (\ :envvar:`NMAT` = 1 and :envvar:`ITB` = 1)

       .. seealso:: \  :envvar:`NMAT` and :envvar:`ITB` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`ISOLID`
     - ...
     - Controls use of optional solidification output data (i.e., solidification time, cooling rate at solidification, etc.)

       | =0, do not evaluate solidification output data
       | =1, evaluate solidification data and write it to :file:`flsgrf`

       .. note:: Defaults to 1 if the solidification model used (\ :envvar:`IFSLD` = 1), otherwise, defaults to 0. 

       .. seealso:: \  :envvar:`IFSLD` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`LPR`
     - 1
     - Debug level

       | =0, reduced output to the screen
       | =1, standard prints and output
       | :math:`>`\ 1, debug prints and output
     - NONE

   * - :envvar:`NCYCPT`
     - 1
     - Output control for thermal die cycling model; restart spatial data is written for the last :envvar:`NCYCPT` die cycles, in addition to the other requested restart spatial data edits using :envvar:`TPLTD`.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`thermalDieCyclingMR`.
     - NONE

   * - :envvar:`PLTFRC`
     - 0.1
     - Interval for restart spatial plots based on fill fraction (:envvar:`IEDT` = 2) or solid fraction (:envvar:`IEDT` = 3).
     - NON-DIM

   * - :envvar:`PLTAFRC`
     - 0.01
     - Interval for selected spatial plots based on fill fraction (:envvar:`IEDT` = 2) or solid fraction (:envvar:`IEDT` = 3).
     - NON-DIM

   * - :envvar:`SLDDT`
     - :envvar:`TWFIN`
     - Edit interval for writing spatial solidification data to :file:`flsgrf`
     - [t]

   * - :envvar:`TAPLTD(n)`
     - :envvar:`TWFIN` /100
     - Selected spatial data output interval from :envvar:`TEDIT(n-1)` to :envvar:`TEDIT(n)` 

     - [t]

   * - :envvar:`TEDIT(n)`
     - ...
     - Ending time of edit interval :envvar:`n`. Not used if unspecified. 
     - [t]
   

   * - :envvar:`THPLTD(n)`
     - :envvar:`TWFIN` /1000
     - History plot interval from :envvar:`TEDIT(n-1)` to :envvar:`TEDIT(n)`

     - [t]

   * - :envvar:`TPLTD(n)`
     - :envvar:`TWFIN` /10
     - Restart spatial plot interval from :envvar:`TEDIT(n-1)` to :envvar:`TEDIT(n)`

     - [t]

.. index:: active simulation control; restart data interval

.. _EventsRestart:

Active simulation control of restart data interval
----------------------------------------------------

.. seealso:: \  :doc:`model-reference` -->  :ref:`activeSimulationControlMR`.

| *m* :math:`\leq` *10, restart data interval event index*
| *k* :math:`\leq` *10, probe condition index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTEventsRestart:

.. list-table:: Namelist XPUT
   :widths: 25 15 40 20
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NEVENTS_RESTART`
     - 0
     - Number of events for restart data interval

       .. note:: Used only when :envvar:`NCYC` = 0.
     - NONE

   * - :envvar:`EVENT_NAME_RESTART(m)`
     - ' '
     - Event :envvar:`m` name (up to 50 characters)
     - NONE

   * - :envvar:`IF_EVENT_ENABLED_RESTART(m)`
     - 1
     - Event :envvar:`m` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IF_GLOBAL_RESTART(m)`
     - 0
     - Global condition flag for event :envvar:`m`

       | =0, use local conditions
       | =1, use global conditions

     - NONE

   * - :envvar:`IGLOBAL_RESTART(m)`
     - 0
     - Global condition id for event :envvar:`m` (used if :envvar:`IF_GLOBAL_RESTART(m)` = 1)
     - NONE

   * - :envvar:`NPROBES_RESTART(m)`
     - 0
     - Number of local probe conditions for event :envvar:`m` (used if :envvar:`IF_GLOBAL_RESTART(m)` = 0)
     - NONE

   * - :envvar:`EVENT_CONDITION_LOGIC_RESTART(m)`
     - ' '
     - Logical operator between probe conditions for event :envvar:`m`

       | ='ANY', event triggered when any of the enabled probe conditions satisfied
       | ='ALL', event triggered when all of the enabled probe conditions satisfied

       .. note:: Required when number of enabled probe conditions > 1
     - NONE

   * - :envvar:`EVENT_ACTION_RESTART(m)`
     - ' '
     - Event action for event :envvar:`m`

       | ='TPLTD', if :envvar:`IEDT` = 1
       | ='PLTFRC', if :envvar:`IEDT` = 2 or 3
     - NONE

   * - :envvar:`TPLTD_EVENT(t,m)`
     - 0.0
     - New :envvar:`TPLTD` table for event :envvar:`m`

       .. note:: Used when :envvar:`IEDT` = 1 and :envvar:`EVENT_ACTION_RESTART(m)` = 'TPLTD'
     - NONE

   * - :envvar:`PLTFRC_EVENT(t,m)`
     - 0.0
     - New :envvar:`PLTFRC` table for event :envvar:`m`

       .. note:: Used when :envvar:`IEDT` = 2 or 3, and :envvar:`EVENT_ACTION_RESTART(m)` = 'PLTFRC'
     - NONE

   * - :envvar:`IF_CONDITION_ENABLED_RESTART(k,m)`
     - 1
     - Probe condition :envvar:`k` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IPRBD_RESTART(k,m)`
     - 0
     - Probe id for probe condition :envvar:`k`
     - NONE

   * - :envvar:`IPRBSC_RESTART(k,m)`
     - 0
     - Scalar id for probe condition :envvar:`k`

       .. note:: Used when :envvar:`PRBVNAM_RESTART(k,m)` = 'SCSCLR'
     - NONE

   * - :envvar:`IPRBSCN_RESTART(k,m)`
     - 0
     - Additional scalar index for probe condition :envvar:`k`

       Sediment species id, when :envvar:`PRBVNAM_RESTART` = 'NSSPC', or
       Baffle flux surface id, when :envvar:`PRBVNAM_RESTART` = 'TRACERN'.
     - NONE

   * - :envvar:`PRBVNAM_RESTART(k,m)`
     - ...
     - Probe variable name for probe condition :envvar:`k`

       .. note:: Please check table :ref:`namelistXPUTTerminationControlPRBVNAM` for valid variable names and descriptions.
     - NONE

   * - :envvar:`IFPRBVABS_RESTART(k,m)`
     - 0
     - Specify if to use the absolute probe variable value for probe condition :envvar:`k`

       | =0, use the real value
       | =1, use absolute value
     - NONE

   * - :envvar:`PRBVROP_RESTART(k,m)`
     - ' '
     - Probe variable relational operator for probe condition :envvar:`k`

       | ='LT', probe condition satisfied when probe variable value is *less* than the critical value
       | ='LE', probe condition satisfied when probe variable value is *less* than or *equal* to the critical value
       | ='EQ', probe condition satisfied when probe variable value is *equal* to the critical value
       | ='NE', probe condition satisfied when probe variable value is *not equal* to the critical value
       | ='GE', probe condition satisfied when probe variable value is *greater* than or *equal* to the critical value
       | ='GT', probe condition satisfied when probe variable value is *greater* than the critical value
     - NONE

   * - :envvar:`PRBVAL_CRITICAL_RESTART(k,m)`
     - 0.0
     - Critical value for probe condition :envvar:`k`
     - NONE

   * - :envvar:`PRBDT_RESTART(k,m)`
     - 0.0
     - Duration after the critical value has reached for probe condition :envvar:`k`
     - [t]

.. index:: active simulation control; selected data interval

.. _EventsSelected:

Active simulation control of selected data interval
-----------------------------------------------------

.. seealso:: \  :doc:`model-reference` -->  :ref:`activeSimulationControlMR`.

| *m* :math:`\leq` *10, selected data interval event index*
| *k* :math:`\leq` *10, probe condition index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTEventsSelected:

.. list-table:: Namelist XPUT
   :widths: 25 15 40 20
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NEVENTS_SELECTED`
     - 0
     - Number of events for selected data interval
     - NONE

   * - :envvar:`EVENT_NAME_SELECTED(m)`
     - ' '
     - Event :envvar:`m` name (up to 50 characters)
     - NONE

   * - :envvar:`IF_EVENT_ENABLED_SELECTED(m)`
     - 1
     - Event :envvar:`m` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IF_GLOBAL_SELECTED(m)`
     - 0
     - Global flag for event :envvar:`m`

       | =0, use local conditions
       | =1, use global conditions

     - NONE

   * - :envvar:`IGLOBAL_SELECTED(m)`
     - 0
     - Global flag id event :envvar:`m` (used if :envvar:`IF_GLOBAL_SELECTED(m)` = 1)
     - NONE

   * - :envvar:`NPROBES_SELECTED(m)`
     - 0
     - Number of local probe conditions for event :envvar:`m` (used if :envvar:`IF_GLOBAL_SELECTED(m)` = 0)
     - NONE

   * - :envvar:`EVENT_CONDITION_LOGIC_SELECTED(m)`
     - ' '
     - Logical operator between probe conditions for event :envvar:`m`

       | ='ANY', event triggered when any of the enabled probe conditions satisfied
       | ='ALL', event triggered when all of the enabled probe conditions satisfied

       .. note:: Required when number of enabled probe conditions > 1
     - NONE

   * - :envvar:`EVENT_ACTION_SELECTED(m)`
     - ' '
     - Event action for event :envvar:`m`

       | ='TAPLTD', if :envvar:`IEDT` = 1
       | ='PLTAFRC', if :envvar:`IEDT` = 2 or 3
     - NONE

   * - :envvar:`TAPLTD_EVENT(t,m)`
     - 0.0
     - New :envvar:`TAPLTD` table for event :envvar:`m`

       .. note:: Used when :envvar:`IEDT` = 1 and :envvar:`EVENT_ACTION_SELECTED(m)` = 'TAPLTD'
     - NONE

   * - :envvar:`PLTAFRC_EVENT(t,m)`
     - 0.0
     - New :envvar:`PLTAFRC` table for event :envvar:`m`

       .. note:: Used when :envvar:`IEDT` = 2 or 3, and :envvar:`EVENT_ACTION_SELECTED(m)` = 'PLTAFRC'
     - NONE

   * - :envvar:`IF_CONDITION_ENABLED_SELECTED(k,m)`
     - 1
     - Probe condition :envvar:`k` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IPRBD_SELECTED(k,m)`
     - 0
     - Probe id for probe condition :envvar:`k`
     - NONE

   * - :envvar:`IPRBSC_SELECTED(k,m)`
     - 0
     - Scalar id for probe condition :envvar:`k`

       .. note:: Used when :envvar:`PRBVNAM_SELECTED(k,m)` = 'SCSCLR'
     - NONE

   * - :envvar:`IPRBSCN_SELECTED(k,m)`
     - 0
     - Additional scalar index for probe condition :envvar:`k`

       Sediment species id, when :envvar:`PRBVNAM_SELECTED` = 'NSSPC', or
       Baffle flux surface id, when :envvar:`PRBVNAM_SELECTED` = 'TRACERN'.
     - NONE

   * - :envvar:`PRBVNAM_SELECTED(k,m)`
     - ...
     - Probe variable name for probe condition :envvar:`k`

       .. note:: Please check table :ref:`namelistXPUTTerminationControlPRBVNAM` for valid variable names and descriptions.
     - NONE

   * - :envvar:`IFPRBVABS_SELECTED(k,m)`
     - 0
     - Specify if to use the absolute probe variable value for probe condition :envvar:`k`

       | =0, use the real value
       | =1, use absolute value
     - NONE

   * - :envvar:`PRBVROP_SELECTED(k,m)`
     - ' '
     - Probe variable relational operator for probe condition :envvar:`k`

       | ='LT', probe condition satisfied when probe variable value is *less* than the critical value
       | ='LE', probe condition satisfied when probe variable value is *less* than or *equal* to the critical value
       | ='EQ', probe condition satisfied when probe variable value is *equal* to the critical value
       | ='NE', probe condition satisfied when probe variable value is *not equal* to the critical value
       | ='GE', probe condition satisfied when probe variable value is *greater* than or *equal* to the critical value
       | ='GT', probe condition satisfied when probe variable value is *greater* than the critical value
     - NONE

   * - :envvar:`PRBVAL_CRITICAL_SELECTED(k,m)`
     - 0.0
     - Critical value for probe condition :envvar:`k`
     - NONE

   * - :envvar:`PRBDT_SELECTED(k,m)`
     - 0.0
     - Duration after the critical value has reached for probe condition :envvar:`k`
     - [t]

.. index:: active simulation control; history data interval

.. _EventsHistory:

Active simulation control of history data interval
----------------------------------------------------

.. seealso:: \  :doc:`model-reference` -->  :ref:`activeSimulationControlMR`.

| *m* :math:`\leq` *10, history data interval event index*
| *k* :math:`\leq` *10, probe condition index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTEventsHistory:

.. list-table:: Namelist XPUT
   :widths: 25 15 40 20
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NEVENTS_HISTORY`
     - 0
     - Number of events for history data interval
     - NONE

   * - :envvar:`EVENT_NAME_HISTORY(m)`
     - ' '
     - Event :envvar:`m` name (up to 50 characters)
     - NONE

   * - :envvar:`IF_EVENT_ENABLED_HISTORY(m)`
     - 1
     - Event :envvar:`m` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IF_GLOBAL_HISTORY(m)`
     - 0
     - Global condition flag for event :envvar:`m`

       | =0, use local conditions
       | =1, use global conditions

     - NONE

   * - :envvar:`IGLOBAL_HISTORY(m)`
     - 0
     - Global condition id for event :envvar:`m` (used if :envvar:`IF_GLOBAL_HISTORY(m)` = 1)
     - NONE

   * - :envvar:`NPROBES_HISTORY(m)`
     - 0
     - Number of local probe conditions for event :envvar:`m` (used if :envvar:`IF_GLOBAL_HISTORY(m)` = 0)
     - NONE

   * - :envvar:`EVENT_CONDITION_LOGIC_HISTORY(m)`
     - ' '
     - Logical operator between probe conditions for event :envvar:`m`

       | ='ANY', event triggered when any of the enabled probe conditions satisfied
       | ='ALL', event triggered when all of the enabled probe conditions satisfied

       .. note:: Required when number of enabled probe conditions > 1
     - NONE

   * - :envvar:`EVENT_ACTION_HISTORY(m)`
     - ' '
     - Event action for event :envvar:`m`

       | ='THPLTD' only
     - NONE

   * - :envvar:`THPLTD_EVENT(t,m)`
     - 0.0
     - New :envvar:`THPLTD` table for event :envvar:`m`
     - NONE

   * - :envvar:`IF_CONDITION_ENABLED_HISTORY(k,m)`
     - 1
     - Probe condition :envvar:`k` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IPRBD_HISTORY(k,m)`
     - 0
     - Probe id for probe condition :envvar:`k`
     - NONE

   * - :envvar:`IPRBSC_HISTORY(k,m)`
     - 0
     - Scalar id for probe condition :envvar:`k`

       .. note:: Used when :envvar:`PRBVNAM_HISTORY(k,m)` = 'SCSCLR'
     - NONE

   * - :envvar:`IPRBSCN_HISTORY(k,m)`
     - 0
     - Additional scalar index for probe condition :envvar:`k`

       Sediment species id, when :envvar:`PRBVNAM_HISTORY` = 'NSSPC', or
       Baffle flux surface id, when :envvar:`PRBVNAM_HISTORY` = 'TRACERN'.
     - NONE

   * - :envvar:`PRBVNAM_HISTORY(k,m)`
     - ...
     - Probe variable name for probe condition :envvar:`k`

       .. note:: Please check table :ref:`namelistXPUTTerminationControlPRBVNAM` for valid variable names and descriptions.
     - NONE

   * - :envvar:`IFPRBVABS_HISTORY(k,m)`
     - 0
     - Specify if to use the absolute probe variable value for probe condition :envvar:`k`

       | =0, use the real value
       | =1, use absolute value
     - NONE

   * - :envvar:`PRBVROP_HISTORY(k,m)`
     - ' '
     - Probe variable relational operator for probe condition :envvar:`k`

       | ='LT', probe condition satisfied when probe variable value is *less* than the critical value
       | ='LE', probe condition satisfied when probe variable value is *less* than or *equal* to the critical value
       | ='EQ', probe condition satisfied when probe variable value is *equal* to the critical value
       | ='NE', probe condition satisfied when probe variable value is *not equal* to the critical value
       | ='GE', probe condition satisfied when probe variable value is *greater* than or *equal* to the critical value
       | ='GT', probe condition satisfied when probe variable value is *greater* than the critical value
     - NONE

   * - :envvar:`PRBVAL_CRITICAL_HISTORY(k,m)`
     - 0.0
     - Critical value for probe condition :envvar:`k`
     - NONE

   * - :envvar:`PRBDT_HISTORY(k,m)`
     - 0.0
     - Duration after the critical value has reached for probe condition :envvar:`k`
     - [t]

.. index:: pressure iteration options

.. _PressureIterationOptions:

Pressure Iteration Options
==============================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTPressureIterationOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`EPSADJ`
     - 1.0
     - Multiplier for the calculated pressure iteration convergence criterion 

       Alternate: :envvar:`EPSI`

       The convergence criterion is set automatically at each time step using :envvar:`EPSADJ`.

       | =1.0, standard convergence criterion
       | :math:`>`\ 1.0, coarser convergence
       | :math:`<`\ 1.0, finer convergence

       .. note:: Used only when :envvar:`IFDYNCONV` = 1.

       .. seealso:: \  :envvar:`IFDYNCONV` in :ref:`ConvergenceCriteriaOptions`.
     - NON-DIM

   * - :envvar:`EPSI`
     - -1.0
     - Constant baseline pressure iteration convergence criterion

       Alternate: :envvar:`EPSADJ`

       .. note:: Used only when :envvar:`IFDYNCONV` = 0 and :envvar:`EPSI` :math:`>` 0.0, in which case the automatic convergence criterion selection, controlled by :envvar:`EPSADJ`, is not used.

       .. seealso:: \  :envvar:`IFDYNCONV` in :ref:`ConvergenceCriteriaOptions`.
     - [1/t]

   * - :envvar:`ETA_REL`
     - 0.05
     - Multiplier for the calculated relative convergence criterion for pressure iterations. 

       .. seealso:: \  :ref:`PressureIterationConvergenceMR`.

     - NON-DIM

   * - :envvar:`ETA_ABS`
     - 1.0E-4
     - Multiplier for the calculated steady-state absolute convergence criterion.

       .. seealso:: \  :ref:`PressureIterationConvergenceMR`.

     - NON-DIM

   * - :envvar:`IADIX`
     - 1
     - Pressure iteration option for x-direction

       | =0, do not use line-implicit method
       | =1, use line implicit method (ADI)

       .. note:: Used only when :envvar:`IGMRES` = 2.
     - NONE

   * - :envvar:`IADIY`
     - 1
     - Pressure iteration option for y-direction

       | =0, do not use line-implicit method
       | =1, use line implicit method (ADI)

       .. note:: Used only when :envvar:`IGMRES` = 2.
     - NONE

   * - :envvar:`IADIZ`
     - 1
     - Pressure iteration option for z-direction

       | =0, do not use line-implicit method
       | =1, use line implicit method (ADI)

       .. note:: Used only when :envvar:`IGMRES` = 2.
     - NONE

   * - :envvar:`IGMRES`
     - 1
     - Pressure iteration option

       | =0 use SOR method
       | =1 use generalized minimum residual method (GMRES)
       | =2, use ADI method
     - NONE

   * - :envvar:`IOPT_GMRES`
     - 2
     - Convergence criterion for the GMRES pressure solver. The GMRES pressure solver uses two types of convergence criteria. The absolute convergence criterion (v11.1 and earlier) uses a simple absolute convergence limit for the residual. The hybrid convergence criterion (v11.2 and later) uses a combination of absolute and relative convergence limits. The hybrid convergence criterion is more generic and accurate. However, because it often iterates more, it may be computationally more expensive for some problems.

       | =1 use absolute convergence criterion (v11.1 and earlier)
       | =2 use hybrid convergence criterion (v11.2 and later)

       .. note:: 
          * Currently, this variable is not available in the GUI and can be specified only in the :file:`prepin.*` file. 
          * If :envvar:`IFDYNCONV` = 0 and the user specifies the value of :envvar:`EPSI` , then the absolute convergence criterion would be used, since it is consistent with a user specified absolute convergence limit.
          * :envvar:`IOPT_GMRES` = 0 is deprecated and is equivalent to :envvar:`IOPT_GMRES` =1

     - NONE

   * - :envvar:`IPUN`
     - 1
     - Uniform pressure adjustment for compressible flows (if :envvar:`IPUN` = 0, there is no adjustment; if :envvar:`IPUN` = 1 adjust the pressure once at the end of each cycle).

       .. note:: Relevant only for 2-fluid, compressible flow (\ :envvar:`NMAT` = 2 and :envvar:`ICMPRS` = 1).

       .. seealso:: \  :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`OMEGA`
     - ...
     - Relaxation factor used in pressure iteration solvers.

       Default value is defined as follows (logic applied in this order):

       | 1.0, if :envvar:`ICMPRS` = 1, or :envvar:`IMP` = 0, or :envvar:`IMPVIS` = 2
       | 2.0, if :envvar:`IADIX` = :envvar:`IADIY` = :envvar:`IADIZ` = 1
       | 1.7, for the SOR pressure solver
       | 1.0, for the GMRES pressure solver, when :envvar:`IMPMOB` = 0
       | :math:`<` 1.0 if :envvar:`IMPMOB` = 1, the actual values based on the GMO to fluid density ratio.

       .. seealso:: \  

          * :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.

          * :envvar:`IADIX` in :ref:`PressureIterationOptions`.
     - NON-DIM

   * - :envvar:`IAUTOSET`
     - 0
     - Flag to use algorithm to automatically adjust subspace size used for GMRES pressure solver.

       =0 do not automatically adjust pressure solver GMRES subspace size; :envvar:`MRSTRT` is fixed.

       =1 automatically adjust pressure solver GMRES subspace size; :envvar:`MRSTRT` changes automatically.

       .. note:: Used only with GMRES pressure iteration solver, :envvar:`IGMRES` = 1.

       .. seealso:: \  :envvar:`MRSTRT` in :ref:`ComputationalLimitsNamelistLIMITS`
     - NONE

   * - :envvar:`ITRNMAX`
     - 7
     - Target number of iterations for GMRES pressure solver when :envvar:`IAUTOSET` = 1.

       .. note:: Used only when :envvar:`IAUTOSET` = 1.
     - NONE

.. index:: print output control

.. _PrintOutputControl:

Print Output Control
============================

| *n* :math:`\leq` *500, time index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTPrintOutputControl:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IEDT`
     - 1
     - Selects the basis for long print and spatial plot intervals

       | =1, use time, :envvar:`TPRTD`, :envvar:`TPLTD`, :envvar:`TAPLTD`
       | =2, use fill fraction, :envvar:`PRTFRC`, :envvar:`PLTFRC`, :envvar:`PLTAFRC`
       | =3, use solidified fraction, :envvar:`PRTFRC`, :envvar:`PLTFRC`, :envvar:`PLTAFRC`
     - NONE

   * - :envvar:`LPR`
     - 1
     - Debug level

       | =0, reduced output to the screen
       | =1, standard prints and output
       | :math:`>`\ 1, debug prints and output
     - NONE

   * - :envvar:`PRTFRC`
     - 0.1
     - Interval for long prints based on fill fraction (:envvar:`IEDT` = 2) or solid fraction (:envvar:`IEDT` = 3).
     - NON-DIM

   * - :envvar:`TSPRTD(n)`
     - :envvar:`TWFIN` /100
     - Short print interval from :envvar:`TEDIT(n-1)` to :envvar:`TEDIT(n)`

     - [t]

   * - :envvar:`ESPRTDT`
     - 10.0
     - Short print wall clock interval (in minutes).

     - [t]

   * - :envvar:`TEDIT(n)`
     - ...
     - Ending time of edit interval :envvar:`n`. Not used if unspecified.
     - [t]

   * - :envvar:`TPRTD(n)`
     - :envvar:`TWFIN`/10
     - Long print interval from :envvar:`TEDIT(n-1)` to :envvar:`TEDIT(n)`

     - [t]

.. index:: shallow water model options

.. _ShallowWaterModelOptions:

Shallow Water Model Options
============================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTPShallowWater:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ISWAT`
     - 0
     - Shallow water model flag

       | =0, do not use shallow water model
       | =1, use shallow water model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`shallowWaterFlowsMR`
     - NONE

   * - :envvar:`IFVISWAT`
     - 2
     - Flag for viscous flow for shallow water model.

       | =0, inviscid flow
       | =1, laminar flow
       | =2, turbulent flow

       .. note:: Relevant only mesh blocks with shallow water model, :envvar:`ISWATLOC` = 1.

       .. seealso:: \  

          * :envvar:`ISWATLOC` in :ref:`MeshGeneratorMESH`.

          * :doc:`model-reference` -->  in :ref:`shallowWaterFlowsMR`
     - NONE

   * - :envvar:`IMP_SWAT`
     - 1
     - Pressure-velocity coupling Explicit/Implicit option for the shallow water model

       | =0, explicit coupling
       | =1, implicit coupling
     - NONE    

   * - :envvar:`IORDER_SWAT`
     - 3
     - Momentum equation approximation flag for the shallow water model

       | =0, linear approximation
       | =1, first order
       | =2, second order in space and time
       | =3, monotonicity-preserving second order

       .. note:: Always set to 1 when :envvar:`IMPADV` = 1.

       .. seealso:: \  :envvar:`IMPADV` in :ref:`ExplicitImplicitOptions`.
     - NONE

   * - :envvar:`ALPHA_SWAT`
     - 1.0
     - Controls weighting of upstream values in advection approximations in the shallow water model when :envvar:`IORDER_SWAT` = 1

       | =0.0, central differencing
       | =1.0, upstream differencing

       .. note:: Should always be in the range between 0.0 and 1.0.
     - NONE

   * - :envvar:`BTMSHR`
     - 0.0026
     - Drag coefficient for quadratic bottom shear stress. Used when :envvar:`ISWATLOC` = 1 and :envvar:`IFVISWAT` = 2.
     - NONE

   * - :envvar:`CD_MAX`
     - 0.1
     - Maximum value of drag coefficient of bottom shear stress 
     - NONE

   * - :envvar:`MANFILE`
     - ...
     - File name for legend data file defining Manning's roughness coefficient 
     - NONE


.. index:: termination control

.. index:: active simulation control; termination

.. index:: termination control; active simulation control

.. _TerminationControl:

Termination Control
============================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTTerminationControl:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`FRCFIN`
     - 1.0
     - Fill fraction (:envvar:`IFIN` = 2) or solid fraction (:envvar:`IFIN` = 3) for termination of the calculation
     - NON-DIM

   * - :envvar:`IFIN`
     - 1
     - Selects the basis for termination of the calculation

       | =1, terminate when *t* :math:`>` :envvar:`TWFIN` or cycle :math:`>` :envvar:`ITWFIN`
       | =2, terminate when fill fraction exceeds :envvar:`FRCFIN` or no cells are empty or *t* :math:`>` :envvar:`TWFIN`
       | =3, terminate when solidified fraction exceeds :envvar:`FRCFIN` or *t* :math:`>` :envvar:`TWFIN`
       | =4, terminate when steady-state reached.

       .. seealso:: \  :envvar:`ICHKSTDY(n)` below.
     - NONE

   * - :envvar:`ICHKSTDY(n)`
     - 1
     - Steady-state watch list

       | =0, no steady-state tracking
       | =1, track for steady-state condition

       | n=1, total mass
       | n=2, total fluid energy
       | n=3, total solid energy
       | n=4, average mean kinetic energy
       | n=5, average mean turbulent energy
       | n=6, average mean turbulent dissipation

       .. note:: 

          * Default applies to all relevant measurements above.

          * Used only when :envvar:`IFIN` = 4
     - NONE

   * - :envvar:`ITWFIN`
     - ...
     - Number of times steps (cycles) to end calculation.

       Default is a large number.

     - NONE

   * - :envvar:`DLTSTDY`
     - 1.0
     - Variation threshold below which the flow is considered steady state (in percent)

       .. note:: Used only when :envvar:`IFIN` = 4
     - PERCENTAGE

   * - :envvar:`TSTDY`
     - 0.1\ :math:`\times`\ :envvar:`TWFIN`
     - Time window over which the steady-state check is performed (in time units)

       .. note:: Used only when :envvar:`IFIN` = 4
     - [t]

   * - :envvar:`TWFIN`
     - ...
     - Time to end calculation

       Default is TWFIN=1.0 unless thermal die cycling is activated, in which case it is set equal to the total duration of all cycles

       .. seealso:: \  :ref:`ThermalDieCyclingOptions`
     - [t]

.. index:: active simulation control; termination

.. _EventsFin:

Active simulation control of termination
------------------------------------------

.. seealso:: \  :doc:`model-reference` -->  :ref:`activeSimulationControlMR`.

| *k* :math:`\leq` *10, probe condition index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTEventsFin:

.. list-table:: Namelist XPUT
   :widths: 20 15 40 20
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFINPRB`
     - 0
     - Active simulation control of termination flag

       | =0, no active simulation control of termination
       | =1, activate active simulation control of termination
     - NONE

   * - :envvar:`EVENT_NAME_FIN`
     - ' '
     - Active simulation control of termination event name (up to 50 characters)
     - NONE

   * - :envvar:`IF_GLOBAL_FIN`
     - 0
     - Flag for global condition

       | =0, use local conditions
       | =1, use global conditions

     - NONE

   * - :envvar:`IGLOBAL_FIN`
     - 0
     - Global condition id (used if :envvar:`IF_GLOBAL_FIN` = 1)
     - NONE

   * - :envvar:`NPROBES_FIN`
     - 0
     - Number of local probe conditions for the active simulation control of termination event (used if :envvar:`IF_GLOBAL_FIN` = 0)
     - NONE

   * - :envvar:`EVENT_CONDITION_LOGIC_FIN`
     - ' '
     - Logical operator between probe conditions for the event

       | ='ANY', event triggered when any of the enabled probe conditions satisfied
       | ='ALL', event triggered when all of the enabled probe conditions satisfied

       .. note:: Required when number of enabled probe conditions > 1
     - NONE

   * - :envvar:`IF_CONDITION_ENABLED_FIN(k)`
     - 1
     - Probe condition :envvar:`k` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IPRBD_FIN(k)`
     - 0
     - Probe id for probe condition :envvar:`k`
     - NONE

   * - :envvar:`IPRBSC_FIN(k)`
     - 0
     - Scalar id for probe condition :envvar:`k`

       .. note:: Used when :envvar:`PRBVNAM_FIN(k)` = 'SCSCLR'
     - NONE

   * - :envvar:`IPRBSCN_FIN(k)`
     - 0
     - Additional scalar index for probe condition :envvar:`k`

       Sediment species id, when :envvar:`PRBVNAM_FIN` = 'NSSPC', or
       Baffle flux surface id, when :envvar:`PRBVNAM_FIN` = 'TRACERN'.
     - NONE

   * - :envvar:`PRBVNAM_FIN(k)`
     - ...
     - Probe variable name for probe condition :envvar:`k`

       .. note:: Please check table :ref:`namelistXPUTTerminationControlPRBVNAM` for valid variable names and descriptions.
     - NONE

   * - :envvar:`IFPRBVABS_FIN(k)`
     - 0
     - Specify if to use the absolute probe variable value for probe condition :envvar:`k`

       | =0, use the real value
       | =1, use absolute value
     - NONE

   * - :envvar:`PRBVROP_FIN(k)`
     - ' '
     - Probe variable relational operator for probe condition :envvar:`k`

       | ='LT', probe condition satisfied when probe variable value is *less* than the critical value
       | ='LE', probe condition satisfied when probe variable value is *less* than or *equal* to the critical value
       | ='EQ', probe condition satisfied when probe variable value is *equal* to the critical value
       | ='NE', probe condition satisfied when probe variable value is *not equal* to the critical value
       | ='GE', probe condition satisfied when probe variable value is *greater* than or *equal* to the critical value
       | ='GT', probe condition satisfied when probe variable value is *greater* than the critical value
     - NONE

   * - :envvar:`PRBVAL_CRITICAL_FIN(k)`
     - 0.0
     - Critical value for probe condition :envvar:`k`
     - NONE

   * - :envvar:`PRBDT_FIN(k)`
     - 0.0
     - Duration after the critical value has reached for probe condition :envvar:`k`
     - [t]
 
Probe variable name :envvar:`PRBVNAM` for active simulation control of termination:

.. tabularcolumns:: |p{3.0cm}|p{11.75cm}|

.. _namelistXPUTTerminationControlPRBVNAM:

.. list-table:: PRBVNAM in Namelist XPUT
   :widths: 20 80
   :header-rows: 1
   :class: longtable

   * - NAME
     - DESCRIPTION

   * - :envvar:`X`
     - x or r-coordinate

   * - :envvar:`Y`
     - y or |theta| -coordinate

   * - :envvar:`Z`
     - z-coordinate

   * - :envvar:`U`
     - Fluid x or r-velocity

   * - :envvar:`V`
     - Fluid y or |theta| -velocity

   * - :envvar:`W`
     - Fluid z velocity

   * - :envvar:`UMG`
     - Fluid velocity magnitude

   * - :envvar:`P`
     - Pressure

   * - :envvar:`F`
     - Fraction of fluid

   * - :envvar:`RHO`
     - Macroscopic density

       Used when :envvar:`IFRHO` :math:`>` 0

   * - :envvar:`TN`
     - Temperature of fluid #1

       Used when :envvar:`IFENRG` :math:`>` 0

   * - :envvar:`TN2`
     - Temperature of fluid #2

       Used when :envvar:`IFENRG` :math:`>` 0 and :envvar:`NMAT` :math:`=` 2

   * - :envvar:`TW`
     - Wall temperature

       Used when :envvar:`IFENRG` :math:`>` 0 and :envvar:`IHTC` :math:`=` 1

   * - :envvar:`HTC`
     - Effective heat transfer coefficient

       Used when :envvar:`IFENRG` :math:`>` 0 and :envvar:`IHTC` :math:`=` 1

   * - :envvar:`UPR`
     - Probe x or r-velocity

   * - :envvar:`VPR`
     - Probe y or |theta| -velocity

   * - :envvar:`WPR`
     - Probe z-velocity

   * - :envvar:`UPRMG`
     - Probe velocity magnitude

   * - :envvar:`PSIZPR`
     - Probe diameter

   * - :envvar:`TEMPPR`
     - Probe temperature

       Used when :envvar:`IFENRG` :math:`>` 0

   * - :envvar:`QSR`
     - Mass source rate

   * - :envvar:`QSRV`
     - Volume source rate

   * - :envvar:`MU`
     - Dynamic viscosity

       Used when :envvar:`IFMU` = 1

   * - :envvar:`TKE`
     - Turbulent energy

       Used when :envvar:`IFVIS` :math:`\geq` 2

   * - :envvar:`DTKE`
     - Turbulent dissipation

       Used when :envvar:`IFVIS` = 3 or :envvar:`IFVIS` = 4

   * - :envvar:`TOMEGA`
     - Turbulent omega

       Used when :envvar:`IFVIS` = 5

   * - :envvar:`STNR`
     - Strain rate magnitude

       Used when :envvar:`ISTNR` = 1

   * - :envvar:`VORTX`
     - x vorticity

       Used when :envvar:`IVORT` = 1

   * - :envvar:`VORTY`
     - y vorticity

       Used when :envvar:`IVORT` = 1

   * - :envvar:`VORTZ`
     - z vorticity

       Used when :envvar:`IVORT` = 1

   * - :envvar:`VORTQ`
     - Q-criterion for vortex detection

       Used when :envvar:`IVORT` = 1

   * - :envvar:`DRG`
     - Normalized drag coefficient

       Used when :envvar:`IODRG(m)` :math:`>` 0 or :envvar:`IFSLD` :math:`>` 0 (any m)

   * - :envvar:`FS`
     - Solid fraction

       Used when :envvar:`IFSLD` :math:`>` 0

   * - :envvar:`VMOBS`
     - Moisture concentration

       Used when :envvar:`IFDRYING` :math:`>` 0

   * - :envvar:`VFOB`
     - Free component or lost foam component volume fraction

       Used when :envvar:`IFOB(m)` :math:`\neq` 0 and :envvar:`IFOB(m)` :math:`\neq` 5 (any m)

   * - :envvar:`HYFD`
     - Flow depth

       Used when :envvar:`IDPTH` = 1

   * - :envvar:`MHYFD`
     - Maximum flow depth

       Used when :envvar:`IDPTH` = 1

   * - :envvar:`HYEL`
     - Free surface elevation

       Used when :envvar:`IDPTH` = 1

   * - :envvar:`DAVEL`
     - Depth averaged velocity

       Used when :envvar:`IDPTH` = 1

   * - :envvar:`OFVEL`
     - Velocity at specified offset

       Used when :envvar:`IDPTH` = 1

   * - :envvar:`FROUDE`
     - Froude number

       Used when :envvar:`IDPTH` = 1

   * - :envvar:`SHYHD`
     - Specific hydraulic head

       Used when :envvar:`IDPTH` = 1

   * - :envvar:`THYHD`
     - Total hydraulic head

       Used when :envvar:`IDPTH` = 1

   * - :envvar:`THEAD`
     - Total hydraulic head 3D

       Used when :envvar:`ITHEAD` = 1

   * - :envvar:`SCSCLR`
     - User added scalar species

       Used when :envvar:`NSC` :math:`>` 0

   * - :envvar:`EOF2`
     - Zeta potential

       Used when :envvar:`IEPOT` = 1 and :envvar:`IEOF2` = 1

   * - :envvar:`ECHRG`
     - Electric charge density

       Used when :envvar:`IEPOT` = 1 and :envvar:`IECHRG` = 1

   * - :envvar:`FMDEN`
     - Foam density multiplier

       Used when :envvar:`IFMDEN` :math:`>` 0

   * - :envvar:`DFAIR`
     - Volume fraction of entrained air

       Used when :envvar:`ITB` = 1, :envvar:`NMAT` = 1, :envvar:`DFAIR` :math:`>` 0, and :envvar:`IDFAIR` :math:`>` 0

   * - :envvar:`DISSLV`
     - Dissolved solute concentration

       Used when :envvar:`IDISSOLVE` :math:`>` 0

   * - :envvar:`BURNMF`
     - Combustion gas mass fraction 

       Used when :envvar:`IBURN` :math:`=` 1

   * - :envvar:`MUPOR`
     - Percent micro-porosity

       Used when :envvar:`IMUPOR` = 1

   * - :envvar:`CONTACT`
     - Fluid contact time with walls 

       Used when :envvar:`ICONTACT` = 1

   * - :envvar:`DFCTW`
     - Wicked foam residue concentration

       Used when :envvar:`ITB` = 1 and :envvar:`IDFCTW` = 1

   * - :envvar:`DFCT`
     - Free surface defect concentration

       Used when :envvar:`ITB` = 1 and :envvar:`IDFCT` = 1

   * - :envvar:`DFCTLF`
     - Foam residue concentration

       Used when :envvar:`ITB` = 1 and :envvar:`IDFCT_LF` = 1

   * - :envvar:`RESID`
     - Solid residue concentration

       Used when :envvar:`IRESID` :math:`>` 0

   * - :envvar:`DFCWE`
     - Wall defect concentration

       Used when :envvar:`IDFCWE` :math:`>` 0

   * - :envvar:`RESDT`
     - Fluid residence time

       Used when :envvar:`IRESDT` = 1

   * - :envvar:`FILL1`
     - Time of first fluid arrival

       Used when :envvar:`IFILL1` = 1 or :envvar:`IFCOR` = 1

   * - :envvar:`PCAV`
     - Cavitation potential

       Used when :envvar:`IFVELP` = 0 and :envvar:`IPCAV` = 1

   * - :envvar:`SEG`
     - Solute concentration

       Used when :envvar:`IFSLD` = 1, :envvar:`NMAT` = 1, and :envvar:`ISEG` = 1

   * - :envvar:`SSPC`
     - Suspended sediment species concentration

       Used when :envvar:`ISCOUR` = 1 and :envvar:`NSSPC` :math:`>` 0

   * - :envvar:`SSPK`
     - Suspended sediment species packed volume fraction

       Used when :envvar:`ISCOUR` = 1 and :envvar:`NSSPC` :math:`>` 0

   * - :envvar:`ELASTXX`
     - xx component of elastic stress

       Used when :envvar:`IELAST` :math:`>` 0

   * - :envvar:`ELASTYY`
     - yy component of elastic stress

       Used when :envvar:`IELAST` :math:`>` 0

   * - :envvar:`ELASTZZ`
     - zz component of elastic stress

       Used when :envvar:`IELAST` :math:`>` 0

   * - :envvar:`ELASTXY`
     - xy component of elastic stress

       Used when :envvar:`IELAST` :math:`>` 0

   * - :envvar:`ELASTYZ`
     - yz component of elastic stress

       Used when :envvar:`IELAST` :math:`>` 0

   * - :envvar:`ELASTXZ`
     - xz component of elastic stress

       Used when :envvar:`IELAST` :math:`>` 0

   * - :envvar:`NCG`
     - Non-condensable gas density

       Used when :envvar:`INCG` = 1

   * - :envvar:`PATH`
     - Distance traveled by fluid

       Used when :envvar:`IPATH` = 1

   * - :envvar:`TRACER`
     - Combined tracer

       Used when :envvar:`ITRACER` = 1

   * - :envvar:`TRACERN`
     - Tracer from flux surface n

       Used when :envvar:`ITRACER` = 1

   * - :envvar:`EPOT`
     - Electric potential

       Used when :envvar:`IEPOT` = 1

   * - :envvar:`EFIELD`
     - Electric field

       Used when :envvar:`IEPOT` = 1

   * - :envvar:`STRSXX`
     - FSI/TSE stress component xx

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`STRSXY`
     - FSI/TSE stress component xy

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`STRSXZ`
     - FSI/TSE stress component xz

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`STRSYY`
     - FSI/TSE stress component yy

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`STRSYZ`
     - FSI/TSE stress component yz

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`STRSZZ`
     - FSI/TSE stress component zz

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`DISPX`
     - FSI/TSE displacement in x-direction

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`DISPY`
     - FSI/TSE displacement in y-direction

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`DISPZ`
     - FSI/TSE displacement in z-direction

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`STRNXX`
     - FSI/TSE strain component xx

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`STRNXY`
     - FSI/TSE strain component xy

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`STRNXz`
     - FSI/TSE strain component xz

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`STRNYY`
     - FSI/TSE strain component yy

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`STRNYZ`
     - FSI/TSE strain component yz

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`STRNZZ`
     - FSI/TSE strain component zz

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`PRVLEXP`
     - Relative volume expansion

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`PRISOST`
     - FSI/TSE mean isotropic stress

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`PRVMISS`
     - Von Mises stress

       Used when :envvar:`IFSI(m)` = 1 or :envvar:`ITHRMST` = 1

   * - :envvar:`TEMP`
     - FSI/TSE temperature

       Used when :envvar:`IFENRG` :math:`>` 0 and (( :envvar:`IFSI(m)` = 1 and :envvar:`IHTC` = 1) or :envvar:`ITHRMST` = 1)

   * - :envvar:`PSTRNXX`
     - FSI/TSE plastic strain component xx

       Used when :envvar:`IFSI(m)` = 1 and :envvar:`YLDSTR(m)` :math:`>` 0 (any m), or :envvar:`ITHRMST` = 1 and :envvar:`YLDSTRTS` :math:`>` 0

   * - :envvar:`PSTRNXY`
     - FSI/TSE plastic strain component xy

       Used when :envvar:`IFSI(m)` = 1 and :envvar:`YLDSTR(m)` :math:`>` 0 (any m), or :envvar:`ITHRMST` = 1 and :envvar:`YLDSTRTS` :math:`>` 0

   * - :envvar:`PSTRNXZ`
     - FSI/TSE plastic strain component xz

       Used when :envvar:`IFSI(m)` = 1 and :envvar:`YLDSTR(m)` :math:`>` 0 (any m), or :envvar:`ITHRMST` = 1 and :envvar:`YLDSTRTS` :math:`>` 0

   * - :envvar:`PSTRNYY`
     - FSI/TSE plastic strain component yy

       Used when :envvar:`IFSI(m)` = 1 and :envvar:`YLDSTR(m)` :math:`>` 0 (any m), or :envvar:`ITHRMST` = 1 and :envvar:`YLDSTRTS` :math:`>` 0

   * - :envvar:`PSTRNYZ`
     - FSI/TSE plastic strain component yz

       Used when :envvar:`IFSI(m)` = 1 and :envvar:`YLDSTR(m)` :math:`>` 0 (any m), or :envvar:`ITHRMST` = 1 and :envvar:`YLDSTRTS` :math:`>` 0

   * - :envvar:`PSTRNZZ`
     - FSI/TSE plastic strain component zz

       Used when :envvar:`IFSI(m)` = 1 and :envvar:`YLDSTR(m)` :math:`>` 0 (any m), or :envvar:`ITHRMST` = 1 and :envvar:`YLDSTRTS` :math:`>` 0

   * - :envvar:`PSTRNMG`
     - FSI/TSE plastic strain magnitude

       Used when :envvar:`IFSI(m)` = 1 and :envvar:`YLDSTR(m)` :math:`>` 0 (any m), or :envvar:`ITHRMST` = 1 and :envvar:`YLDSTRTS` :math:`>` 0

.. index:: thermal die cycling options

.. _ThermalDieCyclingOptions:

Thermal Die Cycling Options
============================

| *n* :math:`\leq` *100, thermal cycle segment index*

.. note:: If :envvar:`TWFIN` is not set or if it is larger than the total duration of all cycles, then :envvar:`TWFIN` is set to the total duration of all cycles.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTThermalDieCyclingOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NCYC`
     - 0
     - Total number of thermal cycles

       .. seealso:: \  :doc:`model-reference` -->  :ref:`thermalDieCyclingMR`.
     - CYCLES

   * - :envvar:`ISEG_TYPE(n)`
     - ...
     - Type of cycle segment :envvar:`n`

       | =0, Undefined
       | =1, Solidification
       | =2, Open before ejection
       | =3, Open
       | =4, Spray lubricant
       | =5, Blow air
       | =6, Closed

       Defaults to 1 for cycle segment 1 and to 0 for cycle segments greater than 1.

       .. note:: only cycle segment 2 can be of type 2 - Open before ejection, and only the last cycle segment can be of type 6 - Closed (preparation).

     - NONE

   * - :envvar:`CYCSEGNAME(n)`
     - ...
     - Name of cycle segment :envvar:`n`

       Defaults to the type name of the cycle segment :envvar:`n`.
     - NONE

   * - :envvar:`CYCDT(n)`
     - 0.0
     - Duration of segment :envvar:`n` of a cycle
     - [t]

   * - :envvar:`CYCHT(n)`
     - ...
     - Heat transfer coefficient between geometry components and ambient space at cycle segment :envvar:`n`
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`CYCT(n)`
     - ...
     - Media (fluid or void) temperature for cycling segment :envvar:`n`

         .. note:: \ If :envvar:`CYCT(1)` is defined then it is used as the initial uniform temperature of the fluid inside the cavity during the first segment. Otherwise, the initial fluid temperature is defined based on the fluid regions or from restart source data. :envvar:`CYCT(n)` :math:`>` :envvar:`1)` must be defined for all cycling segments for which :envvar:`CYCDT(n)` :math:`>` :envvar:`0.0`.
     - [T]

   * - :envvar:`CYCHTMA`
     - ...
     - Heat transfer coefficient between metal and air

       .. note:: \ used only during "Open before ejection" stage (:envvar:`ISEG_TYPE(2)` = 2)
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`NCYCPT`
     - 1
     - Output control for thermal die cycling model; restart spatial data is written for the last :envvar:`NCYCPT` die cycles, in addition to the other requested restart spatial data edits using :envvar:`TPLTD`.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`thermalDieCyclingMR`.
     - NONE

.. index:: time-step control

.. _TimeStepControl:

Time-Step Control
============================

| *n* :math:`\leq` *500, time index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTTimeStepControl:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`AUTOT`
     - 1.0
     - Automatic time-step control flag

       | =0.0, constant time-step size
       | =1.0, time-step size controlled by stability and number of pressure iterations (see :envvar:`ITDTMX` in namelist :envvar:`LIMITS`)
       | =2.0, time-step size controlled by stability

       .. seealso:: \  :envvar:`ITDTMX` in :ref:`ComputationalLimitsNamelistLIMITS`.
     - NONE

   * - :envvar:`CON`
     - ...
     - Safety factor for explicit convective time step size stability limit

       .. note:: Defaults to 0.45 for :envvar:`ICMPRS` = 0; defaults to 0.25 for :envvar:`ICMPRS` = 1.

       .. seealso:: \

          * :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.
     - NON-DIM

   * - :envvar:`CONES`
     - 0.5
     - Safety factor for explicit elastic stress time step size stability limit

       .. note:: Relevant only for visco-elastic-plastic model (\ :envvar:`IELAST` :math:`>` 0)

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`.

          * :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`.

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - NON-DIM

   * - :envvar:`CONFS`
     - 1.0
     - Safety factor for free surface stability

     - NON-DIM

   * - :envvar:`CONHT`
     - 0.45
     - Safety factor for explicit heat conduction/transfer time step size stability limit
     - NON-DIM

   * - :envvar:`CONSFT`
     - ...
     - Safety factor for explicit surface tension time step size stability limit

       .. note:: Defaults to 1.0 for explicit surface tension model (\ :envvar:`IMPSFT` = 0), and to 2.5 for the implicit one (\ :envvar:`IMPSFT` = 1). Relevant only for simulations using surface tension (\ :envvar:`IFSFT` = 1).

       .. seealso:: \  

          * :envvar:`IFSFT` in :ref:`PhysicalModelOptions`.

          * :envvar:`IMPSFT` in :ref:`ExplicitImplicitOptions`.
     - NON-DIM

   * - :envvar:`CONSHR`
     - 0.45
     - Multiplier for sub-time stepping in rapid shrinkage model and microporosity models when used together with the implicit heat transfer solver, :envvar:`IMPHTC` :math:`>` 0.

       .. seealso:: \  

          * :envvar:`NSTSHR` in :ref:`ComputationalLimitsNamelistLIMITS`.

          * :envvar:`IMPHTC` in :ref:`ExplicitImplicitOptions`.
     - NON-DIM

   * - :envvar:`DELT`
     - ...
     - Initial time-step size

       .. note:: Defaults to :envvar:`TWFIN` /10000 for :envvar:`IFIN` = 2, and to :envvar:`TWFIN` /1000 otherwise.
     - [t]

   * - :envvar:`DELTR`
     - ...
     - Initial time-step size for restart calculation

       .. note:: Defaults to :envvar:`DELT` from restart file.
     - [t]

   * - :envvar:`DTIMPX`
     - 1.0\ :math:`\times`\ 10\ :sup:`10`
     - Maximum Courant number for the implicit advection model, :envvar:`IMPADV` = 1. Used in addition to any other limiting factors.

       .. seealso:: \  :envvar:`IMPADV` and :envvar:`IMPADV2` in :ref:`ExplicitImplicitOptions`.
     - NON-DIM

   * - :envvar:`DTMIN`
     - 0.00001\ :math:`\times`\ :envvar:`DELT`
     - Minimum permitted time-step size
     - [t]

   * - :envvar:`TDTMAX(n)`
     - 1.0\ :math:`\times`\ 10\ :sup:`10`
     - The value of the maximum permitted time-step size between times :envvar:`TEDITDT(n-1)` and :envvar:`TEDITDT(n)`
 
     - [t]

   * - :envvar:`TEDITDT(n)`
     - ...
     - Ending time of edit interval :envvar:`n` for :envvar:`TDTMAX(n)`. Not used if unspecified. 
     - [t]

.. index:: turbulence options, viscous options

.. _TurbulenceandViscousOptions:

Turbulence and Viscous Options
================================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTTurbulenceandViscousOptions:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFVIS`
     - 0
     - Viscosity and turbulence options flag

       | =0, local viscosity evaluation (no turbulence model)
       | =1, Prandtl mixing length
       | =2, turbulent energy model
       | =3, two-equation (k-|epsilon|) turbulence model
       | =4, Renormalized Group Theory model (RNG)
       | =5, two-equation (k-|omega|) turbulence model
       | =-1, large eddy simulation model (this model is only valid for limited cases)

       .. seealso:: \  :ref:`TurbulenceandViscousOptions` and :ref:`TurbulenceEquationCoefficientsandDiffusionParameters`.
     - NONE

   * - :envvar:`IMPVIS`
     - 0
     - Viscous stress calculation explicit/implicit flag

       | =0, explicit algorithm
       | =1, implicit algorithm, SOR method
       | =2, implicit algorithm, ADI method
       | =3, implicit algorithm, GMRES method
     - NONE

   * - :envvar:`IMUT`
     - 0
     - Thixotropic viscosity flag

       | =0, standard model, no thixotropy
       | =1, thixotropic viscosity model with time-dependent flow thickening and thinning

       .. note:: The thixotropic viscosity model is only relevant when used with a non-Newtonian viscosity model (:envvar:`IMU1` = 2, 3, 5, 6 or 7).

       .. seealso:: \  :envvar:`IMU1` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`IVISH`
     - 0
     - Viscous heating flag

       | =0, no viscous heating
       | =1, include viscous heating effects

       .. note:: Relevant only with energy transport (:envvar:`IFENRG` = 2 or 3) and viscous flow (:envvar:`IFVISC` = 1). 

       .. seealso:: \  

          * :envvar:`IFENRG` and :envvar:`IFVISC` in :ref:`PhysicalModelOptions`.

          * :doc:`model-reference` -->  :ref:`viscosityHeatingMR`.
     - NONE

   * - :envvar:`IWSH`
     - 1
     - Wall shear stress flag

       | =0, no wall shear stress
       | =1, wall shear stress

       .. note:: Only relevant for viscous flows (\ :envvar:`IFVISC` = 1)

       .. seealso:: \  :doc:`model-reference` -->  :ref:`wallEffectsMR`.
     - NONE

   * - :envvar:`RMVISZ`
     - 1.5
     - Vertical viscosity multiplier

       .. note:: Used with laminar (\ :envvar:`IFVIS` = 0) shallow water (\ :envvar:`ISWATLOC` = 1) flow model.

       .. seealso:: \  

          * :envvar:`IFVIS` in :ref:`PhysicalModelOptions` and :envvar:`ISWATLOC` in :ref:`MeshGeneratorMESH`.

          * :doc:`model-reference` -->  :ref:`shallowWaterFlowsMR`
     - NONE

.. index:: turbulence equation coefficients, diffusion parameters

.. _TurbulenceEquationCoefficientsandDiffusionParameters:

Turbulence Equation Coefficients and Diffusion Parameters
===========================================================

.. note:: All parameters in this section require activation of a turbulence model (\ :envvar:`IFVIS` :math:`>` 0). See: :ref:`TurbulenceandViscousOptions`.

.. seealso:: \  :doc:`model-reference` -->  :ref:`turbulenceSectionMR` and the theory manual section: :ref:`TurbulenceModelsTh`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTTurbulenceEquationCoefficientsandDiffusionParameters:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CDIS1`
     - ...
     - Coefficient of production in turbulent dissipation transport equation

       .. note:: Defaults to 1.44 for k-|epsilon| model (\ :envvar:`IFVIS` = 3); defaults to 1.42 for RNG model (\ :envvar:`IFVIS` = 4); otherwise not relevant.
     - NON-DIM

   * - :envvar:`CDIS2`
     - ...
     - Coefficient of decay in turbulent dissipation transport equation. :envvar:`CDIS2` is a function of the shear rate for RNG model.

       .. note:: Defaults to 1.92 for k-|epsilon| model (\ :envvar:`IFVIS` = 3).
     - NON-DIM

   * - :envvar:`CDIS3`
     - 0.2
     - Coefficient of buoyancy in turbulent dissipation transport equation
     - NON-DIM

   * - :envvar:`CNU`
     - ...
     - Coefficient in turbulent viscosity evaluation

       .. note:: Defaults to 0.09 for k-|epsilon| model (\ :envvar:`IFVIS` = 3).
     - NON-DIM

   * - :envvar:`CRHO`
     - 0.0
     - Coefficient of buoyancy in turbulent production

       .. note:: A value of 2.5 should be used for one-fluid flows with buoyancy (:envvar:`NMAT` = 1, :envvar:`IFRHO` = 1, :envvar:`THEXF1` :math:`\ne` 0.0).

       .. seealso:: \  

          * :envvar:`NMAT` and :envvar:`IFRHO` in :ref:`PhysicalModelOptions`.

          * :envvar:`THEXF1` in :ref:`DensityProperties`.

          * :doc:`model-reference` -->  :ref:`buoyantFlowMR`.
     - NON-DIM

   * - :envvar:`CSPRO`
     - 1.0
     - Coefficient of turbulent shear production
     - NON-DIM

   * - :envvar:`CMF`
     - 0.0
     - Fluid mass diffusion coefficient

       .. note:: Used when :envvar:`NMAT` = 2 and :envvar:`ITB` = 0.

       .. seealso:: \  :envvar:`NMAT` and :envvar:`ITB` in :ref:`PhysicalModelOptions`.
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`ITLEN`
     - 0
     - Flag for the calculation of the maximum turbulent mixing length in the two-equation turbulence models (:envvar:`IFVIS` = 3 or 4)

       | =0, dynamically compute the maximum turbulent mixing length
       | =1, use a constant maximum turbulent mixing length defined by :envvar:`TLEN`.

       .. seealso:: \  :envvar:`TLEN` in this section, below.
     - NONE

   * - :envvar:`RMDTKE`
     - ...
     - Turbulent dissipation diffusion coefficient

       .. note:: Defaults to 0.77 for k-|epsilon| model (\ :envvar:`IFVIS` = 3); defaults to 1.39 for RNG model (\ :envvar:`IFVIS` = 4).
     - NON-DIM

   * - :envvar:`RMF`
     - 0.0
     - Fluid fraction diffusion coefficient multiplier

       .. note: For RNG model (\ :envvar:`IFVIS` = 4) defaults to 1.0/0.7; otherwise 0.0.
     - NON-DIM

   * - :envvar:`RMRHO`
     - ...
     - Density diffusion coefficient multiplier (inverse Schmidt number)

       .. note:: For RNG model (\ :envvar:`IFVIS` = 4) defaults to 1.0/ 0.7. For two-fluid cases (:envvar:`NMAT` = 2) :envvar:`RMRHO` is set equal to the fluid fraction diffusion coefficient multiplier :envvar:`RMF`. Otherwise the default is 0.0.
     - NON-DIM

   * - :envvar:`RMRHOE`
     - ...
     - Energy diffusion coefficient multiplier (inverse Prandtl number)

       .. note:: For RNG model (\ :envvar:`IFVIS` = 4) defaults to 1.0/ 0.7. For two-fluid cases (:envvar:`NMAT` = 2) :envvar:`RMRHOE` is set equal to the fluid fraction diffusion coefficient multiplier :envvar:`RMF`. Otherwise the default is 0.0.
     - NON-DIM

   * - :envvar:`RMTKE`
     - ...
     - Turbulent energy diffusion coefficient multiplier

       .. note:: Defaults to 1.39 for RNG model (\ :envvar:`IFVIS` = 4); 1.0 otherwise.
     - NON-DIM

   * - :envvar:`TLEN`
     - ...
     - Turbulent mixing length

       .. note:: Default turbulent mixing length is 7% of the smallest computational domain dimension.
     - [L] 

.. index:: user-defined variables

.. _UserDefinedVariables:

User Defined Variables
===========================================================

*n* :math:`\leq` *1000*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTUserDefinedVariables:

.. list-table:: Namelist XPUT
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`DUMx`
     - 0.0
     - Extra dummy variables DUM1...DUM25
     - USER DEFINED

   * - :envvar:`IDUMx`
     - 0
     - Extra dummy integer variables IDUM1...IDUM25
     - NONE

   * - :envvar:`IFFOR`
     - 0
     - Flag indicating user-defined fluid forces

       | =0, no user-defined forces
       | =1, include user-defined forces in subroutine FORCAL
     - NONE

   * - :envvar:`IUSRD`
     - 0
     - Flag indicating user-defined namelist

       | =0, ignore namelist :envvar:`USRDAT`
       | =1, read namelist :envvar:`USRDAT` at end of :file:`prepin.*` file
       | =2, read namelist :envvar:`URSDAT` before namelist :envvar:`BCDATA`
     - NONE

   * - :envvar:`INTDUM(n)`
     - 0
     - Extra integer dummy array with a single index :envvar:`n`
     - NONE

   * - :envvar:`FPDUM(n)`
     - 0.0
     - Extra floating point dummy array with a single index :envvar:`n`
     - USER DEFINED

   * - :envvar:`REMARK`
     - " "
     - Dummy character string for adding comments to :envvar:`XPUT`
     - NONE

.. index:: void heat transfer coefficients

.. _VoidHeatTransferCoefficients:

Void Heat Transfer Coefficients
===========================================================

.. note:: All parameters in this section require :envvar:`IVHT(k)` :math:`>` 0 (\ see :ref:`VoidPropertiesHeatTransfer`)

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTVoidHeatTransferCoefficients:

.. list-table:: Namelist XPUT
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`HFLEM1`
     - 0.0
     - Emissivity for fluid #1 to type 1 void
     - NON-DIM

   * - :envvar:`HFLEM2`
     - 0.0
     - Emissivity for fluid #1 to type 2 void
     - NON-DIM

   * - :envvar:`HFLEM3`
     - 0.0
     - Emissivity for fluid #1 to type 3 void
     - NON-DIM

   * - :envvar:`HFLV1`
     - 0.0
     - Heat transfer coefficient for fluid #1 to type 1 void
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`HFLV2`
     - 0.0
     - Heat transfer coefficient for fluid #1 to type 2 void
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`HFLV3`
     - 0.0
     - Heat transfer coefficient for fluid #1 to type 3 void
     - [M T\ :sup:`-1` t\ :sup:`-3`]

.. index:: heat transfer, solidified fluid/wall gap heat

.. _FluidWallGapHeatTransferProperties:

Solidified Fluid/Wall Gap Heat Transfer Properties
===========================================================

.. note:: All parameters in this section require :envvar:`ITHRMST` = 1 (\ see :ref:`PhysicalModelOptions`).

.. seealso:: \  :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion` and Theory manual: :ref:`FsiTseModelsTh`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTVFluidWallGapHeatTransferProperties:

.. list-table:: Namelist XPUT
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_GAP`
     - 0
     - Activation flag for wall gap formation model for solidified fluid #1.
     - NON-DIM

   * - :envvar:`EFE1GAP`
     - 0.0
     - Emissivity of solidified fluid #1 in the gap

       .. seealso:: \  :envvar:`HOBEM(m)` in :ref:`ComponentPropertiesHeatTransferCoefficients` for the counterpart value on component surfaces.
     - NON-DIM

   * - :envvar:`THCGAP`
     - ...
     - Thermal conductivity of the gas in the gap, e.g., air.
       The default value corresponds to the thermal conductivity of air at 500 degrees Celsius in simulation units, 
       which is 0.06 W/m/deg in SI units.

     - [M L t\ :sup:`-3` T\ :sup:`-1`\ ]

   * - :envvar:`RGHFILE`
     - ' '
     - File name for roughness legend data file. Needed for **all** simulations containing any :ref:`surfaceroughnesscomptype` component type, \ :envvar:`IFOB(n)` = 9.

       .. note:: Terrain roughness codes in the legend data file must be positive. Zero and negative values are ignored.
       .. seealso:: \  :envvar:`IFOB(m)` in :ref:`ComponentGeneralParameters`
     -  

.. index:: 
   pair: computational and print limits; LIMITS

.. _ComputationalandPrintLimitsLIMITS:

===========================================
Computational and Print Limits - LIMITS
===========================================

.. index:: computational limits

.. _ComputationalLimitsNamelistLIMITS:

Computational Limits
===========================================================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistLIMITSComputationalLimitsNamelistLIMITS:

.. list-table:: Namelist LIMITS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`EPS`
     - 0.01
     - Cutoff value for the evaluation of area and volume fractions

       .. note:: Area and volume fractions are reset to 0.0 if less than :envvar:`EPS` and to 1.0 if greater than 1 - :envvar:`EPS`.
     - NON-DIM

   * - :envvar:`FSI_MEMORY`
     - 7.0
     - Amount of additional memory (in GB) that may be used to store data structures that can significantly speed up the FSI solver. 

       .. note:: 
          * Used only when :envvar:`IOPT_FSI_GMRES` = 1.
          * The addtional memory is used to store some or all matrix elements in the FSI solution matrix. This can result in up to 7 
            times speedup of the FSI solver. Once the specified memory exceeds the memory required to store the complete FSI matrix, 
            no further performance gains will be seen.

       .. seealso:: \  :envvar:`FSI_MEMORY` in :ref:`fsiTseSimulationMR`.
     - GB (Giga Bytes)

   * - :envvar:`IITMX`
     - 1
     - Inner iteration count maximum for non-linear equation-of-state 

       .. note:: Only for compressible flows (see :envvar:`ICMPRS` = 1 in :ref:`PhysicalModelOptions`).
     - NONE

   * - :envvar:`ITDTMX`
     - ...
     - Maximum number of pressure iterations before the time step is reduced

       | The default is 50 / (1 + :envvar:`IADIX` + :envvar:`IADIY` + :envvar:`IADIZ`).
       | Defaults to 30 for :envvar:`IMPVIS` = 2
       | Defaults to 10 for :envvar:`IGMRES` = 1 and :envvar:`IMPMOB` = 0

       .. seealso:: \  :envvar:`IADIX`, :envvar:`IADIY` and :envvar:`IADIZ` in :ref:`PressureIterationOptions`.
     - NONE

   * - :envvar:`ITMAXCG`
     - 1000
     - Maximum number of core gas pressure solver iterations 
     - NONE

   * - :envvar:`ITMAXFSI`
     - 25
     - Maximum number of Fluid Structure Interaction (FSI) or Thermal Stress Evolution (TSE) solver iterations 

       .. note:: Used by the thermal stress model, :envvar:`ITHRMST` = 1, or by the FSI model :envvar:`IFSI(m)` = 1.

       .. seealso:: \  

          * :envvar:`ITHRMST` in :ref:`PhysicalModelOptions`.

          * :envvar:`IFSI(m)` in :ref:`ComponentPropertiesFluidStructureInteractionFSImodel`.
     - NONE

   * - :envvar:`ITFLMX`
     - 25
     - Maximum number of pressure iteration failures allowed 
     - NONE

   * - :envvar:`IDTHT`
     - 10
     - Maximum number of temperature iterations before the time step is reduced
     - NONE

   * - :envvar:`IDTES`
     - 15
     - Maximum number of elastic iterations before the time step is reduced
     - NONE

   * - :envvar:`ITHTMX`
     - 100
     - Maximum number of temperature iterations per cycle 
     - NONE

   * - :envvar:`ITMAX`
     - ...
     - Maximum number of pressure iterations per cycle 

       | Defaults to 1000 for SOR iterations (\ :envvar:`IGMRES` = 0)
       | Defaults to 100 for GMRES iterations (\ :envvar:`IGMRES` = 1)
       | Defaults to 200 for ADI iterations (\ :envvar:`IGMRES` = 2)
       | Defaults to 200 for ADI implicit viscous stress solver (\ :envvar:`IMPVIS` = 2)

       .. seealso:: \  

          * :envvar:`IGMRES` in :ref:`PressureIterationOptions`.

          * :envvar:`IMPVIS` in :ref:`TurbulenceandViscousOptions`.
     - NONE

   * - :envvar:`ITMIN`
     - ...
     - Minimum number of pressure iterations per cycle 

       .. note:: Defaults to 2 for when surface tension model is on (\ :envvar:`IFSFT` = 1); defaults to 1 otherwise.

       .. seealso:: \  :envvar:`IFSFT` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`ITESMX`
     - 30
     - Maximum number of implicit elastic stress iterations
     - NONE

   * - :envvar:`ITSHMX`
     - 100
     - Maximum number of volume iterations for the simple shrinkage model

       .. note:: Used only when :envvar:`ISHRNK` = 2.

       .. seealso:: \  :envvar:`ISHRNK` in :ref:`PhysicalModelOptions`
     - NONE

   * - :envvar:`ITVSMX`
     - ...
     - Maximum number of implicit viscous stress iterations

       .. note:: Defaults to 100 for :envvar:`IMPVIS` = 3 and to 20 otherwise.

       .. seealso:: \  :envvar:`IMPVIS` in :ref:`TurbulenceandViscousOptions`
     - NONE

   * - :envvar:`MRSTRT`
     - 15
     - Restart number for GMRES pressure solver. It is not allowed to be less than 15 or greater than 100.

       .. seealso:: \  :envvar:`IAUTOSET` in :ref:`PressureIterationOptions`
     - NONE

   * - :envvar:`MRSTRTFSI`
     - 20
     - Restart number for GMRES Fluid structure interaction (FSI) and thermal stress evolution (TSE) solver. It is not allowed to be less than 6 or greater than 1000.

       .. seealso:: \  :envvar:`IAUTOSETFSI` in :ref:`NumericalOptions`
     - NONE

   * - :envvar:`NCFLMX`
     - 2
     - Maximum number of consecutive convection or pressure convergence failures allowed
     - NONE

   * - :envvar:`NEGTMX`
     - 250
     - Maximum number of times negative energy is reset during simulation
     - NONE

   * - :envvar:`NSTSHR`
     - 10
     - Maximum number of sub-time steps for simple shrinkage and microporosity models

       .. note:: Used when :envvar:`ISHRNK` = 2 or :envvar:`IMUPOR` = 1, and :envvar:`IMPHTC` :math:`>` 0

       .. seealso:: \  

          * :envvar:`ISHRNK` in :ref:`PhysicalModelOptions`

          * :envvar:`IMPHTC` in :ref:`ExplicitImplicitOptions`

          * :envvar:`IMUPOR` in :ref:`PhysicalModelOptions`
     - NONE

   * - :envvar:`VFCLEAN`
     - 0.05
     - Volume fraction cleanup coefficient. Fully blocks cells where local (isolated) open volume fraction is less than :envvar:`VFCLEAN`.
     - NON-DIM

.. index:: print limits

.. _PrintLimits:

Print Limits
===========================================================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistLIMITSPrintLimits:

.. list-table:: Namelist LIMITS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ILPR`
     - ...
     - Print window minimum x cell index 

       Alternate: :envvar:`XLPR`.

       Defaults to first real cell
     - NONE

   * - :envvar:`IRPR`
     - ...
     - Print window maximum x cell index

       Alternate: :envvar:`XRPR`.

       Defaults to first real cell
     - NONE

   * - :envvar:`JBKPR`
     - ...
     - Print window maximum y cell index

       Alternate: :envvar:`YBKPR`.

       Defaults to first real cell
     - NONE

   * - :envvar:`JFPR`
     - ...
     - Print window maximum y cell index

       Alternate: :envvar:`YFPR`.

       Defaults to first real cell
     - NONE

   * - :envvar:`JFPR`
     - ...
     - Print window maximum y cell index

       Alternate: :envvar:`YFPR`.

       Defaults to first real cell
     - NONE

   * - :envvar:`KBPR`
     - ...
     - Print window maximum z cell index

       Alternate: :envvar:`ZBPR`.

       Defaults to first real cell
     - NONE

   * - :envvar:`KTPR`
     - ...
     - Print window maximum z cell index

       Alternate: :envvar:`ZTPR`.

       Defaults to first real cell
     - NONE

   * - :envvar:`XLPR`
     - ...
     - Print window minimum x-coordinate

       Alternate: :envvar:`ILPR`.
     - [L]

   * - :envvar:`XRPR`
     - ...
     - Print window minimum x-coordinate

       Alternate: :envvar:`IRPR`.
     - [L]

   * - :envvar:`YBKPR`
     - ...
     - Print window minimum y-coordinate

       Alternate: :envvar:`JBKPR`.
     - [L]

   * - :envvar:`YFPR`
     - ...
     - Print window minimum y-coordinate

       Alternate: :envvar:`JFPR`.
     - [L]

   * - :envvar:`ZBPR`
     - ...
     - Print window minimum z-coordinate

       Alternate: :envvar:`KBPR`.
     - [L]

   * - :envvar:`ZTPR`
     - ...
     - Print window minimum z-coordinate

       Alternate: :envvar:`KTPR`.
     - [L]

.. index::
   pair: fluid namelist; PROPS

.. _FluidNamelistPROPS:

==================================
Fluid Properties Namelist - PROPS
==================================

.. index:: cavitation properties

.. _CavitationProperties:

Cavitation Properties
===========================================================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSCavitationProperties:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CAVRT`
     - 5.0\ :math:`\times`\ |Delta|\ t

     - Characteristic time for nucleation of cavitation bubbles. Requires :envvar:`ICAV` = 1 and is used with the simplified 
       cavitation model, :envvar:`ICAVMODEL` = 0. |Delta|\ t is the current time step in the simulation.

       .. seealso:: \ :envvar:`ICAV` and :envvar:`ICAVMODEL` in :ref:`PhysicalModelOptions`
     - [t]

   * - :envvar:`PCAV`
     - ...
     - Cavitation pressure, used in Cavitation (:envvar:`ICAV` = 1) and Cavitation Potential (:envvar:`IPCAV` :math:`>` 0) models. Defaults to -1 atm. if gauge pressure is used, :envvar:`IPGAUGE` = 1, and to zero otherwise.

       .. seealso:: \  

          * :envvar:`ICAV` in :ref:`PhysicalModelOptions`

          * :envvar:`IPCAV` in :ref:`CavitationPotentialModel`
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`RHOCAV`
     - ...
     - Cavitation gas density, used with the empirical cavitation model, :envvar:`ICAV` = 1 and :envvar:`ICAVMODEL` = 1.

       | Defaults to air density in simulation units, which is 1.225 kg/m\ :sup:`3` in SI system.

       .. seealso:: \  :envvar:`ICAV` and :envvar:`ICAVMODEL` in :ref:`PhysicalModelOptions`
     - [M L\ :sup:`-3`]

   * - :envvar:`SIGMA`
     - 0.0
     - Surface tension coefficient; same as used in :ref:`SurfaceTensionProperties`.

     - [M/t\ :sup:`2`]

   * - :envvar:`CAVPROD`
     - 0.02
     - Empirical cavitation production coefficient, used with the empirical cavitation model, :envvar:`ICAV` = 1 and :envvar:`ICAVMODEL` = 1.

       .. seealso:: \  :envvar:`ICAV` and :envvar:`ICAVMODEL` in :ref:`PhysicalModelOptions`

     - NON-DIM

   * - :envvar:`CAVDISS`
     - 0.01
     - Empirical cavitation dissipation coefficient, used with the empirical cavitation model, :envvar:`ICAV` = 1 and :envvar:`ICAVMODEL` = 1.

       .. seealso:: \  :envvar:`ICAV` and :envvar:`ICAVMODEL` in :ref:`PhysicalModelOptions`

     - NON-DIM

.. index:: density properties

.. _DensityProperties:

Density Properties
===========================================================

.. note:: Non-zero defaults for density are water properties.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSDensityProperties:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`RHOF`
     - -1.0
     - Density of fluid #1. For temperature-dependent density, fluid #1 density at T=\ :envvar:`TSTAR`.
     - [M/L :sup:`3`]

   * - :envvar:`RHOF2`
     - -1.0
     - Density of fluid #2. For temperature-dependent density, fluid #2 density at T=\ :envvar:`TSTAR`.

       .. note:: Relevant only for :envvar:`ICMPRS` = 0 (\ :ref:`PhysicalModelOptions`)
     - [M/L :sup:`3`]

   * - :envvar:`RHOFS`
     - :envvar:`RHOF`
     - Density of solidified fluid #1

       .. note:: Relevant only for :envvar:`IFSLD` = 1 (\ :ref:`PhysicalModelOptions`)
     - [M/L :sup:`3`]

   * - :envvar:`THEXF1`
     - 0.0
     - Volumetric thermal expansion coefficient for fluid #1

       .. note:: Relevant only for :envvar:`IFENRG` = 2 or 3, and :envvar:`IFRHO` = 1 (\ :ref:`PhysicalModelOptions`)

       .. seealso:: \  :doc:`model-reference` -->  :ref:`buoyantFlowMR`
     - [1/T]

   * - :envvar:`THEXF2`
     - 0.0
     - Volumetric thermal expansion coefficient for fluid #2

       .. note:: Relevant only for :envvar:`ICMPRS` = 0, :envvar:`IFENRG` = 2 or 3, and :envvar:`IFRHO` = 1 (\ :ref:`PhysicalModelOptions`)

       .. seealso:: \  :doc:`model-reference` -->  :ref:`buoyantFlowMR`
     - [1/T]

   * - :envvar:`THEXS1`
     - 0.0
     - Volumetric thermal expansion coefficient of solidified phase of fluid #1 (used in elastic stress model).

       .. note:: Relevant only for :envvar:`IFSLD` = 1, and :envvar:`IELAST` :math:`>` 0 **or** :envvar:`ITHRMST` = 1 (\ :ref:`PhysicalModelOptions`)
     - [1/T]

   * - :envvar:`TSTAR`
     - 0.0 degrees C or F
     - Reference temperature for temperature-dependent fluid properties
     - [T]

   * - :envvar:`ADJSHR`
     - 1.0
     - Multiplication coefficient for volume change during solidification. Values must not be negative. 
       :envvar:`ADJSHR` < 1 results in less shrinkage while :envvar:`ADJSHR` > 1 results in more than computed from the density 
       difference between the solid and liquid phases.
       
       .. note:: Relevant when :envvar:`IFSLD` = 1, :envvar:`ISHRNK` :math:`>` 0 **or** :envvar:`IMUPOR` = 1 (\ :ref:`PhysicalModelOptions`)       
     - NON-DIM


.. index:: electrostatic properties

.. _ElectrostaticProperties:

Electrostatic Properties
===========================================================

.. note:: All parameters in this section require activation of the electric potential model (\ :envvar:`IEPOT` = 1). See :ref:`PhysicalModelOptions`.

.. seealso:: \  

   * :doc:`model-reference` -->  :ref:`ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters`.

   * :doc:`model-reference` -->  :ref:`electroThermalMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSElectrostaticProperties:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`DIELF1`
     - 1.0
     - Dielectric constant (relative permittivity) for fluid #1
     - NON-DIM

   * - :envvar:`DIELF2`
     - 1.0
     - Dielectric constant (relative permittivity) for fluid #2
     - NON-DIM

   * - :envvar:`PERMDER`
     - 0.0
     - Fluid electric permittivity derivative with respect to temperature

       :envvar:`PERMDER` :math:`= \frac{1}{e} \cdot \frac{{de}}{{dT}}`

     - [1/T]

   * - :envvar:`FREQUEN`
     - 0.0
     - Angular frequency of external electric field
     - [1/t]

   * - :envvar:`ECOND1`
     - 0.0
     - Fluid #1 electric conductivity
     - [Q\ :sup:`2` t M\ :sup:`-1` L\ :sup:`-3`]

   * - :envvar:`IECOND1`
     - 0
     - Flag for the definition of fluid #1 electric conductivity

       | =0, constant
       | =1, tabular function of temperature

     - NONE

   * - :envvar:`FECOND1`
     - 
     - The external filename for tabular fluid #1 electric conductivity as a function of temperature (used only if :envvar:`IECOND1C` :math:`\geq` 2)
     - NONE

   * - :envvar:`IECOND1C`
     - 0
     - The column number for fluid #1 electric conductivity in the external file :envvar:`FECOND1`
     - NONE     

   * - :envvar:`ECOND2`
     - 0.0
     - Fluid #2 electric conductivity
     - [Q\ :sup:`2` t M\ :sup:`-1` L\ :sup:`-3`]

   * - :envvar:`IECOND2`
     - 0
     - Flag for the definition of fluid #2 electric conductivity

       | =0, constant
       | =1, tabular function of temperature

     - NONE

   * - :envvar:`FECOND2`
     - 
     - The external filename for tabular fluid #2 electric conductivity as a function of temperature (used only if :envvar:`IECOND2C` :math:`\geq` 2)
     - NONE

   * - :envvar:`IECOND2C`
     - 0
     - The column number for fluid #2 electric conductivity in the external file :envvar:`FECOND2`
     - NONE      

   * - :envvar:`CONDDER`
     - 0.0
     - Fluid electric conductivity derivative with respect to temperature

       :envvar:`CONDDER` :math:`= \frac{1}{{{\sigma _e}}} \cdot \frac{{d{\sigma _e}}}{{dT}}`
       
     - [1/T]

   * - :envvar:`EMOB1`
     - 0.0
     - Fluid #1 electric charge mobility
     - [Q t M\ :sup:`-1`]

   * - :envvar:`EMOB2`
     - 0.0
     - Fluid #2 electric charge mobility
     - [Q t M\ :sup:`-1`]

.. index:: drift flux

.. _DriftFluxIVS:

Drift Flux 
===========================================================

.. note:: All parameters in this section require activation of the drift-flux model (\ :envvar:`IDFT` = 1). See :ref:`PhysicalModelOptions`. 

.. seealso:: \  :doc:`model-reference` -->  :ref:`driftFluxMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSDriftFlux:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`DFCD`
     - 0.5
     - Drag coefficient for a particle of the dispersed phase moving in the continuous phase.
     - NON-DIM

   * - :envvar:`DFESP_COEFF`
     - 1.0
     - Escape rate coefficient for gas escape velocity at free surface

       .. note:: 

          Used only with gaseous dispersed phase, :envvar:`IFDFT_TYPE` = 2.   

     - NON-DIM      

   * - :envvar:`DFDIAM`
     - 0.0
     - Average particle diameter of the dispersed phase. Used when :envvar:`IDSIZE=` = 0.
     - [L]

   * - :envvar:`DFDIAM_INI`
     - 0.0
     - Initial particle diameter of the dispersed phase. Used when :envvar:`IDSIZE=` = 1.
     - [L]     

   * - :envvar:`F1MX`
     - 1.0
     - Maximum volume fraction of phase #1.
     - NON-DIM

   * - :envvar:`F1MN`
     - ...
     - Minimum volume fraction of phase #1.

       | Defaults to 0.1 for gaseous second phase, :envvar:`IFDFT_TYPE` = 2, and to 0.0 otherweise.

     - NON-DIM

   * - :envvar:`FDMAX`
     - ...
     - Phase inversion volume fraction: volume fraction of the second phase at inversion point. At concentrations below :envvar:`FDMAX`, the second phase is dispersed; above :envvar:`FDMAX` it is continuous.

       Used only when the dispersed phase is made of liquid, :envvar:`IFDFT_TYPE` = 0.

       | Defaults to 0.5 for liquid second phase, :envvar:`IFDFT_TYPE` = 0, and to 1.0 otherweise.       
     - NON-DIM

   * - :envvar:`RHOF`
     - -1.0
     - Density of the first phase.
     - [M/L\ :sup:`3`]

   * - :envvar:`RHOFD`
     - :envvar:`RHOF`
     - Density of the second phase in one-fluid problems, :envvar:`NMAT` = 1.

       For two-fluid problems use :envvar:`RHOF2`.
     - [M/L\ :sup:`3`]

   * - :envvar:`MUD1`
     - :envvar:`MU1`
     - Dynamic viscosity of the first phase in one-fluid problems, :envvar:`NMAT` = 1.

       For two-fluid problems use :envvar:`MU1`
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`MUD2`
     - :envvar:`MU1`
     - Dynamic viscosity of the second phase in one-fluid problems, :envvar:`NMAT` = 1.

       For two-fluid problems use :envvar:`MU2`
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`RZMLT`
     - 1.0
     - Constant multiplier for dynamically-computed Richardson-Zaki coefficient
     - NON-DIM

   * - :envvar:`SIGMA_DF`
     - ...
     - Surface tension coefficient at the interface between two phases

       | used only with :envvar:`IFDFT` = 1, :envvar:`IDSIZE` = 1 and :envvar:`IDFAIR` = 0
     - [M t\ :sup:`-2`]


.. index:: elastic properties, plastic properties

.. _ElasticandPlasticProperties:

Elastic and Plastic Properties
===========================================================

.. overfull warnings in this table are OK. 

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSElasticandPlasticProperties:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`EMOD1`
     - 0.0
     - Shear elastic modulus for fluid #1

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`>` 0

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`EMOD2`
     - 0.0
     - Shear elastic modulus for fluid #2

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`>` 0

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`EMODT1`
     - 0.0
     - Fluid #1 shear elastic modulus temperature sensitivity

       .. math:: 

          \begin{gathered}
          EMOD1(T)= \\
          EMOD1+ \\
          EMODT1 \cdot \left(T - TSTAR \right)
          \end{gathered}

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`>` 0

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - [M L\ :sup:`-1` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`EMODT2`
     - 0.0
     - Fluid #2 shear elastic modulus temperature sensitivity

       .. math:: 

          EMOD2(T)=EMOD2+EMODT2 \cdot \left(T - TSTAR \right)

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`>` 0 

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - [M L\ :sup:`-1` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`BLKMODTS`
     - 0.0
     - Bulk modulus of solidified phase of fluid #1

       .. note:: 

          Used only with thermal stress evolution (TSE) model: :envvar:`ITHRMST` = 1

       .. seealso:: \  

          * :envvar:`ITHRMST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`ELASTMODTS`
     - 0.0
     - Elastic (Young's) modulus of solidified phase of fluid #1

       .. note:: 

          Used only with thermal stress evolution (TSE) model: :envvar:`ITHRMST` = 1

       .. seealso:: \  

          * :envvar:`ITHRMST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`
     - [M L\ :sup:`-1` t\ :sup:`-2`]
   
   * - :envvar:`POISSONRTS`
     - -2.0
     - Poisson ratio of solidified phase of fluid #1

       .. note:: 

          Used only with thermal stress evolution (TSE) model: :envvar:`ITHRMST` = 1

       .. seealso:: \  

          * :envvar:`ITHRMST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`
     - NON-DIM

   * - :envvar:`MOBLTY1`
     - 0.0 (no mobility)
     - Mobility factor for fluid #1. Positive values only. Is needed to define a Giesekus fluid.

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`\geq` 3

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - NON-DIM

   * - :envvar:`MOBLTY2`
     - 0.0 (no mobility)
     - Mobility factor for fluid #2. Positive values only. Is needed to define a Giesekus fluid.

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`\geq` 3

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - NON-DIM

   * - :envvar:`MOBLTYT1`
     - 0.0
     - Fluid #1 mobility factor temperature sensitivity

       :envvar:`MOBLTY1(T)` = :envvar:`MOBLTY1` + :envvar:`MOBLTYT1` (:envvar:`T` - :envvar:`TSTAR`)

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`\geq` 3

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - NON-DIM

   * - :envvar:`MOBLTYT2`
     - 0.0
     - Fluid #2 mobility factor temperature sensitivity
       
       :envvar:`MOBLTY2(T)` = :envvar:`MOBLTY2` + :envvar:`MOBLTYT2` (:envvar:`T` - :envvar:`TSTAR`)

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`\geq` 3

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - NON-DIM

   * - :envvar:`RELAX1`
     - -1.0
     - Relaxation time of fluid #1 for Oldroyd-B viscoelasticity model. Any value less than or equal to 0.0 means that the relaxation time is infinite, that is, no relaxation.

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`\geq` 2

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - [t]

   * - :envvar:`RELAX2`
     - -1.0
     - Relaxation time of fluid #2 for Oldroyd-B viscoelasticity model. Any value less than or equal to 0.0 means that the relaxation time is infinite, that is, no relaxation.

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`\geq` 2

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - [t]

   * - :envvar:`RELAXT1`
     - 0.0
     - Fluid #1 relaxation time temperature sensitivity for Oldroyd-B viscoelasticity model

       :envvar:`RELAX1(T)` = :envvar:`RELAX1` + :envvar:`RELAXT1` (:envvar:`T` - :envvar:`TSTAR`)

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`\geq` 2

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - [t T\ :sup:`-1`]

   * - :envvar:`RELAXT2`
     - 0.0
     - Fluid #2 relaxation time temperature sensitivity for Oldroyd-B viscoelasticity model

       :envvar:`RELAX2(T)` = :envvar:`RELAX2` + :envvar:`RELAXT2` (:envvar:`T` - :envvar:`TSTAR`)

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`\geq` 2

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

     - [t T\ :sup:`-1`]

   * - :envvar:`SHRMODTS`
     - 0.0
     - Shear modulus of solidified phase of fluid #1

       .. note:: 

          Used only with thermal stress evolution (TSE) model: :envvar:`ITHRMST` = 1

       .. seealso:: \  

          * :envvar:`ITHRMST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`THEXS1`
     - 0.0
     - Volumetric thermal expansion coefficient of solidified phase of fluid #1

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` = 1 OR thermal stress evolution (TSE) model: :envvar:`ITHMRST` = 1. Requires also the solidification model, :envvar:`IFSLD`

       .. seealso:: \  

          * :envvar:`IFSLD`, :envvar:`IELAST` and :envvar:`ITHRMST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR` and :ref:`TseSolidifiedFluidRegion`
     - 1/T

   * - :envvar:`YIELD1`
     - -1.0
     - Yield stress limit for fluid #1. A negative value means that the yield stress is infinite, that is, no yielding occurs.

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`>` 0 

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`YIELD2`
     - -1.0
     - Yield stress limit for fluid #2. A negative value means that the yield stress is infinite, that is, no yielding occurs.

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`>` 0

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`YIELDT1`
     - 0.0
     - Fluid #1 yield stress temperature sensitivity
   
       :envvar:`YIELD1(T)` =  :envvar:`YIELD1` + :envvar:`YIELDT1` (:envvar:`T` - :envvar:`TSTAR`)

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`>` 0

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`
     - [M L\ :sup:`-1` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`YIELDT2`
     - 0.0
     - Fluid #2 yield stress temperature sensitivity

       :envvar:`YIELD2(T)` =  :envvar:`YIELD2` + :envvar:`YIELDT2` (:envvar:`T` - :envvar:`TSTAR`)

       .. note:: 

          Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`>` 0

       .. seealso:: \  

          * :envvar:`IELAST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`
     - [M L\ :sup:`-1` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`YLDSTRTS`
     - 0.0
     - Yield stress limit of solidified fluid 1

       .. note:: 

          * Used only with thermal stress evolution (TSE) model: :envvar:`ITHRMST` = 1

          * Negartive or zero value means that material has infinite yield stress (i.e., no yielding)

       .. seealso:: \  

          * :envvar:`ITHRMST` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`
     - [M L\ :sup:`-1` t\ :sup:`-2`]
   
   * - :envvar:`FSTSE`
     - 1.0
     - Solid fraction for Thermal Stress Evolution (TSE) elements activation. 0 :math:`<` FSTSE :math:`<=` 1.
   
       .. note:: 
          Used only with thermal stress evolution (TSE) model: ITHRMST = 1. Some elements behave as elastic solids before solid fraction reaches 1 and this flag controls the onset of stress calculations for such elements. Value cannot be less than critical solid fraction.
     - NON-DIM

.. index:: fluid names, units identifiers

.. _FluidNamesandUnitsIdentifiers:

Fluid Names and Units Identifiers
===========================================================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSFluidNamesandUnitsIdentifiers:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`FLUID1`
     - "  "
     - Character string allowing user to identify fluid #1 (up to 50 characters)
     - NONE

   * - :envvar:`FLUID2`
     - "  "
     - Character string allowing user to identify fluid #2 (up to 50 characters)
     - NONE

   * - :envvar:`UNITS`
     - ...
     - Character string used to identify units (up to 10 characters)

       = "cgs", CGS units, cm/gram/seconds

       = "si", SI units, m/kg/seconds

       = "eng", engineering units, ft/slug/seconds

       = "cust", Custom units specified by the user,
     - NONE

   * - :envvar:`MUNITS`
     - ...
     - Character string used to identify mass units when "Custom" option is chosen (up to 10 characters)

       = "kg", Kilograms

       = "g", grams

       = "mg", milligrams

       = "lbm", pound mass

       = "slug", slugs

     - NONE

   * - :envvar:`LUNITS`
     - ...
     - Character string used to identify length units when "Custom" option is chosen (up to 10 characters)

       = "m", meter

       = "cm", centimeter

       = "mm", millimeter

       = "ft", feet

       = "in", inches

     - NONE

   * - :envvar:`TIMUNITS`
     - ...
     - Character string used to identify time units when "Custom" option is chosen (up to 10 characters)

       = "s", meter

       = "ms", milliseconds

       = "min", minutes

     - NONE

   * - :envvar:`CUNITS`
     - ...
     - Character string used to identify charge units when "Custom" option is chosen (up to 10 characters)

       = "coul", Coulomb

       = "scoul", statCoulomb

       .. note:: Currently, the unit of charge is chosen automatically based on the unit system. For the SI and CGS unit sytems, the unit of charge is set to coulomb and statCoulomb respectively. The electromechanical model cannot be used with the engineering or custom unit systems.

     - NONE

   * - :envvar:`TUNITS`
     - ...
     - Character string used to identify temperature units (up to 10 characters)

       = "c", degrees Celsius

       = "k", degrees Kelvin

       = "f", degrees Fahrenheit

       = "r", degrees Rankine

       Degrees Celsius and Kelvin are not compatible with Engineering units, and degrees Fahrenheit and Rankine are not compatible with CGS and SI units. 

       .. note:: Temperature units must be defined in a simulation even if no heat transfer is included.       
     - NONE

   * - :envvar:`IPGAUGE`
     - ...
     - Pressure type, absolute or gauge, for all pressure quantities used in the simulation.

       = 0, absolute pressure

       = 1, gauge pressure

       .. note:: Pressure type must be defined for a simulation.
     - NONE

   * - :envvar:`P_REFERENCE`
     - ...
     - Absolute reference pressure. Defaults to 1 atm. in SI, CGS, engineering or custom units appropriately, based on :envvar:`UNITS` specified.

     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`T_REFERENCE`
     - 0.0 C
     - Reference temperature.

     - [M L\ :sup:`-1` t\ :sup:`-2`]     

.. index:: granular flow properties

.. _GranularFlowProperties:

Granular Flow Properties
===========================================================

.. note:: All parameters in this section relate to the granular flow model, :envvar:`IFGRN` = 1 or 2. See :ref:`PhysicalModelOptions`. 

.. seealso:: \  :doc:`model-reference` -->  :ref:`granularFlowMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSGranularFlowProperties:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ANGREP`
     - :math:`\text{34}^{\circ}`
     - Angle of repose
     - DEGREES

   * - :envvar:`ANGMOV`
     - :envvar:`ANGREP` + :math:`\text{2}^{\circ}`
     - Friction angle
     - DEGREES

   * - :envvar:`CVELGRN`
     - 1.0
     - The absolute value of :envvar:`CVELGRN` is used as multiplier for threshold packing velocity. A larger value results in earlier packing. When :envvar:`CVELGRN` is negative, then full jamming is not produced - the granular mixture continues to move even at packing density.
     - NON-DIM

   * - :envvar:`DIAGRN`
     - 0.0
     - Average grain diameter
     - [L]

   * - :envvar:`DRGGRN`
     - 1.0
     - Multiplier in packing drag
     - NON-DIM

   * - :envvar:`GASDEN`
     - 0.0
     - Density of the fluid surrounding granular material (gas for :envvar:`IFGRN` = 1, liquid for :envvar:`IFGRN` = 2)
     - [M/L\ :sup:`3`]

   * - :envvar:`GASVIS`
     - 0.0
     - Dynamic viscosity of the fluid surrounding granular material (gas for :envvar:`IFGRN` = 1, liquid for :envvar:`IFGRN` = 2)
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`GRNREST`
     - 0.7
     - Grain restitution coefficient
     - NON-DIM     
   
   * - :envvar:`F1MN`
     - 0.0
     - Minimum volume fraction of granular material in the fluid

       .. note:: Used only with :envvar:`IFGRN` = 2.

     - NON-DIM

   * - :envvar:`FGRNMX`
     - 0.63
     - Close packing volume fraction
     - NON-DIM

   * - :envvar:`FGRNJAM`
     - 0.96825 :math:`\cdot` :envvar:`FGRNMX`
     - Mechanical jamming volume fraction
     - NON-DIM

   * - :envvar:`FGRNLPK`
     - 0.873 :math:`\cdot` :envvar:`FGRNMX`
     - Loose random packing volume fraction
     - NON-DIM

   * - :envvar:`RHOGRN`
     - 0.0
     - Grain density
     - [M/L\ :sup:`3`]

.. index:: moisture fluid properties, isothermal moisture drying model

.. _MoistureFluidPropertiesforIsothermalMoistureDryingModel:

Moisture Fluid Properties for Isothermal Moisture Drying Model
=================================================================

.. note:: 

   All parameters below require activation of :ref:`moistureDryingMR` (\ :envvar:`IFDRYING` :math:`>` 0 in :ref:`PhysicalModelOptions`)

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSMoistureFluidPropertiesforIsothermalMoistureDryingModel:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CLHVMST`
     - ...
     - Latent heat of vaporization

       | Defaults to the latent heat of vaporization of water in simulation units, which is 2.256e+06 J/kg in SI system.

     - [L\ :sup:`2`/t\ :sup:`2`]

   * - :envvar:`CVMST`
     - ...
     - Moisture specific heat

       | Defaults to specific heat of water in simulaion units, which is 4187.0 J/m\ :sup:`3`/deg in SI system.

     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`RHOMST`
     - ...
     - Moisture fluid density

       | Defaults to water density in simulation units, which is 1000.0 kg/m\ :sup:`3` in SI system.

     - [M/L\ :sup:`3`]

   * - :envvar:`TVMST`
     - ...
     - Evaporation temperature

       | Defaults to the boiling temperature of water at atmospheric conditions in simulation units, which is 373.15 in degrees Kelvin.
     - [T]

.. index:: 
   single: phase change; properties

.. _PhaseChangeProperties:

Phase Change Properties
============================

.. seealso:: \  :doc:`model-reference` -->  :ref:`condensationEvaporationOneFluidThermalBubblesMR` and :ref:`condensationEvaporationTwoFluidsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSPhaseChangeProperties:

.. list-table:: Namelist PROPS
   :widths: 10 15 50 25
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CLHV1`
     - ...
     - Latent heat of vaporization/condensation constant (\ :envvar:`ICLHV1` = 0) *or* value at temperature :envvar:`THV1` (when :envvar:`ICLHV1` = 2)

       .. note:: Used when :envvar:`IPHCHG` = 1, 2 or 5. Default value corresponds to the latent heat of vaporization of water in simulation units, which is 2.256e+06 J/kg in SI system.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :envvar:`ICLHV1` in :ref:`TabularPropertyInput`
     - [L\ :sup:`2`/t\ :sup:`2`]

   * - :envvar:`THV1`
     - ...
     - Temperature on heat of vaporization -- temperature curve corresponding to :envvar:`CLHV1`

       .. note:: Used when :envvar:`IPHCHG` = 1, 2 or 5 and :envvar:`ICLHV1` = 2. The default value corresponds to the boiling temperature of water in atmospheric conditions in simulation units, which is 373.15 in degrees Kelvin.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :envvar:`ICLHV1` in :ref:`TabularPropertyInput`
     - [T]

   * - :envvar:`CLHV2`
     - ...
     - Latent heat of vaporization/condensation value at temperature :envvar:`THV2`

       .. note:: Used when :envvar:`IPHCHG` = 1, 2 or 5 and :envvar:`ICLHV1` = 2. Default value corresponds to the latent heat of melting of ice in simulation units, which is 3.34e+05 J/kg in SI system.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :envvar:`ICLHV1` in :ref:`TabularPropertyInput`
     - [L\ :sup:`2`/t\ :sup:`2`]

   * - :envvar:`THV2`
     - ...
     - Temperature on heat of vaporization -- temperature curve corresponding to :envvar:`CLHV2`

       .. note:: Used when :envvar:`IPHCHG` = 1, 2 or 5 and :envvar:`ICLHV1` = 2. The default value corresponds to freezing temperature of water in atmospheric conditions in simulation units, which is 273.15 in degrees Kelvin.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :envvar:`ICLHV1` in :ref:`TabularPropertyInput`
     - [T]

   * - :envvar:`TCRIT`
     - 647.096
     - Critical temperature of fluid 1

       .. note:: Used when :envvar:`IPHCHG` = 1, 2 or 5 and :envvar:`ICLHV1` = 2 or :envvar:`IPSAT` = 2. The default value corresponds to water in simulation units, which is 647.096 in degrees Kelvin.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :envvar:`ICLHV1` in :ref:`TabularPropertyInput`

          * :envvar:`IPSAT` in :ref:`TabularPropertyInput`
     - [T]

   * - :envvar:`PCRIT`
     - ...
     - Critical pressure of fluid 1

       | Defaults to the critical pressure of water vapor in simulation units, which is 2.206d+07 Pa in SI system.     

       .. note:: Used when :envvar:`IPHCHG` = 1, 2 or 5 and :envvar:`IPSAT` = 2.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :envvar:`IPSAT` in :ref:`TabularPropertyInput`
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`ACNTRC`
     - 0.3439
     - Acentric factor of fluid 1.

       .. note:: Used when :envvar:`IPHCHG` = 1, 2 or 5 and :envvar:`IPSAT` = 2.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :envvar:`IPSAT` in :ref:`TabularPropertyInput`
     - NON-DIM

   * - :envvar:`RSIZE`
     - 0.0
     - Dimensionless accommodation coefficient for the liquid/vapor evaporative phase change rate.

       .. note:: Used when :envvar:`IPHCHG` = 1, 2 or 5.

       .. seealso:: \  :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`
     - NON-DIM

   * - :envvar:`RSIZE_COND`
     - :envvar:`RSIZE`
     - Dimensionless accommodation coefficient for the liquid/vapor condensation phase change rate.

       .. note:: Used when :envvar:`IPHCHG` = 1, 2 or 5.

       .. seealso:: \  :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`
     - NON-DIM     

   * - :envvar:`TV1`
     - ...
     - Temperature value on the saturation curve that corresponds to pressure :envvar:`PV1`. The saturation curve defines a relationship between saturation pressure and temperature. 
       The default value corresponds to the boiling temperature of water at atmospheric conditions in simulation units, which is 373.15 in degrees Kelvin. 

       When :envvar:`IPHCHG` = 1, :envvar:`TV1` defines the constant saturation temperature for the constant-pressure void model.

       .. note:: Used when :envvar:`IPHCHG` = 1, 2 or 5. 

       .. seealso:: \  :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`
     - [T]

   * - :envvar:`CVVAP`
     - ...
     - Vapor specific heat at constant volume of vaporized fluid 1 (\ :envvar:`IPHCHG` = 4) or fluid 2 (\ :envvar:`IPHCHG` = 5).
       The default value corresponds to the specific heat of water vapor at boiling point in atmospheric conditions in simulation units, 
       which is 1430.0 J/m\ :sup:`3`/deg in SI units.

       .. note:: Used when :envvar:`IPHCHG` = 1, 4 or 5.

       .. seealso:: \  :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`GAMMA`
     - 1.4
     - Exponent in void region equation of state, ``P*V^GAMMA = constant``. Zero or negative value indicates constant pressure. :envvar:`GAMMA` = ratio of specific heats of 'void' gas C\ :sub:`p`/C\ :sub:`v`, assumed constant.

       .. note:: Used when :envvar:`IPHCHG` = 1, 3, 4 or 5.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`adiabaticBubblesMR`.
     - NON-DIM

   * - :envvar:`PV0`
     - 0.0
     - Partial pressure of vapor in void regions.

       .. note:: Used when :envvar:`IPHCHG` = 1.

       .. seealso:: \  :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`PV1`
     - 1.013 :math:`\times` 10\ :sup:`6`
     - Absolute pressure value on the saturation curve that corresponds to temperature :envvar:`TV1`. The saturation curve defines a relationship between saturation pressure and temperature.

       .. note:: Used when :envvar:`IPHCHG` = 2 or 5.

       .. seealso:: \  :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`TVEXP`
     - 0.0
     - Exponent in the relationship between saturation pressure and temperature. For perfect gas :envvar:`TVEXP` is equal to (\ :envvar:`GAMMA` -1.0)*\ :envvar:`CVVAP`/\ :envvar:`CLHV1`. The saturation curve is defined by the Clapeyron equation:

       .. math:: P_{sat} = PV1 \cdot {e^{\tfrac{1}{{TVEXP}}\left( {\tfrac{1}{{TV1}} - \left. {\tfrac{1}{T}} \right)} \right.}} 

       Other equations can be introduced through code customization.

       .. note:: Used when :envvar:`IPHCHG` = 2 or 5 and :envvar:`IPSAT` = 2.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :envvar:`IPSAT` in :ref:`TabularPropertyInput`
     - NON-DIM

   * - :envvar:`TV0`
     - 0.0
     - Superheat temperature. Liquid in the bulk is allowed to heat to :envvar:`TV0` degrees before it starts evaporating (or boiling).

       In one-fluid problems, if the liquid temperature is less than :envvar:`TV0` the vapor nucleation occurs on a time scale defined by the larger of five time steps or :envvar:`CAVRT`. No gas nucleation occurs in two-fluid problems until the liquid temperature exceeds :envvar:`TV0` with the exception of cells located at existing vapor interfaces or adjacent to solid components with roughness > 0.0. When the liquid temperature reaches :envvar:`TV0` nucleation occurs on the time scale of five time steps.

       .. note:: Used when :envvar:`IPHCHG` = 2 or when :envvar:`IPHCHG` = 5 and :envvar:`ICAV` = 1.

       .. note:: The default value of 0.0 does not allow any superheat.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :envvar:`CAVRT` in :ref:`CavitationProperties`

          * :envvar:`ROUGH(m)` and :envvar:`ROUGHSUB(m)` in :ref:`ComponentPropertiesContactAngleandRoughness`
     - [T]

   * - :envvar:`TC0`
     - 0.0
     - Supercooling temperature. Gas in the bulk is allowed to cool to :envvar:`TC0` degrees before it starts condensing.

       No liquid nucleation occurs in two-fluid problems until the gas temperature drops below :envvar:`TC0` with the exception of cells located at existing liquid interfaces or adjacent to solid components with roughness > 0.0.

       .. note:: Used when :envvar:`IPHCHG` = 2.

       .. note:: The default value allows immediate condensation in the gas bulk.       

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :envvar:`ROUGH(m)` and :envvar:`ROUGHSUB(m)` in :ref:`ComponentPropertiesContactAngleandRoughness`
     - [T]

   * - :envvar:`CVNC`
     - 0.0
     - Specific heat for the non-condensable gas component.

       .. note:: Used when :envvar:`IPHCHG` = 2 and :envvar:`INCG` = 1.

       .. seealso:: \  

          * :envvar:`IPHCHG` and :envvar:`INCG` in :ref:`PhysicalModelOptions`

          * :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`.
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`RFNC`
     - 0.0

     - Specific gas constant for the non-condensable gas component.

       .. note:: Used when :envvar:`IPHCHG` = 2 and :envvar:`INCG` = 1.

       .. seealso:: \  

          * :envvar:`IPHCHG` and :envvar:`INCG` in :ref:`PhysicalModelOptions`
          * :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`.

     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

.. index:: segregation model parameters

.. _SegregationModelParameters:

Segregation Model Parameters
=================================================================

.. note:: All parameters in this section require :envvar:`ISEG` = 1 (\ :ref:`BinaryAlloySegregationParameters`)

.. seealso:: \  :doc:`model-reference` -->  :ref:`macroSegregationMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSSegregationModelParameters:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CEUT`
     - ...
     - Eutectic concentration

       Alternate: :envvar:`TEUT`

       .. note:: If :envvar:`TEUT` is set, then :envvar:`CEUT` is defined from the phase diagram according to :envvar:`CEUT` = :envvar:`CSTAR` • (:envvar:`TMELT` - :envvar:`TEUT`) / (:envvar:`TMELT` - :envvar:`TL1`); otherwise, defaults to 0.0.
     - [M/L\ :sup:`3`]

   * - :envvar:`CEXF1`
     - 0.0
     - Solute expansion coefficient
     - NON-DIM

   * - :envvar:`CSTAR`
     - 0.0
     - Reference solute concentration for concentration-dependent density. :envvar:`CSTAR` also corresponds to :envvar:`TS1` and :envvar:`TL1` on the phase diagram.
     - [M/L\ :sup:`3`]

   * - :envvar:`DRATIO`
     - 0.0
     - Ratio of solute diffusion coefficients in solid and liquid phases
     - NON-DIM

   * - :envvar:`PCOEF`
     - ...
     - Partition coefficient

       Alternate: :envvar:`TMELT`

       .. note:: If :envvar:`TMELT` is set, then :envvar:`PCOEF` defaults to :envvar:`PCOEF` = (:envvar:`TMELT` - :envvar:`TL1`) / (:envvar:`TMELT` - :envvar:`TS1`); otherwise, defaults to 0.0.
     - NON-DIM

   * - :envvar:`TEUT`
     - ...
     - Eutectic temperature 

       Alternate: :envvar:`CEUT`

       .. note:: If :envvar:`CEUT` is set, then :envvar:`TEUT` defaults to :envvar:`TEUT` = :envvar:`TMELT` - (:envvar:`TMELT` - :envvar:`TL1`) • :envvar:`CEUT` / :envvar:`CSTAR`; otherwise, defaults to 0.0.
     - [T]

   * - :envvar:`TL1`
     - 0.0
     - Liquidus temperature of fluid #1

       .. note:: When the iron solidification model is activated, :envvar:`IFIRON` = 1, the default value is computed from the initial carbon and silicon concentrations. Otherwise, defaults to 0.0.
     - [T]

   * - :envvar:`TMELT`
     - ...
     - Melting temperature of pure solvent

       Alternate: :envvar:`PCOEF`

       .. note:: If :envvar:`PCOEF` is set, then :envvar:`TMELT` is defined from the phase diagram according to :envvar:`TMELT` = (:envvar:`PCOEF` • :envvar:`TS1` - :envvar:`TL1`) / (:envvar:`PCOEF` - 1.0).
     - [T]

   * - :envvar:`TS1`
     - 0.0
     - Solidus temperature of fluid #1

       .. note:: When the iron solidification model is activated, :envvar:`IFIRON` = 1, and :envvar:`IF_CALC_TS1` = 0, defaults to 1373 K. Otherwise, defaults to 0.0.
     - [T]

.. index:: cast iron solidification

.. _CastIronSolidificationModelParameters:

Cast Iron Solidification Model Parameters
=================================================================

.. note:: 
   * All parameters in this section require :envvar:`IFIRON` = 1 (\ :ref:`PhysicalModelOptions`)
   * Volume changes computed by the iron model are coupled only to the simple solidification shrinkage mode, :envvar:`ISHRNK` = 2.

.. seealso:: \  :doc:`model-reference` -->  :ref:`SolidificationShrinkagePorosityModelsTh`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSCastIronSolidificationModelParameters:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_CALC_TS1`
     - 0
     - Flag for setting solidus temperature :envvar:`TS1` for the iron solidification model.

       | =0, set equal to the eutectic temperature 1373 K
       | =1, user-defined value

       .. note:: Used only with the iron solidification model, :envvar:`IFIRON` = 1, and linear latent heat release, :envvar:`IFST` = 0.
     - NONE
     
   * - :envvar:`CIRON`
     - 0.0
     - Initial carbon content, % weight
     - NON-DIM

   * - :envvar:`SIIRON`
     - 0.0
     - Initial silicon content, % weight
     - NON-DIM

   * - :envvar:`FSEUTE`
     - 0.95
     - Solid fraction at the end of eutectic reaction
     - NON-DIM

   * - :envvar:`RHOCARBIDE`
     - ...
     - Density of the carbide formed during eutectic reaction

       .. note:: Default value is set according to the simulation unit system, i.e., 7100 kg/m\ :sup:`3` in SI units.
     - [M/L\ :sup:`3`]

   * - :envvar:`RHOGAMMA`
     - ...
     - Density of the |gamma|-iron phase (austenite)

       .. note:: Default value is set according to the simulation unit system, i.e., 7170 kg/m\ :sup:`3` in SI units.
     - [M/L\ :sup:`3`]

   * - :envvar:`RHOGRAPHITE`
     - ...
     - Density of the graphite formed during the eutectic reaction

       .. note:: Default value is set according to the simulation unit system, i.e., 2200 kg/m\ :sup:`3` in SI units.
     - [M/L\ :sup:`3`]

   * - :envvar:`RHOENDIRON`
     - ...
     - Density of the solid phase formed after eutectic reaction

       .. note:: Default value is set according to the simulation unit system, i.e., 6400 kg/m\ :sup:`3` in SI units.
     - [M/L\ :sup:`3`]

   * - :envvar:`VEUTPHI`
     - 1.0
     - Chilling susceptibility coefficient

       .. note:: Values must be between 0.0 and 1.0.
     - NON-DIM

.. index:: solidification properties

.. _SolidificationProperties:

Solidification Properties
=================================================================

| *n* :math:`\leq` *1000, temperature / energy pair index*

.. note:: All parameters in this section require :envvar:`IFSLD` = 1 (\ :ref:`PhysicalModelOptions`)

.. seealso:: \  :doc:`model-reference` -->  :ref:`solidificationSectionMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSSolidificationProperties:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CLHT(n)`
     - 0.0
     - Specific energy of fluid #1 between temperatures :envvar:`CLTP(n-1)` and :envvar:`CLTP(n)`
       Alternate: :envvar:`CLHT1`

       :envvar:`CLHT(1)` is the specific energy at :envvar:`CLTP(1)`.
     - [L\ :sup:`2` t\ :sup:`-2`]

   * - :envvar:`CLTP(n)`
     - 0.0
     - Temperature point :envvar:`n` for latent heat release specification. These temperatures may be equal for isothermal phase changes. The first and last entries are interpreted as the solidus and liquidus temperatures, respectively, overwriting :envvar:`TS1` and :envvar:`TL1`.
     - [T]

   * - :envvar:`CLHT1`
     - 0.0
     - Latent heat of fusion in fluid #1

       Alternate: :envvar:`CLHT`
     - [L\ :sup:`2` t\ :sup:`-2`]

   * - :envvar:`CVS1`
     - :envvar:`CV1`
     - Specific heat of solidified fluid #1

       .. note:: If :envvar:`CLHT` and :envvar:`CLTP` arrays are specified, :envvar:`CVS1` is not used.
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`FSCO`
     - 0.15
     - Fraction of solid at coherency point. 

       .. note:: When the value of the solid fraction is below :envvar:`FSCO`, then the solidified material is assumed to increase the apparent viscosity. When solid fraction is above :envvar:`FSCO`, the solidified material forms a coherent structure which is accounted for by using a drag force.
     - NON-DIM

   * - :envvar:`FSCR`
     - 0.67
     - Critical solid fraction above which metal has no fluidity
     - NON-DIM
   
   * - :envvar:`FSTSE`
     - 1.0
     - Solid fraction for Thermal Stress Evolution (TSE) elements activation. 0 :math:`<` FSTSE :math:`<=` 1.
   
       .. note:: 
          Used only with thermal stress evolution (TSE) model: ITHRMST = 1. Some elements behave as elastic solids before solid fraction reaches 1 and this flag controls the onset of stress calculations for such elements. Value cannot be less than critical solid fraction.
     - NON-DIM

   * - :envvar:`PGASMP`
     - ...
     - Critical pressure below which pores can form during solidification. Used in the micro-porosity model, :envvar:`IMUPOR` = 1.
       Defaults to zero if gauge pressure is used, :envvar:`IPGAUGE` = 1, and to :envvar:`P_REFERENCE` otherwise.
     - [M L\ :sup:`-1` t\ :sup:`-2`]     

   * - :envvar:`BLKMOD_LIQ`
     - 0.0
     - Bulk modulus of liquid phase. Used in the micro-porosity model, :envvar:`IMUPOR` = 1.
     - [M L\ :sup:`-1` t\ :sup:`-2`] 

   * - :envvar:`BLKMOD_FSCR`
     - 0.0
     - Bulk modulus of solidifing fluid at critical solid fraction :envvar:`FSCR`. Used in the micro-porosity model, :envvar:`IMUPOR` = 1.
     - [M L\ :sup:`-1` t\ :sup:`-2`] 

   * - :envvar:`RHOFS`
     - :envvar:`RHOF`
     - Density of solidified fluid #1
     - [M/L\ :sup:`3`]

   * - :envvar:`THCS1`
     - :envvar:`THC1`
     - Thermal conductivity of solidified fluid #1
     - [M L t\ :sup:`-3` T\ :sup:`-1`]

   * - :envvar:`TL1`
     - 0.0
     - Liquidus temperature of fluid #1

       Only used when TS1 :math:`>` 0
     - [T]

   * - :envvar:`TNIYAM`
     - ...
     - Temperature at which solidification variables are calculated (i.e., solidification time, temperature gradient, etc.).

       .. note:: Defaults to solidus temperature :envvar:`TS1` for standard solidification model, and to eutectic temperature for the binary alloy or iron solidification models.     

     - [T]

   * - :envvar:`TS1`
     - 0.0
     - Solidus temperature of fluid #1
     - [T]

   * - :envvar:`TSDRG`
     - 1.0
     - Coefficient of solidification drag

       Used when solidification model is turned on (:envvar:`IFSLD` = 1) and the drag-based flow model is on (:envvar:`IFSLD_DRG` = 1).
     - [1/t]

   * - :envvar:`TSTAR`
     - 0.0 degrees C or R
     - Reference temperature for temperature dependent fluid properties
     - [T]

.. index:: state equation properties

.. _StateEquationProperties:

State Equation Properties
=================================================================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSStateEquationProperties:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`RCSQL`
     - 0.0
     - Reciprocal (|rho| •c\ :sup:`2`) of fluid #1

       .. note:: Only used when :envvar:`ICMPRS` = 0, in :ref:`PhysicalModelOptions`.
       
       .. seealso:: \  :doc:`model-reference` -->  :ref:`acousticWavesMR`.
     - [L t\ :sup:`2`/M]

   * - :envvar:`RCSQV`
     - 0.0
     - Reciprocal (|rho| •c\ :sup:`2`) of fluid #2

       .. note:: Only used when :envvar:`ICMPRS` = 0, in :ref:`PhysicalModelOptions`.
       
       .. seealso:: \  :doc:`model-reference` -->  :ref:`acousticWavesMR`.
     - [L t\ :sup:`2`/M]

   * - :envvar:`RF2`
     - 0.0
     - Specific gas constant of fluid #2 (:envvar:`RF2` = (:envvar:`GAMMA`-1)•:envvar:`CV2` for a gamma-law gas)

       .. note:: 
          * Only used when :envvar:`ICMPRS` = 1, in :ref:`PhysicalModelOptions`.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`compressibleFlowMR`.
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`CV2`
     - 0.0
     - Specific heat to fluid #2

       .. seealso:: \  :envvar:`NMAT` in :ref:`FlowModeOptions`.
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

.. index:: surface tension properties

.. _SurfaceTensionProperties:

Surface Tension Properties
=================================================================

.. note:: All parameters in this section require :envvar:`IFSFT` = 1 (\ :ref:`PhysicalModelOptions`)

.. seealso:: \  :doc:`model-reference` -->  :ref:`surfaceTensionMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSSurfaceTensionProperties:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CANGLE`
     - +90°
     - Static contact angle (in degrees) for fluid #1 wall adhesion

       0 :math:`<` :envvar:`CANGLE` :math:`<` 90 indicates wetting condition

       90 :math:`<` :envvar:`CANGLE` :math:`<` 180 indicates non-wetting condition
     - DEGREES

   * - :envvar:`CSIGMA`
     - 0.0
     - Surface tension coefficient temperature sensitivity

       |sigma| (T) = :envvar:`SIGMA` - :envvar:`CSIGMA` :math:`\times` (T- :envvar:`TSTAR`).
     - [M t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`SIGMA`
     - 0.0
     - Surface tension coefficient.
     - [M/t\ :sup:`2`]

   * - :envvar:`TSTAR`
     - 0.0 degrees C or R
     - Reference temperature for temperature-dependent fluid properties
     - [T]

.. index:: thermal properties

.. _ThermalProperties:

Thermal Properties
=================================================================

.. note:: 

   * Non-zero default for fluid #1 specific heat is water; non-zero default for fluid #2 specific heat is air.

   * All parameters in this section require energy transport, :envvar:`IFENRG` :math:`>` 0 in :ref:`PhysicalModelOptions`

.. seealso:: \  :doc:`model-reference` -->  :ref:`EnergyAdvectionMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSThermalProperties:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CV1`
     - 0.0
     - Specific heat of fluid #1
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`CV2`
     - 0.0
     - Specific heat to fluid #2

       .. seealso:: \  :envvar:`NMAT` in :ref:`FlowModeOptions`.
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`CVS1`
     - :envvar:`CV1`
     - Specific heat of solidified fluid #1

       If :envvar:`CLHT` and :envvar:`CLTP` arrays are specified, :envvar:`CVS1` is not used.
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`FLHTC`
     - -1.0
     - Heat-transfer coefficient between fluid #1 and #2

     - [M T\ :sup:`-1` t\ :sup:`-3`]     

   * - :envvar:`POFL1`
     - 0.0
     - Uniform power source per unit mass for fluid #1

     - [L\ :sup:`2`/t\ :sup:`2`]

   * - :envvar:`POFL2`
     - 0.0
     - Uniform power source per unit mass for fluid #2

     - [L\ :sup:`2`/t\ :sup:`2`]

   * - :envvar:`THC1`
     - -1.0
     - Thermal conductivity of fluid #1
     - [M L t\ :sup:`-3` T\ :sup:`-1`]

   * - :envvar:`THC2`
     - -1.0
     - Thermal conductivity of fluid #2
     - [M L t\ :sup:`-3` T\ :sup:`-1`]

   * - :envvar:`THCS1`
     - :envvar:`THC1`
     - Thermal conductivity of solidified fluid #1
     - [M L t\ :sup:`-3` T\ :sup:`-1`]

.. index:: viscous properties

.. _ViscousProperties:

Viscous Properties
=================================================================

.. note:: All parameters in this section require activation of viscous stress, :envvar:`IFVISC` = 1, in :ref:`PhysicalModelOptions`

.. seealso:: \  :doc:`model-reference` -->  :ref:`ComputingViscousStressesMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSViscousProperties:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`MU1`
     - :envvar:`MUI`
     - Dynamic viscosity of fluid #1
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`MU2`
     - :envvar:`MUI`
     - Dynamic viscosity of fluid #2
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`MUC00`
     - 0.0
     - Coefficient in strain rate-dependent viscosity model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`nonNewtonianFluidMR`.
     - NON-DIM

   * - :envvar:`MUC0`
     - 1.0
     - Coefficient in strain rate-dependent viscosity model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`nonNewtonianFluidMR`.
     - NON-DIM

   * - :envvar:`MUC1`
     - 0.0
     - Coefficient in strain rate-dependent viscosity model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`nonNewtonianFluidMR`.
     - [t]

   * - :envvar:`MUC2`
     - 0.0
     - Coefficient in strain rate-dependent viscosity model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`nonNewtonianFluidMR`.
     - NON-DIM

   * - :envvar:`MUC3`
     - 0.0
     - Coefficient in strain rate-dependent viscosity model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`nonNewtonianFluidMR`.
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`MUC4`
     - 0.0
     - Coefficient in strain rate-dependent viscosity model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`nonNewtonianFluidMR`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`MUCTST`
     - 1/(1000 • :envvar:`TWFIN`)
     - Minimum fluid strain rate applied in strain rate-dependent viscosity model.

       .. seealso:: \  

          * :envvar:`TWFIN` in :ref:`TerminationControl`.

          * :doc:`model-reference` -->  :ref:`nonNewtonianFluidMR`.
     - [1/t]

   * - :envvar:`MUI`
     - 0.0
     - Initial coefficient of dynamic viscosity for thixotropic flow model

       .. note:: Used only when :envvar:`IMUT` = 1 in :ref:`TurbulenceandViscousOptions`.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`thixotropicFluidsMR`.
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`MULES`
     - 0.1
     - Coefficient in Large Eddy Viscosity model

       .. seealso:: \  

          * :envvar:`IFVIS` in :ref:`TurbulenceandViscousOptions`.

          * :doc:`model-reference` -->  :ref:`turbulenceSectionMR`.
     - NON-DIM

   * - :envvar:`MUS`
     - 0.0
     - Additional viscosity coefficient for density- or solid-fraction-dependent viscosity model. Only used when :envvar:`MUS` :math:`>` 0.0.

       For the density-dependent viscosity :envvar:`MUS` is used for one-fluid (:envvar:`NMAT` = 1), variable density (:envvar:`IFRHO` :math:`>` 0) flow. :envvar:`MU1` corresponds to the fluid density :envvar:`RHOF`, and :envvar:`MUS` to the fluid density :envvar:`RHOFS`.

       For solid fraction-dependent viscosity :envvar:`MUS` corresponds to the solid phase and :envvar:`MU1` to the liquid phase. Used when :envvar:`MUS` :math:`>` 0.0, solidification model is turned on (:envvar:`IFSLD` = 1) and the viscosity-based flow model is on (:envvar:`IFSLD_DRG` = 0). The mixture viscosity is calculated as an average when the solid fraction exceeds the coherency point :envvar:`FSCO`.

       .. seealso:: \  

          * :envvar:`IFRHO` in :ref:`AdvectionOptions`, :envvar:`IFSLD` in :ref:`PhysicalModelOptions`.

          * :doc:`model-reference` -->  :ref:`DensityAdvectionMR`.
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`MUTHK`
     - 0.0
     - Rate of viscosity increase (flow thickening) in the thixotropic model

       .. note:: Used only when :envvar:`IMUT` = 1 in :ref:`TurbulenceandViscousOptions`.
       
       .. seealso:: \  :doc:`model-reference` -->  :ref:`thixotropicFluidsMR`.
     - [1/t]

   * - :envvar:`MUTHN0`
     - 0.0
     - First coefficient in the strain rate-dependent rate of viscosity decrease (flow thinning) in the thixotropic model

       .. note:: Used only when :envvar:`IMUT` = 1 in :ref:`TurbulenceandViscousOptions`.
       
       .. seealso:: \  :doc:`model-reference` -->  :ref:`thixotropicFluidsMR`.
     - [1/t]

   * - :envvar:`MUTHN1`
     - 0.0
     - Second coefficient in the strain rate-dependent rate of viscosity decrease (flow thinning) in the thixotropic model

       .. note:: 

          * Thinning rate = :envvar:`MUTHN0` + :envvar:`MUTHN1` • :math:`\left| {{\text{eij}}} \right|` where :math:`\left| {{\text{eij}}} \right|` is the strain rate.

          * Used only when :envvar:`IMUT` = 1 in :ref:`TurbulenceandViscousOptions`.
       
       .. seealso:: \  :doc:`model-reference` -->  :ref:`thixotropicFluidsMR`.
     - NON-DIM

   * - :envvar:`MUTMP1`
     - 0.0
     - Coefficient in temperature-dependent viscosity model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`nonNewtonianFluidMR`.
     - NON-DIM

   * - :envvar:`MUTMP2`
     - 0.0
     - Coefficient in temperature-dependent viscosity model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`nonNewtonianFluidMR`.
     - [T]

   * - :envvar:`MUTMP3`
     - 1.0
     - Coefficient in temperature-dependent viscosity model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`nonNewtonianFluidMR`.
     - NON-DIM

   * - :envvar:`MUVOID`
     - 0.0
     - Dynamic viscosity of the void region. Used in the permeable mold model, :envvar:`IOBSVENT(n)` = 1.

       .. seealso:: \ :envvar:`IOBSVENT` in :ref:`ComponentPermeablemold`.
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`GRNREST`
     - 0.7
     - Grain restitution coefficient
     - NON-DIM     

   * - :envvar:`TSTAR`
     - 0.0 degrees C or R
     - Reference temperature for temperature-dependent fluid properties
     - [T]

.. index:: 
   single: wall shear; properties

.. _WallShearProperties:

Wall Shear Properties
=================================================================

.. note:: All parameters in this section require activation of wall shear, :envvar:`IWSH` = 1 in :ref:`TurbulenceandViscousOptions`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSWallShearProperties:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`FRCOF`
     - -1.0
     - Coefficient of friction between fluid and solid walls for the partial slip model. A zero value corresponds to free slip and an infinite value to no-slip. A negative value turns off the partial slip model. Also see :envvar:`OFRCOF` in namelist :envvar:`OBS`.

       .. seealso:: \  :envvar:`OFRCOF(m)` in :ref:`ComponentPropertiesContactAngleandRoughness`.
     - [M L\ :sup:`-2` t\ :sup:`-1`]

.. index:: tabular property input

.. _TabularPropertyInput:

Tabular Property Input
=================================================================

.. seealso:: \  :doc:`model-reference` -->  :ref:`temperatureDependentPropertiesMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistPROPSTabularPropertyInput:

.. list-table:: Namelist PROPS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IRHOF`
     - 0
     - Flag for the definition of density of fluid #1

       | =0, constant or linear function of temperature
       | =1, tabular function of temperature (not used in one-fluid, variable density flows, :envvar:`IFRHO` :math:`>` 1 and :envvar:`NMAT` = 1)

       .. seealso:: \  

          * :envvar:`RHOF` in :ref:`DensityProperties`
       
          * :doc:`model-reference` -->  :ref:`buoyantFlowMR`
     - NONE

   * - :envvar:`FRHOF`
     - 
     - The external filename for tabular density of fluid #1 as a function of temperature (used only if :envvar:`IRHOFC` :math:`\geq` 2)
     - NONE

   * - :envvar:`IRHOFC`
     - 0
     - The column number for density of fluid #1 in the external file
     - NONE

   * - :envvar:`IRHOF2`
     - 0
     - Flag for the definition of density of fluid #2

       | =0, constant or linear function of temperature
       | =1, tabular function of temperature (not used for compressible flows, :envvar:`ICMPRS` = 1)
       
       .. seealso:: \  

          * :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.

          * :envvar:`RHOF2` in :ref:`DensityProperties`
     - NONE

   * - :envvar:`FRHOF2`
     - 
     - The external filename for tabular density of fluid #2 as a function of temperature (used only if :envvar:`IRHOF2C` :math:`\geq` 2)
     - NONE

   * - :envvar:`IRHOF2C`
     - 0
     - The column number for density of fluid #2 in the external file
     - NONE

   * - :envvar:`IMU1`
     - 0
     - Flag for the definition of viscosity of fluid #1

       | =0, constant
       | =1, tabular function of temperature
       | =2, tabular function of strain rate
       | =3, analytical function of strain rate
       | =4, analytical function of temperature
       | =5, analytical function of strain rate and temperature
       | =6, Carreau function of strain rate
       | =7, power law function of strain rate

       .. seealso:: \  

          * :envvar:`MU1` in :ref:`ViscousProperties`

          * :doc:`model-reference` -->  :ref:`nonNewtonianFluidMR`.
     - NONE

   * - :envvar:`FMU1`
     - 
     - The external filename for tabular viscosity of fluid #1 as a function of temperature (:envvar:`IMU1` = 1) or strain rate (:envvar:`IMU1` = 2) (used only if :envvar:`IMU1C` :math:`\geq` 2)
     - NONE

   * - :envvar:`IMU1C`
     - 0
     - The column number for viscosity of fluid #1 in the external file
     - NONE

   * - :envvar:`IMU2`
     - 0
     - Flag for the definition of viscosity of fluid #2

       | =0, constant
       | =1, tabular function of temperature
       | =2, tabular function of strain rate

       .. seealso:: \  :envvar:`MU2` in :ref:`ViscousProperties`
     - NONE

   * - :envvar:`FMU2`
     - 
     - The external filename for tabular viscosity of fluid #2 as a function of temperature (:envvar:`IMU2` = 1) or strain rate (:envvar:`IMU2` = 2) (used only if :envvar:`IMU2C` :math:`\geq` 2)
     - NONE

   * - :envvar:`IMU2C`
     - 0
     - The column number for viscosity of fluid #2 in the external file
     - NONE

   * - :envvar:`ICV1`
     - 0
     - Flag for the definition of specific heat of fluid #1

       | =0, constant
       | =1, tabular function of temperature

       .. seealso:: \  :envvar:`CV1` in :ref:`ThermalProperties`
     - NONE

   * - :envvar:`FCV1`
     - 
     - The external filename for tabular specific heat of fluid #1 as a function of temperature (used only if :envvar:`ICV1C` :math:`\geq` 2)
     - NONE

   * - :envvar:`ICV1C`
     - 0
     - The column number for specific heat of fluid #1 in the external file
     - NONE

   * - :envvar:`ICV2`
     - 0
     - Flag for the definition of specific heat of fluid #2

       | =0, constant
       | =1, tabular function of temperature

       .. seealso:: \  :envvar:`CV2` in :ref:`ThermalProperties`
     - NONE

   * - :envvar:`FCV2`
     - 
     - The external filename for tabular specific heat of fluid #2 as a function of temperature (used only if :envvar:`ICV2C` :math:`\geq` 2)
     - NONE

   * - :envvar:`ICV2C`
     - 0
     - The column number for specific heat of fluid #2 in the external file
     - NONE

   * - :envvar:`ICVNC`
     - 0
     - Flag for the definition of specific heat of non-condensable gas component

       | =0, constant
       | =1, tabular function of temperature

       .. seealso:: \  :envvar:`CVNC` in :ref:`PhaseChangeProperties`
     - NONE

   * - :envvar:`FCVNC`
     - 
     - The external filename for tabular specific heat of non-condensable gas component as a function of temperature (used only if :envvar:`ICVNCC` :math:`\geq` 2)
     - NONE

   * - :envvar:`ICVNCC`
     - 0
     - The column number for specific heat of non-condensable gas component in the external file
     - NONE

   * - :envvar:`ITHC1`
     - 0
     - Flag for the definition of thermal conductivity of fluid #1

       | =0, constant
       | =1, tabular function of temperature

       .. seealso:: \  :envvar:`THC1` in :ref:`ThermalProperties`
     - NONE

   * - :envvar:`FTHC1`
     - 
     - The external filename for tabular thermal conductivity of fluid #1 as a function of temperature (used only if :envvar:`ITHC1C` :math:`\geq` 2)
     - NONE

   * - :envvar:`ITHC1C`
     - 0
     - The column number for thermal conductivity of fluid #1 in the external file
     - NONE

   * - :envvar:`ITHC2`
     - 0
     - Flag for the definition of thermal conductivity of fluid #2

       | =0, constant
       | =1, tabular function of temperature

       .. seealso:: \  :envvar:`THC2` in :ref:`ThermalProperties`
     - NONE

   * - :envvar:`FTHC2`
     - 
     - The external filename for tabular thermal conductivity of fluid #2 as a function of temperature (used only if :envvar:`ITHC2C` :math:`\geq` 2)
     - NONE

   * - :envvar:`ITHC2C`
     - 0
     - The column number for thermal conductivity of fluid #2 in the external file
     - NONE

   * - :envvar:`IFST`
     - 0
     - Flag for the definition of latent heat release during solidification of fluid #1

       | =0, linear with temperature
       | =1, tabular definition of enthalpy as a function of temperature
       | =2, tabular definition of solid fraction as a function of temperature

       .. seealso:: \  :envvar:`CLHT(n)` and :envvar:`CLHT1` in :ref:`SolidificationProperties`
     - NONE

   * - :envvar:`FFST`
     - 
     - The external filename for tabular enthalpy (:envvar:`IFST` = 1) or solid fraction (:envvar:`IFST` = 2) of fluid #1 as a function of temperature (used only if :envvar:`IFSTC` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFSTC`
     - 0
     - The column number for tabular enthalpy (:envvar:`IFST` = 1) or solid fraction (:envvar:`IFST` = 2) of fluid #1 in the external file
     - NONE

   * - :envvar:`IBLKMODTS`
     - 0
     - Flag for the definition of bulk modulus of solidified phase of fluid #1

       | =0, constant
       | =1, tabular function of temperature

       .. seealso:: \  :envvar:`BLKMODTS` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FBLKMODTS`
     - 
     - The external filename for tabular bulk modulus of solidified phase of fluid #1 as a function of temperature (used only if :envvar:`IBLKMODTSC` :math:`\geq` 2)
     - NONE

   * - :envvar:`IBLKMODTSC`
     - 0
     - The column number for bulk modulus of solidified phase of fluid #1 in the external file
     - NONE

   * - :envvar:`IELASTMODTS`
     - 0
     - Flag for the definition of elastic modulus of solidified phase of fluid #1

       | =0, constant
       | =1, tabular function of temperature

       .. seealso:: \  :envvar:`ELASTMODTS` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FELASTMODTS`
     - 
     - The external filename for tabular elastic modulus of solidified phase of fluid #1 as a function of temperature (used only if :envvar:`IELASTMODTSC` :math:`\geq` 2)
     - NONE

   * - :envvar:`IELASTMODTSC`
     - 0
     - The column number for elastic modulus of solidified phase of fluid #1 in the external file
     - NONE

   * - :envvar:`IPOISSONRTS`
     - 0
     - Flag for the definition of Poisson ratio of solidified phase of fluid #1

       | =0, constant
       | =1, tabular function of temperature

       .. seealso:: \  :envvar:`POISSONRTS` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FPOISSONRTS`
     - 
     - The external filename for tabular Poisson ratio of solidified phase of fluid #1 as a function of temperature (used only if :envvar:`IPOISSONRTSC` :math:`\geq` 2)
     - NONE

   * - :envvar:`IPOISSONRTSC`
     - 0
     - The column number for Poisson ratio of solidified phase of fluid #1 in the external file
     - NONE

   * - :envvar:`ISHRMODTS`
     - 0
     - Flag for the definition of shear modulus of solidified phase of fluid #1

       | =0, constant
       | =1, tabular function of temperature

       .. seealso:: \  :envvar:`SHRMODTS` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FSHRMODTS`
     - 
     - The external filename for tabular shear modulus of solidified phase of fluid #1 as a function of temperature (used only if :envvar:`ISHRMODTSC` :math:`\geq` 2)
     - NONE

   * - :envvar:`ISHRMODTSC`
     - 0
     - The column number for shear modulus of solidified phase of fluid #1 in the external file
     - NONE

   * - :envvar:`IYLDSTRTS`
     - 0
     - Flag for the definition of yield stress limit for solidified fluid 1

       | =0, constant
       | =1, tabular function of temperature
       
       .. note:: Used with Thermal Stress Evolution (TSE) model: :envvar:`ITHRMST` = 1 
 
       .. seealso:: \  :envvar:`YLDSTRTS` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FYLDSTRTS`
     - 
     - The external filename for tabular yield stress limit for solidified phase of fluid #1 as a function of temperature (used only if :envvar:`IYLDSTRTSC` :math:`\geq` 2)
     - NONE

   * - :envvar:`IYLDSTRTSC`
     - 0
     - The column number for yield stress limit for solidified phase of fluid #1 in the external file
     - NONE

   * - :envvar:`IYIELD1`
     - 0
     - Flag for the definition of yield stress limit of fluid #1

       | =0, constant
       | =1, tabular function of temperature

       .. note:: Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`>` 0 

       .. seealso:: \  :envvar:`YIELD1` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FYIELD1`
     - 
     - The external filename for tabular yield stress limit of fluid #1 as a function of temperature (used only if :envvar:`IYIELD1C` :math:`\geq` 2)
     - NONE

   * - :envvar:`IYIELD1C`
     - 0
     - The column number for yield stress limit of fluid #1 in the external file. Must be at least column #2 to read from external file.
     - NONE

   * - :envvar:`IYIELD2`
     - 0
     - Flag for the definition of yield stress limit of fluid #2

       | =0, constant
       | =1, tabular function of temperature
       
       .. note:: Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`>` 0

       .. seealso:: \  :envvar:`YIELD2` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FYIELD2`
     - 
     - The external filename for tabular yield stress limit of fluid #2 as a function of temperature (used only if :envvar:`IYIELD2C` :math:`>` = 2)
     - NONE

   * - :envvar:`IYIELD2C`
     - 0
     - The column number for yield stress limit of fluid #2 in the external file. Must be at least column #2 to read from external file.
     - NONE

   * - :envvar:`IEMOD1`
     - 0
     - Flag for the definition of shear elastic modulus of fluid #1

       | =0, constant
       | =1, tabular function of temperature

       .. note:: Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`>` 0 

       .. seealso:: \  :envvar:`EMOD1` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FEMOD1`
     - 
     - The external filename for tabular shear elastic modulus of fluid #1 as a function of temperature (used only if :envvar:`IEMOD1C` :math:`\geq` 2)
     - NONE

   * - :envvar:`IEMOD1C`
     - 0
     - The column number for shear elastic modulus of fluid #1 in the external file. Must be at least column #2 to read from external file.
     - NONE

   * - :envvar:`IEMOD2`
     - 0
     - Flag for the definition of shear elastic modulus of fluid #2

       | =0, constant
       | =1, tabular function of temperature
       
       .. note:: Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`>` 0

       .. seealso:: \  :envvar:`EMOD2` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FEMOD2`
     - 
     - The external filename for tabular shear elastic modulus of fluid #2 as a function of temperature (used only if :envvar:`IEMOD2C` :math:`\geq` 2)
     - NONE

   * - :envvar:`IEMOD2C`
     - 0
     - The column number for shear elastic modulus of fluid #2 in the external file. Must be at least column #2 to read from external file.
     - NONE

   * - :envvar:`IRELAX1`
     - 0
     - Flag for the definition of relaxation time of fluid #1

       | =0, constant
       | =1, tabular function of temperature

       .. note:: Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`\geq` 2 

       .. seealso:: \  :envvar:`RELAX1` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FRELAX1`
     - 
     - The external filename for tabular relaxation time of fluid #1 as a function of temperature (used only if :envvar:`IRELAX1C` :math:`\geq` 2)
     - NONE

   * - :envvar:`IRELAX1C`
     - 0
     - The column number for relaxation time of fluid #1 in the external file. Must be at least column #2 to read from external file.
     - NONE

   * - :envvar:`IRELAX2`
     - 0
     - Flag for the definition of  relaxation time of fluid #2

       | =0, constant
       | =1, tabular function of temperature
       
       .. note:: Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`\geq` 2

       .. seealso:: \  :envvar:`RELAX2` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FRELAX2`
     - 
     - The external filename for tabular relaxation time of fluid #2 as a function of temperature (used only if :envvar:`IRELAX2C` :math:`>` = 2)
     - NONE

   * - :envvar:`IRELAX2C`
     - 0
     - The column number for relaxation time of fluid #2 in the external file. Must be at least column #2 to read from external file.
     - NONE

   * - :envvar:`IMOBLTY1`
     - 0
     - Flag for the definition of the mobility factor of fluid #1

       | =0, constant
       | =1, tabular function of temperature

       .. note:: Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`\geq` 3

       .. seealso:: \  :envvar:`MOBLTY1` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FMOBLTY1`
     - 
     - The external filename for tabular mobility factor of fluid #1 as a function of temperature (used only if :envvar:`IMOBLTY1C` :math:`\geq` 2)
     - NONE

   * - :envvar:`IMOBLTY1C`
     - 0
     - The column number for the mobility factor of fluid #1 in the external file. Must be at least column #2 to read from external file.
     - NONE

   * - :envvar:`IMOBLTY2`
     - 0
     - Flag for the definition of the mobility factor of fluid #2

       | =0, constant
       | =1, tabular function of temperature
       
       .. note:: Used with visco-elastic-plastic model: :envvar:`IELAST` :math:`\geq` 3

       .. seealso:: \  :envvar:`MOBLTY2` in :ref:`ElasticandPlasticProperties`
     - NONE

   * - :envvar:`FMOBLTY2`
     - 
     - The external filename for tabular mobility factor of fluid #2 as a function of temperature (used only if :envvar:`IMOBLTY2C` :math:`>` = 2)
     - NONE

   * - :envvar:`IMOBLTY2C`
     - 0
     - The column number for the mobility factor of fluid #2 in the external file. Must be at least column #2 to read from external file.
     - NONE

   * - :envvar:`ISIGMA`
     - 0
     - Flag for the definition of surface tension coefficient

       | =0, constant or linear function of temperature
       | =1, tabular function of temperature

       .. seealso:: \  :envvar:`SIGMA` in :ref:`SurfaceTensionProperties`
     - NONE

   * - :envvar:`FSIGMA`
     - 
     - The external filename for tabular surface tension coefficient as a function of temperature (used only if :envvar:`ISIGMAC` :math:`\geq` 2)
     - NONE

   * - :envvar:`ISIGMAC`
     - 0
     - The column number for surface tension coefficient in the external file :envvar:`FSIGMA`
     - NONE

   * - :envvar:`IFLHTC`
     - 0
     - Flag for the definition of the heat transfer coefficient between fluid #1 and #2

       | =0, constant
       | =1, tabular function of temperature

       .. seealso:: \  :envvar:`FLHTC` in :ref:`ThermalProperties`
     - NONE

   * - :envvar:`FFLHTC`
     - 
     - The external filename for tabular inter-fluid heat transfer coefficient as a function of temperature (used only if :envvar:`IFLHTC` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFLHTCC`
     - 0
     - The column number for inter-fluid heat transfer coefficient in the external file
     - NONE

   * - :envvar:`ICLHV1`
     - 0
     - Flag for the definition of latent heat of vaporization for the phase change model

       | =0, constant
       | =1, tabular function of temperature
       | =2, fit to function from input of critical temperature following:

       .. math:: \Delta H_{vap} = a_0 T'^{1/3} + a_1 T'^{2/3}

       where :math:`T'` is the reduced temperature :math:`1 - \frac{T}{T_{crit}}`, :math:`T_{crit}` is the critical temperature, and :math:`a_0` and :math:`a_1` are coefficients derived from data fitting (\ :envvar:`THV1`, :envvar:`CLHV1`) and (\ :envvar:`THV2`, :envvar:`CLHV2`) to the curve above.

       .. note:: Used **only** with phase change: :envvar:`IPHCHG` = 1, 2 or 5.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :envvar:`CLHV1`, :envvar:`THV1`, :envvar:`CLHV2`, :envvar:`THV2` and :envvar:`TCRIT` in :ref:`PhaseChangeProperties`
     - NONE

   * - :envvar:`FCLHV1`
     - 
     - The external filename for tabular latent heat of vaporization for the phase change model as a function of temperature (used only if :envvar:`ICLHV1` = 1 and :envvar:`ICLHV1C` :math:`\geq` 2)
     - NONE

   * - :envvar:`ICLHV1C`
     - 0
     - The column number for latent heat of vaporization for the phase change model in the external file
     - NONE

   * - :envvar:`IPSAT`
     - 0
     - Flag for the definition of coexistence curve (saturation pressure -- temperature curve) for the phase change model

       =0, use the Clapeyron equation to define coexistence curve. :envvar:`PV1`, :envvar:`TV1` and :envvar:`TVEXP` needed

       =1, tabular function of temperature

       =2, use acentric factor (\ :envvar:`ACNTRC`) to define curve, along with critical point data (\ :envvar:`PCRIT`, :envvar:`TCRIT`):

       .. math:: \text{Log}_{10} \left( \frac{P_{sat}}{P_{crit}} \right) = - \frac{7}{3} \left( 1 + \omega \right) \left( \frac{T_{crit}}{T} - 1 \right)

       where :math:`\omega` is the acentric factor :envvar:`ACNTRC`, :math:`P_{crit}` is the critical pressure :envvar:`PCRIT`, and :math:`T_{crit}` is the critical temperature :envvar:`TCRIT`.

       .. note:: Used **only** with phase change: :envvar:`IPHCHG` = 1, 2 or 5.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`

          * :envvar:`PV1`, :envvar:`TV1`, :envvar:`TVEXP`, :envvar:`ACNTRC`, :envvar:`PCRIT` and :envvar:`TCRIT`, in :ref:`PhaseChangeProperties`
     - NONE

   * - :envvar:`FPSAT`
     - 
     - The external filename for tabular coexistence curve (saturation pressure -- temperature curve) for the phase change model as a function of temperature (used only if :envvar:`IPSAT` = 1 and :envvar:`IPSATC` :math:`\geq` 2)
     - NONE

   * - :envvar:`IPSATC`
     - 0
     - The column number for coexistence curve (saturation pressure -- temperature curve) for the phase change model in the external file
     - NONE

.. index::
   pair: scalar transport namelist; SCALAR

.. _ScalarTransportNamelist:

=========================================================
Scalar Transport Namelist - SCALAR
=========================================================

.. index:: general and scalar advection parameters, scalars

.. _GeneralandScalarAdvectionParameters:

General and Scalar Advection Parameters
=================================================================

| *ns* :math:`\leq` *99, scalar species index*

.. note:: Scalar concentrations are defined in terms of mass/open cell volume. **Model scalars** are those that are used in standard models, e.g., Sediment Scour, Defect Tracking, Air Entrainment or Fluid Residence Times. These scalars are defined automatically when their respective models are activated. **User-defined scalars** are not used in any standard model and are defined by the user.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARGeneralandScalarAdvectionParameters:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CMSC(ns)`
     - 0.0
     - Molecular diffusion coefficient of scalar *ns*
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`ISCLR(ns)`
     - ...
     - Scalar advection options

       | =0, no advectable, stationary scalar
       | =1, second-order advection, scalar in both fluids
       | =3, second-order advection, scalar in fluid #1
       | =5, second-order advection, scalar in fluid #2

       .. note:: Defaults to 3 for passive scalars. For active scalars (scalars used in standard models like Defect Tracking) the default value is selected as appropriate for the model.
     - NONE

   * - :envvar:`NSC`
     - 0
     - Number of user-defined scalar species
     - NONE

   * - :envvar:`RMSC`
     - ...
     - Turbulent diffusion coefficient multiplier

       .. note:: For two-fluid cases (:envvar:`NMAT` = 2) :envvar:`RMSC` is set equal to the fluid fraction diffusion coefficient multiplier, :envvar:`RMF`. For one-fluid cases, the default is 0.0.

       .. seealso:: \  :envvar:`RMF` in :ref:`TurbulenceEquationCoefficientsandDiffusionParameters`.
     - NON-DIM

   * - :envvar:`RMSCS(ns)`
     - :envvar:`RMSC`
     - Turbulent diffusion coefficient multiplier for scalar *ns*

     - NON-DIM

   * - :envvar:`SCLTIT(ns)`
     - ...
     - Title for scalar variable :envvar:`ns`. For scalar variables used in standard models, the default title corresponds to the physical meaning of the variable in the model. For all other scalars, the title card is 'scalar ns concentration'. The maximum length of the title is 35 characters.
     - NONE

.. index:: scalars

.. index::
   single: fluid properties; scalars

.. _FluidPropertiesAssociatedwithScalars:

Fluid Properties Associated with Scalars
=================================================================

| *ns* :math:`\leq` *99, scalar species index*

.. note:: Scalar concentrations are defined in terms of mass/open volume.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARFluidPropertiesAssociatedwithScalars:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IRHOSC(ns)`
     - 0
     - Flag to include mass of scalar in fluid density. A value of 1 means the total fluid density includes the mass of the scalar:

       .. math:: \rho = \rho_f + c_{ns}

       Where :math:`\rho` is the local total density, :math:`\rho_f` is the density of the fluid (from :envvar:`RHOF` and :envvar:`RHOF2`), and :math:`c_{ns}` is the locally computed concentration of scalar *ns*

       .. seealso:: \  :envvar:`RHOF` :envvar:`RHOF2` and :ref:`DensityProperties`.
     - NONE

   * - :envvar:`MUSC(ns)`
     - -1.0
     - A positive value represents the viscosity of the scalar. The mixture viscosity becomes a weighted average of fluid and scalar mass fractions. 

       .. note:: Relevant only when :envvar:`IFVISC` = 1 (see :ref:`PhysicalModelOptions`).
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`EMODSC(ns)`
     - -1.0
     - A positive value represents shear elastic modulus of the scalar. The mixture elastic modulus is a weighted average of fluid and scalar mass fractions. 

       .. note:: Used only with visco-elastic-plastic model, :envvar:`IELAST` :math:`>` 0 (see :ref:`PhysicalModelOptions`).
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`YIELDSC(ns)`
     - -1.0
     - A positive value represents yields stress limit of the scalar. A negative value does not make any impact. The mixture value is a weighted average of fluid and scalar mass fractions.

       .. note:: Used only with visco-elastic-plastic model, :envvar:`IELAST` :math:`>` 0 (see :ref:`PhysicalModelOptions`).
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`RELAXSC(ns)`
     - -1.0
     - A positive value represents relaxation time for Oldroyd-B viscoelasticity model. Any value less than or equal to 0.0 means that the relaxation time is infinite, that is, the material exhibits no relaxation.

       .. note:: Used only with visco-elastic-plastic model, :envvar:`IELAST` :math:`\geq` 2 (see :ref:`PhysicalModelOptions`).
     - [t]

   * - :envvar:`MOBLTYSC(ns)`
     - 0.0
     - Represents the mobility factor of the scalar. Positive values only. Is required to define a Giesekus fluid.

       .. note:: Used only with visco-elastic-plastic model, :envvar:`IELAST` :math:`\geq` 3 (see :ref:`PhysicalModelOptions`).
     - NON-DIM

.. index:: scalar elctrostatics, electro-osmosis, electromechanics

.. _ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters:

Scalar Electrostatics, Electro-osmosis and Electromechanics Model Parameters
===============================================================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  

   * :doc:`model-reference` -->  :ref:`electricFieldsMR` and :ref:`electroOsmosisMR`

   * Theory manual section: :ref:`ElectroOsmosisTheoryTh`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`EPSELE`
     - 1.0E-06
     - Convergence criterion for electric (external) potential 
     - NON-DIM

   * - :envvar:`EPSPSI`
     - 1.0E-06
     - Convergence criterion for Zeta potential
     - NON-DIM

   * - :envvar:`MAXPHIT`
     - 1000
     - Maximum iterations for electric (external) potential solver
     - NONE

   * - :envvar:`MAXPSIT`
     - 1000
     - Maximum iterations for zeta-potential solver
     - NONE     

   * - :envvar:`MAXECHRG`
     - 20
     - Maximum iterations for coupled electric field-electric charge solver
     - NONE     

   * - :envvar:`IEPOT`
     - 0
     - Electric potential model flag

       | =0, no electric field
       | =1, activate electric potential model
     - NONE

   * - :envvar:`IEOF2`
     - 0
     - Flag for Zeta potential (Electro-Osmosis) model

       | =0, no Zeta potential
       | =1, activate Zeta potential model

       .. note:: Requires electric potential model (\ :envvar:`IEPOT` = 1).
     - NONE

   * - :envvar:`TEMPSOL`
     - -1.0\ :math:`\times`\ 10\ :sup:`19`
     - Average fluid temperature. Must be positive in absolute temperature units.

       .. note:: Relevant only with Electro-Osmosis (\ :envvar:`IEOF2` = 1).
     - [T]

   * - :envvar:`CONCEN`
     - 0.0
     - Average ion concentration in bulk flow.

       .. note:: Relevant only with Electro-Osmosis (\ :envvar:`IEOF2` = 1).
     - [mol L\ :sup:`-3`]

   * - :envvar:`IDEP`
     - ...
     - Dielectrophoresis model flag

       | = 0, model is turned off
       | = 1, activate the model

       .. note:: Defaults to 1 if :envvar:`IEOF2` = 0, and to 0 otherwise.
     - NONE

   * - :envvar:`IECHRG`
     - 0
     - Electric charge model

       | =0, no free electric charge in fluid or solid components
       | =1, activate electric charge model

       .. note:: Requires electric potential model (\ :envvar:`IEPOT` = 1).
     - NONE

   * - :envvar:`IETHERMO`
     - 0
     - Flag for electromechanical and electrothermal effects

       | = 0, both models are off
       | = 1, activate electrothermal model (Joule heating)
       | = 2, activate both electrothermal and electromechanical models

       .. note:: Requires electric potential model (\ :envvar:`IEPOT` = 1).

       .. seealso:: \  :doc:`model-reference` -->  :ref:`electroThermalMR`.
     - NONE

   * - :envvar:`CMCHRG`
     - 0.0
     - Molecular diffusion coefficient of electric charge density

       .. note:: Relevant only with Electric charge model (\ :envvar:`IECHRG` = 1).
     - [Q L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`RMCHRG`
     - 0.0
     - Turbulent diffusion coefficient multiplier for electric charge density

       .. note:: Relevant only with Electric charge model (\ :envvar:`IECHRG` = 1).
     - NON-DIM

.. index:: defect tracking, lost foam, free surface

.. _DefectTrackingParametersforLostFoamandFreeSurfaceModels:

Defect Tracking Parameters for Lost Foam and Free-Surface Models
===============================================================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  Theory manual section: :ref:`DefectTrackingTh`


.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARDefectTrackingParametersforLostFoamandFreeSurfaceModels:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`DFCTW`
     - 0.5
     - Rate at which transportable foam residue (scalar specified by :envvar:`IDFCT_LF`) is converted to wicked residue at mold walls (scalar specified by :envvar:`IDFCTW`).
     - NON-DIM

   * - :envvar:`DFTFOB`
     - 1.0
     - Coefficient of proportionality for foam residue (amount of foam residue per unit volume of decomposed solid foam).
     - NON-DIM

   * - :envvar:`DFTSRF`
     - 1.0
     - Coefficient of proportionality for free-surface-generated defects (defects created per unit time per unit area).
     - [t\ :sup:`-1` L\ :sup:`-2`]

   * - :envvar:`IDFCT`
     - 0
     - Free surface defect tracking model flag

       | =0, no free surface defect tracking
       | =1, activate free surface defect tracking model
     - NONE

   * - :envvar:`IDFCT_LF`
     - ...
     - Foam residue tracking model flag

       | =0, no foam residue tracking
       | =1, activate foam residue tracking model

       .. note:: Defaults to 1 for lost foam models, :envvar:`IFLFOAM` = 1 or 2, and to 0 otherwise.
     - NONE

   * - :envvar:`IDFCWE`
     - 0
     - Eroded solid tracking model flag

       | =0, no eroded solid tracking
       | =1, activate eroded solid tracking model

       .. seealso:: :envvar:`DFCWE` in :ref:`ComponentPropertiesContactAngleandRoughness`.
     - NONE     

   * - :envvar:`CMDFT`
     - 0.0
     - Molecular diffusion coefficient of free surface defects
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`CMDFT_LF`
     - 0.0
     - Molecular diffusion coefficient of foam residue defects
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`RMDFT`
     - 0.0
     - Turbulent diffusion coefficient multiplier for free surface defects
     - NON-DIM

   * - :envvar:`RMDFT_LF`
     - 0.0
     - Turbulent diffusion coefficient multiplier for foam residue defects
     - NON-DIM

   * - :envvar:`IDFCTW`
     - 0
     - Flag to activate recording of foam residue that wicks into mold walls, and therefore, are not transported by metal flow.

       | =0, no wicking of foam residue
       | =1, activate wicking of foam residue
     - NONE

   * - :envvar:`IFMDEN`
     - 0
     - Flag to activate variable density in foam patterns

       .. note:: Foam density is multiplied by (D + 1.0), where D is the foam density function.
     - NONE

.. index:: air entrainment model

.. _AirEntrainmentModelParameters:

Air Entrainment Model Parameters
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`airEntrainmentMR`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARAirEntrainmentModelParameters:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IDFAIR`
     - 0
     - Flag to activate air entrainment model. A non-zero value activates the model.

       .. note:: Requires the one-fluid, sharp-interface model (:envvar:`NMAT` = 1, :envvar:`ITB` = 1). Surface tension coefficient :envvar:`SIGMA` should also be defined in PROPS.

       .. seealso:: \  

          * :envvar:`NMAT` and :envvar:`ITB` in :ref:`FlowModeOptions`.

          * :envvar:`SIGMA` in :ref:`SurfaceTensionProperties`.
     - NONE

   * - :envvar:`CMAIR`
     - 0.0
     - Molecular diffusion coefficient of the entrained air
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`RMAIR`
     - 0.0
     - Turbulent diffusion coefficient multiplier for the entrained air
     - NON-DIM

   * - :envvar:`DFAIR`
     - 0.5
     - Air entrainment rate coefficient
     - NON-DIM

   * - :envvar:`TV2M`
     - ...
     - Reference temperature for ideal gas equation of state.
       Used when :envvar:`IFENRG` = 0, see :ref:`namelistXPUTAdvectionOptions`.

       | Defaults to room temperature in simulation units, which is 300.0 in degrees Kelvin.

     - [T]

.. index:: dissolution model

.. _DissolutionModelParameters:

Dissolution Model Parameters
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  Theory manual section :ref:`DissolvingSolidSoluteModel`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARDissolutionModelParameters:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IDISSOLVE`
     - 0
     - Flag to activate dissolution model. A non-zero value activates the model.
     - NONE

   * - :envvar:`DISSALPHA`
     - 1.0
     - Mixture density coefficient:

       1.0 - :envvar:`RHOF` / :envvar:`DISSDEN` :math:`<` :envvar:`DISSALPHA` :math:`<` 1.0

       .. note:: The maximum fluid volume displacement by dissolving solute is at the lower end of the range. There is no volume change in the fluid when :envvar:`DISSALPHA` = 1.0.

       .. seealso:: \  :envvar:`RHOF` in :ref:`DensityProperties`.
     - NON-DIM

   * - :envvar:`DISSDEN`
     - :envvar:`RHOF`
     - Density of the solid solute

       .. seealso:: \  :envvar:`RHOF` in :ref:`DensityProperties`.
     - [M/L\ :sup:`3`]

   * - :envvar:`DISSMTC`
     - 0.0
     - Mass transfer coefficient for solid solute components

       .. seealso:: \  :envvar:`IFOBDISS(m)` in :ref:`ComponentPropertiesDissolvingComponents`.
     - [L/t]

   * - :envvar:`DISSSAT`
     - 0.0
     - Solute concentration at saturation

       .. note:: \ :envvar:`DISSSAT` cannot be larger than :envvar:`DISSDEN`.
     - [M/L\ :sup:`3`]

   * - :envvar:`CMDISS`
     - 0.0
     - Molecular diffusion coefficient of the dissolved solute
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`RMDISS`
     - 0.0
     - Turbulent diffusion coefficient multiplier for the dissolved solute
     - NON-DIM

.. index:: dynamic droplet model

.. _DynamicDropletModelParameters:

Dynamic Droplet Model Parameters
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`driftFluxMR`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARDynamicDropletModelParameters:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IDSIZE`
     - 0
     - Flag to activate the dynamic droplet size calculation in the drift-flux model. A non-zero value activates the model.

       .. note:: Requires the droplets to be made of liquid or gas, :envvar:`IFDFT_TYPE` = 0 or 2. The surface tension coefficient :envvar:`SIGMA_DF` must also be defined in PROPS.

       .. seealso:: \  

          * :envvar:`IFDFT_TYPE` :ref:`FlowModeOptions`.

          * :envvar:`SIGMA` in :ref:`SurfaceTensionProperties`.
     - NONE

   * - :envvar:`WEBCRIT`
     - 1.6
     - Critical Weber number above which particles break up
     - NON-DIM
     
   * - :envvar:`CAPCRIT`
     - 1.0
     - Critical capillary number above which particles break up
     - NON-DIM     

.. index:: combustible object model

.. _CombustibleObjectModelParameters:

Combustible Object Model Parameters
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \ Theory manual section :ref:`CombustibleObjectModel` and Model Reference section :ref:`combustibleObjectsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARCombustibleObjectModelParameters:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IBURN`
     - 0
     - Flag to activate combustible object model. A non-zero value activates the model.

       .. note:: Requires the compressible fluid model, :envvar:`ICMPRS` = 1.

       .. seealso:: \  :envvar:`IFOBBURN(m)` in :ref:`ComponentPropertiesCombustibleComponents`.                 
     - NONE

.. index:: microporosity model

.. index::
   single: models; microporosity

.. _MicroporosityModelParameters:

Microporosity and Shrinkage Model Parameters
=============================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`microporosityFormationMR`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARMicroporositModelParameters:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`PRESS`
     - 0.0
     - Uniform intensification pressure. Used only if greater than zero.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

.. index:: filling time

.. _FillingTime:

Filling Time
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  :doc:`outputs` -->  :ref:`fillingTimesOut`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARFillingTime:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFILL1`
     - 0
     - Flag to activate the recording of the first and last time a cell fills with fluid #1

       | =0, no filling time is computed
       | =1, compute filling times

       .. note:: Defaults to 1 for the sand core gas model, :envvar:`IFCOR` = 1 (\ :ref:`CoreGasGenerationIVS`)

     - NONE

.. index:: non-condensable gas model

.. index::
   single: models; non-condensable gas

.. _NoncondensableGasModelParameters:

Non-condensable Gas Model Parameters
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. note:: All parameters in this section are relevant only if :envvar:`INCG` = 1 (\ :ref:`PhysicalModelOptions`)

.. seealso:: \  :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARNoncondensableGasModelParameters:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CMNCG`
     - 0.0
     - Molecular diffusion coefficient of the non-condensable gas component in the gas phase. Only used when :envvar:`INCG` = 1.
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`RMNCG`
     - 0.0
     - Turbulent diffusion coefficient multiplier for the non-condensable gas component on the gas phase. Only used when :envvar:`INCG` = 1.
     - NON-DIM

.. index:: cavitation potential model

.. index::
   single: models; cavitation potential

.. _CavitationPotentialModel:

Cavitation Potential Model
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`cavitationBubbleFormationMR`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARCavitationPotentialModel:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IPCAV`
     - 0
     - Cavitation potential model flag

       | =0, cavitation potential model is not activated
       | =1, activate cavitation potential model
     - NON-DIM

.. index:: binary alloy segregation parameters

.. _BinaryAlloySegregationParameters:

Binary Alloy Segregation Parameters
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`macroSegregationMR`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARBinaryAlloySegregationParameters:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ISEG`
     - 0
     - Macro-segregation model flag

       | =0, macro-segregation model is not activated
       | =1, activate macro-segregation model

       .. note:: Used only for one-fluid problems, :envvar:`NMAT` = 1 (\ :ref:`FlowModeOptions`)
     - NON-DIM

   * - :envvar:`CMSEG`
     - 0.0
     - Molecular diffusion coefficient of the solute mass concentration
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`RMSEG`
     - 0.0
     - Turbulent diffusion coefficient multiplier for the solute mass concentration
     - NON-DIM

.. index:: fluid residence time

.. _FluidResidenceTime:

Fluid Residence Time
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  :doc:`outputs` -->  :ref:`residence_time_Out`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARFluidResidenceTime:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IRESDT`
     - 0
     - Flag used to compute fluid residence time (the amount of time fluid is present in the flow domain)

       | =0, fluid residence time is not computed
       | =1, compute fluid residence time
     - NONE

.. index:: spray, spray cooling

.. index:: spray

.. _Spray:

Spray Cooling (for thermal die cycling) 
========================================

.. note:: Only available through |f3dc|.
.. note:: Requires :envvar:`IFSPRAY` = 1.

| *ns* :math:`\leq` *99, scalar species index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IDSPRAY`
     - 1
     - Spray area visualization

       | =0, no visualization
       | =1, activate spray area visualization
     - NONE

.. _Tracers:

Tracers
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARTracers:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ITRACER`
     - 0
     - Flag used to activate tracers at flux surfaces

       | =0, tracers are disabled
       | =1, flow tracers may be introduced at flux surfaces.

       .. seealso:: \  :envvar:`IFTRC(m)` in :ref:`BafflePropertiesFluxSurfaces`.
     - NONE

.. index:: wall contact time

.. _WallContactTime:

Wall Contact Time with Fluid
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARcontacttime:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ICONTACT`
     - 0
     - Flag used to activate fluid/wall contact time output

       | =0, output is disabled
       | =1, fluid contact time with all geometry components, and, optionally, with individual components is calculated

       .. seealso:: \  :envvar:`IFCONTCOMP(m)` in :ref:`ComponentPropertiesContactTime`.
     - NONE     

.. index:: gas pressure and venting efficiency

.. _GasPressureVentingEfficiency:

Gas pressure and Venting Efficiency
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALAR_GasPressureVentingEfficiency:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_GAS_PRESS`
     - 0
     - Flag used to compute and output the last local gas pressure in a cell before the arrival of fluid. Used with one-fluid, free-surface flows, :envvar:`NMAT` = 1, :envvar:`ITB` = 1.

       | =0, do not compute local gas pressure
       | =1, compute and output local gas pressure
     - NONE

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_VENT_EFFCY`
     - 0
     - Flag used to compute and output the venting efficiency during filling. Used with one-fluid, free-surface flows, :envvar:`NMAT` = 1, :envvar:`ITB` = 1.

       | =0, do not compute venting efficiency 
       | =1, compute and output venting efficiency
     - NONE     

.. index:: distance traveled by fluid

.. _DistanceTraveledbyFluid:

Distance Traveled by Fluid
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  :doc:`outputs` -->  :ref:`distanceTraveledByFluidOut`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARDistanceTraveledbyFluid:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IPATH`
     - 0
     - Flag used to compute distance traveled by fluid from its initial location or from the inlet (mesh boundary or mass source)

       | =0, do not compute distance traveled by fluid
       | =1, compute distance traveled by fluid
     - NONE

.. index:: vaporization residue parameters

.. _VaporizationResidueParameters:

Vaporization Residue Parameters
======================================

| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`vaporizationResidueMR`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARVaporizationResidueParameters:

.. list-table:: Namelist SCALAR; ns :math:`<` 99, scalar species index
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IRESID`
     - 0
     - Flag to activate the solid residue model. A non-zero value activates the model.
     - NONE

   * - :envvar:`RMXSC(ns)`
     - ...
     - Maximum concentration of scalar #ns in fluid #1, after which a solid residue starts forming.
  
       Default is a large number.

     - [M/L\ :sup:`3`]

.. index:: scalar sedimentation, scour

.. _ScalarSedimentationScourParameters:

Sedimentation & Scour Parameters
==========================================

| *ns* :math:`\leq` *99, scalar species index*
| *k* :math:`\leq` *10, sediment species index*

.. note:: All parameters in this section require :envvar:`ISCOUR` = 1 (\ :ref:`PhysicalModelOptions`). Scalar concentrations are defined in terms of mass/open volume.

.. seealso:: \  

   * :doc:`model-reference` -->  :ref:`sedimentScourMR`

   * Theory manual section: :ref:`SedimentScourModelTh`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARScalarSedimentationScourParameters:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CMSCR`
     - 0.0
     - Molecular diffusion coefficient of the suspended sediment
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`CROUGH`
     - 2.5
     - Roughness coefficient for surface of packed sediment bed (roughness :math:`k_s=c_{\rm{rough}} d_{50,\rm{packed}}`)
     - NON-DIM

   * - :envvar:`IBEDLOAD`
     - 2
     - Flag for bed-load transport rate equation
     
       | =1, Meyer, Peter and Müller equation
       | =2, Nielsen equation
       | =3, Van Rijn equation
     - NONE

   * - :envvar:`ISSCRT`
     - 0
     - Flag for critical Shields number calculation

       | =0, use prescribed or default value
       | =1, calculated critical Shields number using Soulsby-Whitehouse equation
     - NONE  

   * - :envvar:`ISSHID`
     - 0
     - Flag for local adjustment of critical Shields number for armoring in multisediment species simulations

       | =0, deactivate the adjustment
       | =1, activate the adjustment

       .. note:: Not currently used in the model
     - NONE

   * - :envvar:`ISSSLP`
     - 0
     - Flag for local adjustment of critical Shields number for slope effect

       | =0, deactivate the adjustment
       | =1, activate the adjustment

     - NONE

   * - :envvar:`NSSPC`
     - 0
     - Number of sediment species (\ :envvar:`NSSPC` :math:`\leq` 10)
     - NONE

   * - :envvar:`RHFSS(k)`
     - -1.0
     - Density of sediment species :envvar:`k`. 
     - [M/L\ :sup:`3`]

   * - :envvar:`RMSCR`
     - 0.0
     - Turbulent diffusion coefficient multiplier for the suspended sediment
     - NON-DIM

   * - :envvar:`SCRFCR`
     - 0.64
     - Critical solid fraction. Represents the total solid fraction beyond which the sediment is completely packed.
     - NON-DIM

   * - :envvar:`SSANG(k)`
     - 32
     - Angle of repose of sediment species :envvar:`k`. 
     - DEGREES

   * - :envvar:`SSBDLF(k)`
     - ...
     - Sediment bed-load parameter for sediment species :envvar:`k` in Meyer, Peter and Müller equation.
     - NON-DIM

   * - :envvar:`SSBDLF2(k)`
     - ...
     - Sediment bed-load parameter for sediment species :envvar:`k` in Nielsen equation.
     - NON-DIM

   * - :envvar:`SSBDLF3(k)`
     - ...
     - Sediment bed-load parameter for sediment species :envvar:`k` in Van Rijn equation.
     - NON-DIM   

   * - :envvar:`SSCRT(k)`
     - 0.05
     - Critical Shields number of sediment species :envvar:`k`.
     - NON-DIM

   * - :envvar:`SSDIA(k)`
     - -1.0
     - Particle diameter of sediment species :envvar:`k`. If species represents a range of particle sizes, it is the mean diameter of species :envvar:`k`.
     - [L]

   * - :envvar:`SSENTRF(k)`
     - 0.018
     - Sediment entrainment parameter for sediment species :envvar:`k`.
     - NON-DIM

   * - :envvar:`SSNAME(k)`
     - ...
     - Descriptive name for sediment species :envvar:`k`. (Optional)
     - NONE

   * - :envvar:`SSRZMLT`
     - 1.0
     - Richardson-Zaki coefficient multiplier.
     - NON-DIM

.. index:: sludge settling

.. _SludgeSettlingModelParameters:

Sludge Settling Model Parameters
==========================================

.. seealso:: \  

   * Theory manual section: :ref:`SludgeModelTh`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSCALARSludgeSettlingModelParameters:

.. list-table:: Namelist SCALAR
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ISLDG`
     - 0
     - Flag for activation of the sludge settling model

       | =0, not activated
       | =1, activated
     
     - NONE

   * - :envvar:`IVELSLDG`
     - 0
     - Flag for settling velocity input method, only used when :envvar:`ISLDG` = 1
     
       | =0, Vesilind equation
       | =1, tabulated data 
     
     - NONE

   * - :envvar:`IVELSLDGC`
     - 0
     - Column number for settling velocity in tabulated data, only used when :envvar:`IVELSLDG` = 1
     
       | <2, tabulated data is at the end of the prepin file
       | =2, tabulated data is in an external file 
     
     - NONE

   * - :envvar:`FVELSLDG`
     - ...
     - File name of sludge settling velocity, only used when :envvar:`IVELSLDGC` = 2
     - NONE

   * - :envvar:`CSLDGMX`
     - ...
     - Maximum settled sludge mass concentration
     - [M L\ :sup:`-3`]

   * - :envvar:`MUSC_SLDG`
     - 0.0
     - Dynamic viscosity of sludge
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`CMSC_SLDG`
     - 0.0
     - Molecular diffusion coefficient of sludge
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`RMSCS_SLDG`
     - 0.0
     - Turbulent diffusion coefficient multiplier for sludge
     - [NONE]

   * - :envvar:`RHOSLDG`
     - ...
     - Mass density of sludge solid
     - [M L\ :sup:`-3`]

   * - :envvar:`VELSLDG0`
     - ...
     - Vesilind maximum settling velocity
     - [M t\ :sup:`-1`]

   * - :envvar:`CVELSLDG`
     - ...
     - Vesilind parameter. 
     - [M\ :sup:`-1` L\ :sup:`3`]

.. index::
   pair: reaction kinetics namelist; CHM

.. _ChemistryNamelistCHM:

==================================
Reaction Kinetics Namelist - CHM
==================================

.. index:: reaction kinetics parameters

.. _ChemistryParameters:

Reaction Kinetics Parameters
==========================================

| *n* :math:`\leq` *50, rate index number*
| *neq* :math:`\leq` *99, equation index number*
| *ns* :math:`\leq` *99, scalar species index*
| *ntrm* :math:`<` *10, term index number*

.. note:: This namelist is only read if :envvar:`ICHM` = 1 in :ref:`PhysicalModelOptions`.

.. seealso:: \  :doc:`model-reference` -->  :ref:`chemicallyReactingFlowsMR`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistCHMChemistryParameters:

.. list-table:: Namelist CHM
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ARATE(n)`
     - 0.0
     - Rate coefficients for kinetic equations
     - [M\ :sup:`1-DD` t\ :sup:`-1` L\ :sup:`-3(1-DD)`]

   * - :envvar:`DD(neq,ntrm,ns)`
     - 0.0
     - Exponent for term number :envvar:`ntrm` of equation number :envvar:`neq` for scalar species number :envvar:`ns`.
     - NON-DIM

   * - :envvar:`ICOEFF(neq,ntrm)`
     - 0
     - The index :envvar:`n` for the rate coefficient :envvar:`ARATE(n)` to be used for term :envvar:`ntrm` in equation :envvar:`neq`. Holds the sign appearing in the equation, e.g., if :envvar:`ICOEFF(neq,ntrm)` is negative, its absolute value corresponds to the index :envvar:`n` and the term :envvar:`ntrm` is entered with a minus sign.
     - NONE

.. index::
   pair: rigid body namelist; RBDATA

.. _RigidBodyNamelistRBDATA:

================================
Rigid Body Namelist - RBDATA
================================

.. index::
   single: rigid body dynamics; numerical options

.. _RigidBodyDynamicsNumericalOptions:

Rigid Body Dynamics Numerical Options
========================================

.. note:: This namelist is only read if :envvar:`IACCF` = 2 in :ref:`GravityAndNIRFOptions`.

.. seealso:: \  :doc:`model-reference` -->  :ref:`rigidBodyDynamicsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistRBDATARigidBodyDynamicsNumericalOptions:

.. list-table:: Namelist RBDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`EPSIRB`
     - ...
     - Convergence criterion for the coupled rigid body dynamics iterative algorithm.

       .. note:: 
          * Only used if :envvar:`IRBACC` = 3.
          * Default is 10 times the maximum pressure iteration convergence.

       .. seealso :envvar:`EPSI` and :envvar:`EPSADJ` in :ref:`PressureIterationOptions`.
     - [1/t]

   * - :envvar:`IRBACC`
     - 0
     - Option for the evaluation of rigid body linear and angular acceleration

       =0, ignore fluid in evaluating initial values of linear and angular accelerations

       =1, assume fluid is frozen in place (does not move with respect to the mesh) for purpose of calculating initial values of linear and angular acceleration

       =2, initialize as for :envvar:`IRBACC` = 1, also, use the "frozen fluid" model during the transient

       =3, like :envvar:`IRBACC` = 2, but use the iterative implicit "frozen fluid" model during the transient

       .. note:: 
          * Input data for :envvar:`ACXP`, :envvar:`ACYP` and :envvar:`ACZP` override initial evaluation of linear acceleration. 
          * Input data for :envvar:`RBOMDX`, :envvar:`RBOMDY` and :envvar:`RBOMDZ` override initial evaluation of angular acceleration.

       .. seealso :envvar:`ACXP`, :envvar:`ACYP`, :envvar:`ACZP`, iv:`RBOMDX`, :envvar:`RBOMDY`, :envvar:`RBOMDZ` in :ref:`RigidBodyDynamicsInitialConditions`.
     - NONE

   * - :envvar:`NCRBMX`
     - 100
     - Maximum permitted number of iterations for the coupled rigid body dynamics solution. 

       .. note:: Only used if :envvar:`IRBACC` = 3.
     - NONE

   * - :envvar:`OMDIMP`
     - 0.501
     - Averaging factor for mixing of explicit and implicit evaluation of rigid-body gyroscopic coupling terms in angular momentum equations.
     - NON-DIM

.. index::
   single: rigid body dynamics; initial conditions

.. _RigidBodyDynamicsInitialConditions:

Rigid Body Dynamics Initial Conditions
===========================================

.. note:: 
   * This namelist is only read if :envvar:`IACCF` = 2 in :ref:`GravityAndNIRFOptions`.
   * The initial angular velocity should be specified Either by (:envvar:`OMXI`, :envvar:`OMYI`, :envvar:`OMZI`) or by (:envvar:`OMXPI`, :envvar:`OMYPI`, :envvar:`OMZPI`). 
   * The nine transformation matrix elements imply the initial angular orientation of body-fixed and inertial coordinate systems.

.. seealso:: \  :doc:`model-reference` -->  :ref:`rigidBodyDynamicsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistRBDATARigidBodyDynamicsInitialConditions:

.. list-table:: Namelist RBDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ACXP`
     - ...
     - Initial x' component of linear acceleration of the dry rigid body in the inertial (x',y',z') coordinate system. 

       .. note:: Default value is based on input parameter :envvar:`IRBACC`.

       .. seealso:: \  :envvar:`IRBACC` in :ref:`RigidBodyDynamicsNumericalOptions`.
     - [L/t\ :sup:`2`]

   * - :envvar:`ACYP`
     - ...
     - Initial y' component of linear acceleration of the dry rigid body in the inertial (x',y',z') coordinate system. 

       .. note:: Default value is based on input parameter :envvar:`IRBACC`.

       .. seealso:: \  :envvar:`IRBACC` in :ref:`RigidBodyDynamicsNumericalOptions`.
     - [L/t\ :sup:`2`]

   * - :envvar:`ACZP`
     - ...
     - Initial z' component of linear acceleration of the dry rigid body in the inertial (x',y',z') coordinate system. 

       .. note:: Default value is based on input parameter :envvar:`IRBACC`.

       .. seealso:: \  :envvar:`IRBACC` in :ref:`RigidBodyDynamicsNumericalOptions`.
     - [L/t\ :sup:`2`]

   * - :envvar:`OMXI`
     - 0.0
     - Initial x angular velocity component of the dry rigid body in the body-fixed (x,y,z) coordinate system.
     - [radians/t]

   * - :envvar:`OMYI`
     - 0.0
     - Initial y angular velocity component of the dry rigid body in the body-fixed (x,y,z) coordinate system.
     - [radians/t]

   * - :envvar:`OMZI`
     - 0.0
     - Initial z angular velocity component of the dry rigid body in the body-fixed (x,y,z) coordinate system.
     - [radians/t]

   * - :envvar:`OMXPI`
     - 0.0
     - Initial x' angular velocity component of the dry rigid body in the inertial (x',y',z') coordinate system.
     - [radians/t]

   * - :envvar:`OMYPI`
     - 0.0
     - Initial y' angular velocity component of the dry rigid body in the inertial (x',y',z') coordinate system.
     - [radians/t]

   * - :envvar:`OMZPI`
     - 0.0
     - Initial z' angular velocity component of the dry rigid body in the inertial (x',y',z') coordinate system.
     - [radians/t]

   * - :envvar:`RBAXXP`
     - 1.0
     - Initial direction cosine (X•X') relating the inertial and body-fixed coordinate systems. This is element A11 of the transformation matrix.
     - NON-DIM

   * - :envvar:`RBAYYP`
     - 1.0
     - Initial direction cosine (Y•Y') relating the inertial and body-fixed coordinate systems. This is element A22 of the transformation matrix.
     - NON-DIM

   * - :envvar:`RBAZZP`
     - 1.0
     - Initial direction cosine (Z•Z') relating the inertial and body-fixed coordinate systems. This is element A33 of the transformation matrix.
     - NON-DIM

   * - :envvar:`RBAXYP`
     - 0.0
     - Initial direction cosine (X•Y') relating the inertial and body-fixed coordinate systems. This is element A12 of the transformation matrix.
     - NON-DIM

   * - :envvar:`RBAYXP`
     - 0.0
     - Initial direction cosine (Y•X') relating the inertial and body-fixed coordinate systems. This is element A21 of the transformation matrix.
     - NON-DIM

   * - :envvar:`RBAXZP`
     - 0.0
     - Initial direction cosine (X•Z') relating the inertial and body-fixed coordinate systems. This is element A13 of the transformation matrix.
     - NON-DIM

   * - :envvar:`RBAZXP`
     - 0.0
     - Initial direction cosine (Z•X') relating the inertial and body-fixed coordinate systems. This is element A31 of the transformation matrix.
     - NON-DIM

   * - :envvar:`RBAYZP`
     - 0.0
     - Initial direction cosine (Y•Z') relating the inertial and body-fixed coordinate systems. This is element A23 of the transformation matrix.
     - NON-DIM

   * - :envvar:`RBAZYP`
     - 0.0
     - Initial direction cosine (Z•Y') relating the inertial and body-fixed coordinate systems. This is element A32 of the transformation matrix.
     - NON-DIM

   * - :envvar:`RBOMDX`
     - ...
     - Initial x-component of angular acceleration of the dry rigid body in the body-fixed (x,y,z) coordinate system.

       .. note:: Default value is based on input parameter :envvar:`IRBACC`.

       .. seealso:: \  :envvar:`IRBACC` in :ref:`RigidBodyDynamicsNumericalOptions`.
     - [radians/t\ :sup:`2`]

   * - :envvar:`RBOMDY`
     - ...
     - Initial y component of angular acceleration of the dry rigid body in the body-fixed (x,y,z) coordinate system.

       .. note:: Default value is based on input parameter :envvar:`IRBACC`.

       .. seealso:: \  :envvar:`IRBACC` in :ref:`RigidBodyDynamicsNumericalOptions`.
     - [radians/t\ :sup:`2`]

   * - :envvar:`RBOMDZ`
     - ...
     - Initial z' component of angular acceleration of the dry rigid body in the body-fixed (x,y,z) coordinate system. 

       .. note:: Default value is based on input parameter :envvar:`IRBACC`.

       .. seealso:: \  :envvar:`IRBACC` in :ref:`RigidBodyDynamicsNumericalOptions`.
     - [radians/t\ :sup:`2`]

   * - :envvar:`RCXP`
     - 0.0
     - Initial x' coordinate of the dry rigid-body center of mass in the inertial (x',y',z') coordinate system.
     - [L]

   * - :envvar:`RCYP`
     - 0.0
     - Initial y' coordinate of the dry rigid-body center of mass in the inertial (x',y',z') coordinate system.
     - [L]

   * - :envvar:`RCZP`
     - 0.0
     - Initial z' coordinate of the dry rigid-body center of mass in the inertial (x',y',z') coordinate system.
     - [L]

   * - :envvar:`RRATE`
     - 0.0
     - Rotation rate of the gravitating body reference frame (radians/second). Optional input for evaluation of relative longitude.
     - [radians/t]

   * - :envvar:`UCXP`
     - 0.0
     - Initial x' velocity component of the dry rigid-body center of mass in the inertial (x',y',z') coordinate system.
     - [L/t]

   * - :envvar:`UCYP`
     - 0.0
     - Initial y' velocity component of the dry rigid-body center of mass in the inertial (x',y',z') coordinate system
     - [L/t]

   * - :envvar:`UCZP`
     - 0.0
     - Initial z' velocity component of the dry rigid-body center of mass in the inertial (x',y',z') coordinate system
     - [L/t]

   * - :envvar:`XPLONG`
     - 0.0
     - Initial longitude of the inertial x' axis in the gravitating body reference frame (radians). Optional input for the evaluation of relative longitude.
     - [radians]

.. index::
   single: rigid body dynamics; properties

.. _RigidBodyDynamicsProperties:


Rigid Body Dynamics Properties
==================================

.. note:: This namelist is only read if :envvar:`IACCF` = 2 in :ref:`GravityAndNIRFOptions`.

.. seealso:: \  :doc:`model-reference` -->  :ref:`rigidBodyDynamicsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistRBDATARigidBodyDynamicsProperties:

.. list-table:: Namelist RBDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`GBODY`
     - 0.0
     - Gravitational constant for the gravitating central body 

       (GRAVITATIONAL ACCELERATION = :envvar:`GBODY` / R'•R')

     - [L\ :sup:`3`/t\ :sup:`2`]

   * - :envvar:`RBJXX`
     - 1.0
     - Diagonal (x,x) component of dry rigid-body moment of inertia tensor

       Resolved in body-fixed coordinates.
     - [M L\ :sup:`2`]

   * - :envvar:`RBJYY`
     - 1.0
     - Diagonal (y,y) component of dry rigid-body moment of inertia tensor

       Resolved in body-fixed coordinates.
     - [M L\ :sup:`2`]

   * - :envvar:`RBJZZ`
     - 1.0
     - Diagonal (z,z) component of dry rigid-body moment of inertia tensor

       Resolved in body-fixed coordinates.
     - [M L\ :sup:`2`]

   * - :envvar:`RBJXY`
     - 0.0
     - Off-diagonal (x,y) component of dry rigid-body moment of inertia tensor

       Resolved in body-fixed coordinates.
     - [M L\ :sup:`2`]

   * - :envvar:`RBJXZ`
     - 0.0
     - Off-diagonal (x,z) component of dry rigid-body moment of inertia tensor

       Resolved in body-fixed coordinates.
     - [M L\ :sup:`2`]

   * - :envvar:`RBJYZ`
     - 0.0
     - Off-diagonal (y,z) component of dry rigid-body moment of inertia tensor 

       Resolved in body-fixed coordinates.
     - [M L\ :sup:`2`]

   * - :envvar:`RBMASS`
     - 1.0
     - Mass of the dry rigid body
     - [M]

.. index::
   pair: mesh boundary condition namelist; BCDATA

.. _MeshBoundaryConditionNamelistBCDATA:

===============================================
Mesh Boundary Condition Namelist - BCDATA
===============================================

.. index::
   single: boundary conditions; types

.. _BoundaryConditionTypesandTimeTable:

Boundary Condition Types and Time Table
===============================================

.. _BoundaryConditionTypes:

Boundary Condition Types 
--------------------------

| *n* :math:`\leq` *6, boundary index*

| Left boundary   n=1  Right n=2
| Front boundary  n=3  Back  n=4
| Bottom boundary n=5  Top   n=6

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistBCDATABoundaryConditionTypes:

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IBCT(n)`
     - ...
     - Boundary condition type at mesh block boundaries

       | =1, symmetry plane
       | =2, rigid wall
       | =3, continuative boundary
       | =4, periodic boundaries (must be applied at opposite sides of mesh)
       | =5, specified pressure boundary
       | =6, specified velocity boundary
       | =7, boundary values obtained from previous calculation using grid overlay (GO) procedure
       | =8, outflow boundary that minimizes wave reflections
       | =9, inter-block boundary
       | =10, surface wave boundary (for :envvar:`n` = 1, 2, 3 and 4 only)
       | =11, specified flow rate boundary

       .. note:: Defaults to 9 at nested and linked boundaries, and to 1 otherwise.

     - NONE

.. index::
   single: boundary conditions; time table

.. _BoundaryConditionTimeTable:

Boundary Condition Time Table
------------------------------

  .. image:: images/input-variable-summary/boundary-nomenclature.*
     :alt: Boundary Nomenclature
     :width: 4 in

*Boundary Nomenclature*

| *t* :math:`\leq` *500, time index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

   * - :envvar:`IF_PART`
     - 0
     - Macro-boundary flag for fluid flow rate and thermal power boundary conditions in multi-block meshes. A specified flow rate (or thermal power for wall-type mesh boundaries) is distributed over all mesh boundaries that have the same non-zero value of :envvar:`IF_PART`. All mesh boundaries that make up a macro-boundary must be on the same side of their respective mesh blocks, have the same coordinate and have identical boundary condition specifications.

       Not used when equal to 0.
     - NONE

.. index:: elastic stresses

.. index::
   pair: boundary; elastic stresses

.. _BoundaryElasticStresses:

Boundary Elastic Stresses
=============================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*
| *k* :math:`\leq` *6, elastic stress component*

| Left boundary   n=1,  Right   n=2,
| Front boundary  n=3,  Back    n=4,
| Bottom boundary n=5,  Top     n=6

| xx-component of elastic stress, k=1
| yy-component of elastic stress, k=2
| zz-component of elastic stress, k=3
| xy-component of elastic stress, k=4
| yz-component of elastic stress, k=5
| xz-component of elastic stress, k=6

.. seealso:: \  

   :doc:`model-reference` -->  :ref:`elasticAndPlasticMaterialsMR`.

   :doc:`model-reference` -->  :ref:`VEMaterialsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ELSTBCT(t,n,k)`
     - 0.0
     - Elastic stress component :envvar:`k` at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`.

       Relevant when material flows into domain with existing stress.

       .. note:: Used only with :envvar:`IELAST` :math:`>` 0 (see :ref:`PhysicalModelOptions`).
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`FELSTBCT(n)`
     - 
     - The external filename for tabular Elastic stress component :envvar:`k` at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IELSTBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IELSTBCTC(n)`
     - 0
     - The column number for Elastic stress component :envvar:`k` at mesh boundary :envvar:`n` in the external file

       Relevant when material flows into domain with existing stress.

       .. note:: Used only with :envvar:`IELAST` :math:`>` 0 (see :ref:`PhysicalModelOptions`).
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary condition
     - [t]

.. index:: 
   pair: boundary; electric charge density

.. index:: electric charge density

.. _BoundaryElectricChargeDensity:

Boundary Electric Charge Density
===================================

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

| *t* :math:`\leq` *500, time index* 
| *n* :math:`\leq` *6, boundary index* 

.. seealso:: \  

   :doc:`model-reference` -->  :ref:`electricFieldsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CHRGBCT(t,n)`
     - 0.0
     - Electric charge density at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`.

       .. note:: Only used when :envvar:`IECHRG` = 1 (see :ref:`ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters`).
     - [Q/L\ :sup:`3`]

   * - :envvar:`FCHRGBCT(n)`
     - 
     - The external filename for tabular electric charge density at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`ICHRGBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ICHRGBCTC(n)`
     - 0
     - The column number for electric charge density at mesh boundary :envvar:`n` in the external file

       .. note:: Only used when :envvar:`IECHRG` = 1 (see :ref:`ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters`).
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index:: 
   pair: boundary; entrained air volume fraction

.. index:: entrained air volume fraction

.. _BoundaryEntrainedAirVolumeFraction:

Boundary Entrained Air Volume Fraction
========================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. seealso:: \  :doc:`model-reference` -->  :ref:`airEntrainmentMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`AIRBCT(t,n)`
     - 0.0
     - Volume fraction of entrained air at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`.

       .. note:: Only used when :envvar:`IDFAIR` = 1 (see :ref:`AirEntrainmentModelParameters`).
     - NON-DIM

   * - :envvar:`FAIRBCT(n)`
     - 
     - The external filename for tabular volume fraction of entrained air at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IAIRBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IAIRBCTC(n)`
     - 0
     - The column number for volume fraction of entrained air at mesh boundary :envvar:`n` in the external file

       .. note:: Only used when :envvar:`IDFAIR` = 1 (see :ref:`AirEntrainmentModelParameters`).
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index::
   pair: boundary; dissolved solute concentration

.. index:: dissolved solute concentration

.. _BoundaryDissolvedSoluteConcentration:

Boundary Dissolved Solute Concentration
=========================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. seealso:: \  Theory manual section :ref:`DissolvingSolidSoluteModel`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`DISSBCT(t,n)`
     - 0.0
     - Concentration of dissolved solute at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`. 

       .. note:: Only used when :envvar:`IDISSOLVE` = 1 (see :ref:`DissolutionModelParameters`).
     - [M/L\ :sup:`3`]

   * - :envvar:`FDISSBCT(n)`
     - ' '
     - The external filename for tabular concentration of dissolved solute at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IDISSBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IDISSBCTC(n)`
     - 0
     - The column number for concentration of dissolved solute at mesh boundary :envvar:`n` in the external file :envvar:`FDISSBCT(n)`

       .. note:: Only used when :envvar:`IDISSOLVE` = 1 (see :ref:`DissolutionModelParameters`).
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index:: 
   pair: boundary; dynamic droplet size

.. index:: dynamic droplet size

.. _BoundaryDynamicDropletSize:

Boundary Dynamic Droplet Size
========================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. seealso:: \  :doc:`model-reference` -->  :ref:`driftFluxMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`DSIZEBCT(t,n)`
     - :envvar:`DFDIAM_INI`
     - Diameter of dispersed phase particles in drift-flux model at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`.

       .. note:: Only used when :envvar:`IDSIZE` = 1 (see :ref:`DynamicDropletModelParameters`).
     - [L]

   * - :envvar:`FDSIZEBCT(n)`
     - ' '
     - The external filename for tabular definition of the diameter of dispersed phase particles at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IDSIZEBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IDSIZEBCTC(n)`
     - 0
     - The column number for diameter of dispersed phase particles at mesh boundary :envvar:`n` in the external file :envvar:`FDSIZEBCT(n)`

       .. note:: Only used when :envvar:`IDSIZE` = 1 (see :ref:`DynamicDropletModelParameters`).
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index::
   pair: boundary; external pressure

.. index:: external pressure

.. _BoundaryExternalPotential:

Boundary External Potential
==============================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. seealso:: \  :doc:`model-reference` -->  :ref:`electricFieldsMR` and :ref:`electroOsmosisMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`EOFBCT(t,n)`
     - 0.0
     - Zeta potential at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`. 

       .. note:: Only used when :envvar:`IEPOT` = 1 and :envvar:`IEOF2` = 1 (see :ref:`ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters`).
     - [M L\ :sup:`2` Q\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`FEOFBCT(n)`
     - 
     - The external filename for tabular zeta potential at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IEOFBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IEOFBCTC(n)`
     - 0
     - The column number for zeta potential at mesh boundary :envvar:`n` in the external file

       .. note:: Only used when :envvar:`IEPOT` = 1 and :envvar:`IEOF2` = 1 (see :ref:`ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters`).
     - NONE

   * - :envvar:`EPOTBCT(t,n)`
     - 0.0
     - Electric potential at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`.

       .. note:: Only used when :envvar:`IEPOT` = 1 (see :ref:`ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters`).
     - [M L\ :sup:`2` Q\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`FEPOTBCT(n)`
     - 
     - The external filename for tabular electric potential at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IEPOTBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IEPOTBCTC(n)`
     - 0
     - The column number for electric potential at mesh boundary :envvar:`n` in the external file

       .. note:: Only used when :envvar:`IEPOT` = 1 (see :ref:`ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters`).
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

   * - :envvar:`IPHIBC(n)`
     - 0
     - Electric field boundary condition type at mesh boundary :envvar:`n`

       | =1, specified potential
       | =0, insulation
     - NONE

.. index::
   pair: boundary; fluid fraction

.. index:: fluid fraction

.. _BoundaryFluidFraction:

Boundary Fluid Fraction
==============================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`FBCT(t,n)`
     - 1.0
     - Fluid fraction at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`. Used when :envvar:`IHPBCT(n)` = 0.
     - NON-DIM

   * - :envvar:`FFBCT(n)`
     - 
     - The external filename for tabular fluid fraction at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IFBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFBCTC(n)`
     - 0
     - The column number for fluid fraction at mesh boundary :envvar:`n` in the external file
     - NONE

   * - :envvar:`IHPBCT(n)`
     - 0
     - Flag for setting fluid fraction at mesh boundary :envvar:`n`.

       | =0, use :envvar:`FBCT(t,n)`. For specified pressure boundary condition, pressure is uniform.
       | =1, use :envvar:`FLHTBCT(t,n)`. For specified pressure boundary condition, pressure is hydrostatic.

       .. note:: Used for mesh boundaries of type :envvar:`IBCT(n)` = 5, 6, 10 or 11.
     - NON-DIM     

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index::
   pair: boundary; fluid density

.. index:: fluid density

.. _BoundaryFluidDensity:

Boundary Fluid Density
=============================

.. note:: If Boundary Entrained Air Volume Fraction is selected (only used when :envvar:`IDFAIR` = 1;see :ref:`AirEntrainmentModelParameters`), this option is turned off and the boundary fluid density is calculated by solver.

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. seealso:: \  :doc:`model-reference` -->  :ref:`DensityAdvectionMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`RHOBCT(t,n)`
     - :envvar:`RHOF`
     - Fluid density at mesh boundary :envvar:`n` at time TIMBCT(t).

       .. note:: Only used when :envvar:`NMAT` = 1 and :envvar:`IFRHO` :math:`\geq` 2 (see :ref:`PhysicalModelOptions`).
     - [M/L\ :sup:`3`]

   * - :envvar:`FRHOBCT(n)`
     - 
     - The external filename for tabular fluid density at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IRHOBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IRHOBCTC(n)`
     - 0
     - The column number for fluid density at mesh boundary :envvar:`n` in the external file

       .. note:: Only used when :envvar:`NMAT` = 1 and :envvar:`IFRHO` :math:`\geq` 2 (see :ref:`PhysicalModelOptions`).
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index::
   pair: boundary; non-condensable gas volume fraction

.. index:: non-condensable gas volume fraction

.. _BoundaryNoncondensableGasVolumeFractions:

Boundary Non-condensable Gas Volume Fractions
================================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. seealso:: \  :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CNCBCT(t,n)`
     - 0.0
     - Volume fraction of the non-condensable gas component in the gas phase at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`.

       .. note:: Only used with non-condensable gas model (\ :envvar:`INCG` = 1) and relative saturation turned off (\ :envvar:`IRSAT` = 0)

       .. seealso:: \  \ :ref:`PhysicalModelOptions` and :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`
     - NON-DIM

   * - :envvar:`FCNCBCT(n)`
     - 
     - The external filename for tabular volume fraction of the non-condensable gas component in the gas phase at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`ICNCBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ICNCBCTC(n)`
     - 0
     - The column number for volume fraction of the non-condensable gas component in the gas phase at mesh boundary :envvar:`n` in the external file

       .. note:: Only used with non-condensable gas model (\ :envvar:`INCG` = 1) and relative saturation turned off (\ :envvar:`IRSAT` = 0)

       .. seealso:: \  \ :ref:`PhysicalModelOptions` and :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`
     - NONE

   * - :envvar:`RSATBCT(t,n)`
     - 0.0
     - Relative saturation of the vapor component in the gas phase at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`.

       .. note:: Only used with non-condensable gas model (\ :envvar:`INCG` = 1) and relative saturation turned on (\ :envvar:`IRSAT` = 1)

       .. seealso:: \  :ref:`PhysicalModelOptions` and :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`
     - NON-DIM

   * - :envvar:`FRSATBCT(n)`
     - 
     - The external filename for tabular relative saturation at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IRSATBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IRSATBCTC(n)`
     - 0
     - The column number for relative saturation at mesh boundary :envvar:`n` in the external file

       .. note:: Only used with non-condensable gas model (\ :envvar:`INCG` = 1) and relative saturation turned on (\ :envvar:`IRSAT` = 1)

       .. seealso:: \  :ref:`PhysicalModelOptions` and :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index::
   pair: boundary; pressure

.. index:: pressure

.. _BoundaryPressure:

Boundary Pressure
================================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IPBCTP(n)`
     - 1
     - Type of specified pressure boundary for boundary :envvar:`n`

       | =0, static
       | =1, stagnation
     - NONE

   * - :envvar:`IPOUTBCT(n)`
     - 0
     - Flag for outflow type of pressure boundary at boundary :envvar:`n`

       | =0, regular type of pressure boundary
       | =1, outflow type of pressure boundary
     - NONE

   * - :envvar:`PBCT(t,n)`
     - ...
     - Pressure at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`. Defaults to zero if gauge pressure is used, :envvar:`IPGAUGE` = 1, and to :envvar:`P_REFERENCE` otherwise.

          If :envvar:`IHPBCT(n)` = 1, :envvar:`PBCT(t,n)` is overridden by hydrostatic pressure.

       .. seealso:: \ :envvar:`IPDIS` in :ref:`namelistXPUTInitializationOption`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`FPBCT(n)`
     - 
     - The external filename for tabular pressure at mesh boundary :envvar:`n` as a function of time. Used only if :envvar:`IPBCTC(n)` :math:`\geq` 2.
     - NONE

   * - :envvar:`IPBCTC(n)`
     - 0
     - The column number for pressure at mesh boundary :envvar:`n` in the external file

          If :envvar:`IHPBCT(n)` = 1, :envvar:`PBCT` is overridden by hydrostatic pressure.
     - NONE     

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index::
   pair: boundary; scalar concentration

.. index:: scalar concentration

.. _BoundaryScalarConcentration:

Boundary Scalar Concentration
================================================

| *t* :math:`\leq` *500, time index*
| *ns* :math:`\leq` *99, scalar index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`SCLBCT(t,n,ns)`
     - 0.0
     - Scalar magnitude of species :envvar:`ns` at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`.

       .. note:: Only used for :envvar:`NSC` :math:`>` 0.
     - Varies; typically [M/L\ :sup:`3`]

   * - :envvar:`FSCLBCT(n,ns)`
     - 
     - The external filename for tabular scalar magnitude of species :envvar:`ns` at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`ISCLBCTC(n,ns)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ISCLBCTC(n,ns)`
     - 0
     - The column number for scalar magnitude of species :envvar:`ns` at mesh boundary :envvar:`n` in the external file

       .. note:: Only used for :envvar:`NSC` :math:`>` 0.
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index::
   pair: boundary; sediment concentration

.. index:: sediment concentration

.. _BoundarySedimentConcentration:

Boundary Sediment Concentration
================================================

| *t* :math:`\leq` *500, time index*
| *k* :math:`\leq` *10, sediment species index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. seealso:: \  :doc:`model-reference` -->  :ref:`sedimentScourMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`SSBCT(t,n,k)`
     - 0.0
     - Suspended sediment mass concentration of sediment species :envvar:`k` at mesh boundary n at time TIMBCT(t).

       .. note:: Only used for :envvar:`NSSPC` :math:`>` 0 (see :ref:`ScalarSedimentationScourParameters`).
     - [M/L\ :sup:`3`]

   * - :envvar:`FSSBCT(n)`
     - 
     - The external filename for tabular suspended sediment mass concentration of sediment species :envvar:`k` at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`ISSBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ISSBCTC(n)`
     - 0
     - The column number for suspended sediment mass concentration of sediment species :envvar:`k` at mesh boundary :envvar:`n` in the external file

       .. note:: Only used for :envvar:`NSSPC` :math:`>` 0 (see :ref:`ScalarSedimentationScourParameters`).
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index:: boundary segregation

.. _BoundarySegregationSoluteMassConcentrations:

Boundary Segregation Solute Mass Concentrations 
================================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. seealso:: \  :doc:`model-reference` -->  :ref:`macroSegregationMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`SEGBCT(t,n)`
     - 0.0
     - Concentration of solute mass at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`.

       .. note:: Only used when :envvar:`ISEG` = 1 (see :ref:`BinaryAlloySegregationParameters`).
     - [M/L\ :sup:`3`]

   * - :envvar:`FSEGBCT(n)`
     - 
     - The external filename for tabular concentration of solute mass at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`ISEGBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ISEGBCTC(n)`
     - 0
     - The column number for concentration of solute mass at mesh boundary :envvar:`n` in the external file

       .. note:: Only used when :envvar:`ISEG` = 1 (see :ref:`BinaryAlloySegregationParameters`).
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index:: boundary sludge settling

.. _BoundarySludgeSettling:

Boundary Sludge Settling 
================================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. seealso:: \  :doc:`model-reference` -->  :ref:`sludgeSettlingSectionMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CSLDGBCT(t,n)` 
     - 0.0
     - Mass concentration of sludge at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)` 
     - [M/L\ :sup:`3`]

   * - :envvar:`FCSLDGBCT`
     - ...
     - The external filename for sludge mass concentration at mesh boundary :envvar:`n` as a function of time 
     - NONE

   * - :envvar:`ICSLDGBCTC`
     - 0
     - The column number of sludge mass concentration at mesh boundary :envvar:`n` in file :envvar:`FCSLDGBCT`
     - NONE

.. index:: boundary temperature, wall power

.. _BoundaryTemperatureandWallPower:

Boundary Temperature and Wall Power 
================================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. seealso:: \  :doc:`model-reference` -->  :ref:`heatTransferAndConductionsInComponentsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`TBCD`
     - :envvar:`T_REFERENCE`
     - Default obstacle and mesh boundary surface temperature.

       .. note:: Only used for :envvar:`IHTC` :math:`=` 1 (see :ref:`PhysicalModelOptions`)
     - [T]

   * - :envvar:`TBCT(t,n)`
     - :envvar:`TBCD`
     - Temperature at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`. Used at wall-type boundaries when :envvar:`IBCT(n)` = 2 and :envvar:`IHTBCT(n)` = 0, or for fluid #1 at boundaries of type :envvar:`IBCT(n)` = 5, 6, 10 or 11.
     - [T]

   * - :envvar:`FTBCT(n)`
     - ' '
     - The external filename for tabular temperature at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`ITBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ITBCTC(n)`
     - 0
     - The column number for temperature at mesh boundary :envvar:`n` in the external file :envvar:`FTBCT(n)`
     - NONE

   * - :envvar:`TBCT2(t,n)`
     - :envvar:`TBCD`
     - Fluid #2 temperature at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`. Used only at :math:`x` and :math:`y` boundaries of type :envvar:`IBCT(n)` = 5, 6, 10 or 11, with hydrostatic attribute, :envvar:`IHPBCT(n)` = 1.
     - [T]

   * - :envvar:`FTBCT2(n)`
     - ' '
     - The external filename for tabular temperature of fluid #2 at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`ITBCTC2(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ITBCTC2(n)`
     - 0
     - The column number for fluid #2 temperature at mesh boundary :envvar:`n` in the external file :envvar:`FTBCT2(n)`
     - NONE     

   * - :envvar:`IHTBCT(n)`
     - 0
     - Type of heat transfer boundary condition for wall-type mesh boundary :envvar:`n`.

       | =0, use specified boundary temperature and heat transfer coefficient to calculate the heat flux
       | =1, use specified thermal power to calculate the heat flux.
     - NONE     

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index::
   pair: boundary; wall power

.. index:: wall power

.. _BoundaryWallPower:

Boundary Wall Power 
-------------------------

.. seealso:: \  :doc:`model-reference` -->  :ref:`heatSourcesMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`POBCT(t,n)`
     - 0.0
     - Thermal power at mesh boundary :envvar:`n`, or at a macro-boundary (see :envvar:`IF_PART`), at time :envvar:`TIMBCT(t)`.

       .. note:: Only used when :envvar:`IHTC` :math:`=` 1 (see :ref:`PhysicalModelOptions`) and :envvar:`IBCT(n)` = 2 and :envvar:`IHTBCT(n)` = 1.
     - [M L\ :sup:`2` t\ :sup:`-3`]

   * - :envvar:`FPOBCT(n)`
     - ' '
     - The external filename for tabular thermal power at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IPOBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IHTBCT(n)`
     - 0
     - Type of heat transfer boundary condition for wall-type mesh boundary :envvar:`n`.

       | =0, use specified boundary temperature and heat transfer coefficient to calculate the heat flux
       | =1, use specified thermal power to calculate the heat flux.

     - NONE

   * - :envvar:`IPOBCTC(n)`
     - 0
     - The column number for thermal power at mesh boundary :envvar:`n` in the external file

       .. note:: Only used for :envvar:`IHTC` :math:`=` 1 (see :ref:`PhysicalModelOptions`).
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index::
   pair: boundary; thermal properties
   pair: boundary; heat transfer coefficients

.. index:: thermal properties, heat transfer coefficients

.. _BoundaryThermalPropertiesandHeatTransferCoefficients:

Boundary Thermal Properties and Heat Transfer Coefficients
==============================================================

.. _ThermalPropertiesIVS:

Thermal Properties
--------------------

| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. note:: 

   * For thermal properties and heat transfer coefficients to apply, the boundary must be a wall (Type 2, see the Note below for special case for :envvar:`RWALL`).

   * All parameters in this section require activation of the heat transfer model (\ :envvar:`IHTC` :math:`=` 1); see :ref:`PhysicalModelOptions`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`RWALL(n)`
     - 1.0
     - Surface area multiplier to account for roughness of mesh boundary :envvar:`n`. :envvar:`RWALL(n)` multiplies the cell-face area to give the effective heat transfer area for each cell, both fluid and solid. No heat transfer at mesh boundary :envvar:`n` if :envvar:`RWALL(n)` = 0. 

       .. note:: For a fixed-pressure or fixed-velocity boundary, fluid conduction across the boundary :envvar:`n` can be turned off by setting :envvar:`RWALL(n)` = 0.
     - NON-DIM

   * - :envvar:`WBCL(n)`
     - ...
     - Length scale for mesh boundary :envvar:`n` 

       This length scale is used to estimate the heat transfer coefficient for the boundary when :envvar:`HWALL1(n)` and/or :envvar:`HWALL2(n)` are **not** defined.

       .. note:: Defaults to diagonal length of mesh boundary.

       .. seealso:: \  :envvar:`HWALL1(n)` and :envvar:`HWALL2(n)` in :ref:`HeatTransferCoefficients`.
     - [L]

.. index:: heat transfer coefficients

.. _HeatTransferCoefficients:

Heat Transfer Coefficients
------------------------------

.. note:: All parameters in this section require activation of the heat transfer model (\ :envvar:`IHTC` :math:`=` 1); see :ref:`PhysicalModelOptions`.

.. seealso:: \  :doc:`model-reference` -->  :ref:`heatTransferAndConductionsInComponentsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`HWALL1(n)`
     - -1.0
     - Fixed heat transfer coefficient to fluid #1 from mesh boundary :envvar:`n`

       .. note:: If :envvar:`HWALL1(n)` = -1.0, the code will evaluate a heat-transfer coefficient.

     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`HWALL2(n)`
     - -1.0
     - Fixed heat transfer coefficient to fluid #2 from mesh boundary :envvar:`n`

       .. note:: If :envvar:`HWALL2(n)` = -1.0, the code will evaluate a heat-transfer coefficient.

     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`HWOBS(n)`
     - -1.0
     - Heat transfer coefficient between obstacles and wall mesh boundary

       .. note:: If :envvar:`HWOBS(n)` = -1.0 (the default), a zero thermal resistance is assumed (i.e., perfect contact between component *n* and wall boundaries).

     - [M T\ :sup:`-1` t\ :sup:`-3`]

.. index:: turbulence, dissipation

.. index::
   pair: boundary; turbulence and dissipation

.. _BoundaryTurbulenceandDissipation:

Boundary Turbulence and Dissipation
==============================================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*


| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. seealso:: \  :doc:`model-reference` -->  :ref:`turbulenceSectionMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`DTKBCT(t,n)`
     - ...
     - Turbulent dissipation per unit mass at mesh boundary :envvar:`n` at time TIMBCT(t)

       .. note:: Default dissipation is evaluated from :envvar:`TKEBCT` and :envvar:`TLEN` (see :ref:`TurbulenceEquationCoefficientsandDiffusionParameters`).

       .. note:: Only used for :envvar:`IFVIS` :math:`\geq` 3 (see :ref:`TurbulenceandViscousOptions`).
     - [L\ :sup:`2`/t\ :sup:`3`]

   * - :envvar:`FDTKBCT(n)`
     - 
     - The external filename for tabular turbulent dissipation per unit mass at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IDTKBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IDTKBCTC(n)`
     - 0
     - The column number for turbulent dissipation per unit mass at mesh boundary :envvar:`n` in the external file

       .. note:: 
          * Default dissipation is evaluated from :envvar:`TKEBCT` and :envvar:`TLEN` (see :ref:`TurbulenceEquationCoefficientsandDiffusionParameters`).
          * Only used for :envvar:`IFVIS` :math:`\geq` 3 (see :ref:`TurbulenceandViscousOptions`).
     - NONE

   * - :envvar:`TKEBCT(t,n)`
     - :envvar:`TKEI`
     - Turbulent energy per unit mass at mesh boundary :envvar:`n` at time TIMBCT(t)

       .. note:: Only used for :envvar:`IFVIS` :math:`\geq` 2 (see :ref:`TurbulenceandViscousOptions`).
     - [L\ :sup:`2`/t\ :sup:`2`]

   * - :envvar:`FTKEBCT(n)`
     - 
     - The external filename for tabular turbulent energy per unit mass at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IFBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ITKEBCTC(n)`
     - 0
     - The column number for turbulent energy per unit mass at mesh boundary :envvar:`n` in the external file

       .. note:: Only used for :envvar:`IFVIS` :math:`\geq` 2 (see :ref:`TurbulenceandViscousOptions`).
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index::
   pair: boundary; velocity

.. index:: velocity

.. _BoundaryVelocity:

Boundary Velocity
==============================================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*


| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`UBCT(t,n)`
     - 0.0
     - X-velocity at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`
     - [L/t]

   * - :envvar:`FUBCT(n)`
     - 
     - The external filename for tabular X-velocity at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IUBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IUBCTC(n)`
     - 0
     - The column number for X-velocity at mesh boundary :envvar:`n` in the external file
     - NONE

   * - :envvar:`VBCT(t,n)`
     - 0.0
     - Y-velocity at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)` (in cylindrical geometry, units are radians/s).
     - [L/t]

   * - :envvar:`FVBCT(n)`
     - 
     - The external filename for tabular Y-velocity at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IVBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IVBCTC(n)`
     - 0
     - The column number for Y-velocity at mesh boundary :envvar:`n` in the external file
     - NONE

   * - :envvar:`WBCT(t,n)`
     - 0.0
     - Z-velocity at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`
     - [L/t]

   * - :envvar:`FWBCT(n)`
     - 
     - The external filename for tabular Z-velocity at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IWBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IWBCTC(n)`
     - 0
     - The column number for Z-velocity at mesh boundary :envvar:`n` in the external file
     - NONE

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index::
   pair: boundary; outflow options

.. index:: outflow boundary options

.. _OutflowBoundaryOptions:

Outflow Boundary Options
==============================================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *6, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. seealso:: \  Theory manual section :ref:`OutflowBoundaryConditionsTh`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IOBCTP(n)`
     - 0
     - Reverse flow option at outflow mesh boundary #n (of type 8)

       | =0, do not allow fluid to enter the domain at the boundary
       | =1, allow fluid to enter the domain at the boundary (useful when modeling linear surface waves exiting at this boundary)
     - NONE

.. index::
   pair: boundary; linear surface wave

.. index:: linear surface wave boundary options

.. _LinearSurfaceWaveBoundary:

Linear Surface Wave Boundary Options
==============================================================

| *t* :math:`\leq` *500, time index*
| *m* :math:`\leq` *1000, linear wave index*
| *n* :math:`\leq` *4, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4

.. note:: A linear wave boundary condition can only be applied at left, right, front and back mesh boundaries of type 10.

.. seealso:: \  :doc:`model-reference` -->  :ref:`waveBoundaryConditionsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`FLHTBCT(t,n)`
     - -1.e10
     - Free-surface elevation at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`.
     - [L]

   * - :envvar:`FFLHTBCT(n)`
     - 
     - The external filename for tabular free-surface elevation at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IFLHTBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFLHTBCTC(n)`
     - 0
     - The column number for free-surface elevation at mesh boundary :envvar:`n` in the external file
     - NONE

   * - :envvar:`INWAVE(n)`
     - 3
     - Indicator of wave type at mesh boundary :envvar:`n`

       | =1, Linear wave
       | =2, Stoke's wave (Fenton's 5th-order theory)
       | =3, Stokes and cnoidal waves (Fenton's Fourier series method)
       | =4, Solitary wave
       | =5, Random wave
     - NONE

   * - :envvar:`IWAVEBC(n)`
     - 0
     - Total number of linear wave components entering computational domain from mesh boundary :envvar:`n`.

       .. note:: Not used for bottom and top boundaries (\ :envvar:`n` = 5 and 6).
     - NONE

   * - :envvar:`WAVEAMP(n,m)`
     - 0.0
     - Wave height amplitude of wave component :envvar:`m` at mesh boundary :envvar:`n`.
     - [L]

   * - :envvar:`UBCT(t,n)`
     - 0.0
     - X-velocity of undisturbed constant uniform current at mesh boundary :envvar:`n`.

       .. note:: Must be slower than wave speed if :envvar:`n` = 1 or 2. 
     - [L/t]

   * - :envvar:`VBCT(t,n)`
     - 0.0
     - Y-velocity of undisturbed constant uniform current at mesh boundary :envvar:`n`.

       .. note:: Must be slower than wave speed if :envvar:`n` = 1 or 2.
     - [L/t]

   * - :envvar:`WBCT(t,n)`
     - 0.0
     - Z-velocity of undisturbed constant uniform current at mesh boundary :envvar:`n`

       .. note:: Must be slower than wave speed if :envvar:`n` = 1 or 2. 
     - [L/t]

   * - :envvar:`WAVEPER(n,m)`
     - ...
     - Period of wave component :envvar:`m` at mesh boundary :envvar:`n`.

       .. note:: If :envvar:`WAVELEN(n,m)` is defined, the wave period is computed from the Airy solution for a linear wave. Otherwise, defaults to 0.0.
     - [t]

   * - :envvar:`WAVELEN(n,m)`
     - ...
     - Wave length of wave component :envvar:`m` at mesh boundary :envvar:`n`.

       .. note:: If :envvar:`WAVEPER(n,m)` is defined, the wave length is computed from the Airy solution for a linear wave, overwriting user input for :envvar:`WAVELEN(n,m)`. Otherwise, defaults to 0.0.
     - [L]

   * - :envvar:`WAVEPHS(n,m)`
     - 0.0
     - Phase shift in degrees of wave component :envvar:`m` at mesh boundary :envvar:`n`.
     - DEGREES

   * - :envvar:`WAVEH(n)`
     - ...
     - Mean fluid depth for all wave components at mesh boundary :envvar:`n`.

       Defaults to the fluid elevation relative to the bottom of the computational domain, using the user-defined mean free surface elevation :envvar:`FLHTBCT(t,n)`.
     - [L]

.. index::
   pair: boundary; non-linear wave surface

.. index:: non-linear surface wave boundary options

.. _NonlinearSurfaceWaveBoundary:

Non-linear Surface Wave Boundary Options
==============================================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *4, boundary index*

| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4

.. note:: A non-linear wave boundary condition can only be applied at left, right, front and back mesh boundaries of type 10 (see :ref:`BoundaryConditionTypes`).

.. seealso:: \  :doc:`model-reference` -->  :ref:`waveBoundaryConditionsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`INWAVE(n)`
     - 3
     - Indicator of wave type at mesh boundary :envvar:`n`

       | =1, Linear wave
       | =2, Stoke's wave (Fenton's 5th-order theory)
       | =3, Stokes and cnoidal waves (Fenton's Fourier series method)
       | =4, Solitary wave
       | =5, Random wave

     - NONE

   * - :envvar:`DISPEAK(n)`
     - ...
     - Initial distance from the solitary wave crest to the wave boundary (the solitary wave is initially located outside the computational domain). 

       Default of :envvar:`DISPEAK` is half of the solitary wave's wavelength so that the initial surface displacement at the wave boundary is 1% of the wave height. The wavelength of a solitary wave is the horizontal distance in the wave propagation direction between two locations where the surface displacement is 1% of the wave height.

       .. note:: Used when :envvar:`INWAVE(n) = 4`.
     - [L]

   * - :envvar:`FLHTBCT(t,n)`
     - -1.e10
     - Free-surface elevation at mesh boundary :envvar:`n` at time :envvar:`TIMBCT(t)`
     - [L]

   * - :envvar:`FFLHTBCT(n)`
     - 
     - The external filename for tabular free-surface elevation at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IFLHTBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFLHTBCTC(n)`
     - 0
     - The column number for free-surface elevation at mesh boundary :envvar:`n` in the external file
     - NONE

   * - :envvar:`HNWAVE(n)`
     - 0.0
     - Wave elevation of non-linear wave at mesh boundary :envvar:`n`

       .. note:: Measured from trough to crest. Used when :envvar:`INWAVE(n)` = 2, 3 or 4.
     - [L]

   * - :envvar:`LNWAVE(n)`
     - ...
     - Wave length of nonlinear wave at mesh boundary :envvar:`n`

       .. note:: Used when :envvar:`INWAVE(n)` = 2 or 3. If wave length is defined, then wave period is calculated by the solver.
     - [L]

   * - :envvar:`TNWAVE(n)`
     - ...
     - Period of nonlinear wave at mesh boundary :envvar:`n`

       .. note:: Used when :envvar:`INWAVE(n)` = 2 or 3. If wave period is defined, then wave length is calculated by the solver.
     - [t]

   * - :envvar:`WAVEH(n)`
     - ...
     - Mean fluid depth for all wave components at mesh boundary :envvar:`n`

       .. note:: Defaults to the fluid elevation relative to the bottom of the computational domain, using the user-defined mean free surface elevation :envvar:`FLHTBCT(t,n)`.
     - [L]

   * - :envvar:`UBCT(t,n)`
     - 0.0
     - X-velocity of undisturbed constant uniform current at mesh boundary :envvar:`n`

       .. note:: Must be slower than wave speed if :envvar:`n` = 1 or 2. 
     - [L/t]

   * - :envvar:`VBCT(t,n)`
     - 0.0
     - Y-velocity of undisturbed constant uniform current at mesh boundary :envvar:`n`

       .. note:: Must be slower than wave speed if :envvar:`n` = 1 or 2. 
     - [L/t]

   * - :envvar:`WBCT(t,n)`
     - 0.0
     - Z-velocity of undisturbed constant uniform current at mesh boundary :envvar:`n`

       .. note:: Must be slower than wave speed if :envvar:`n` = 1 or 2. 
     - [L/t]

.. index::
   pair: boundary; random wave

.. index:: random wave boundary condition

.. _RandomWaveBoundaryCondition:

Random Wave Boundary Condition
==============================================================

| *n* :math:`\leq` *6, boundary index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`waveBoundaryConditionsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`INWAVE(n)`
     - 3
     - Indicator of wave type at mesh boundary :envvar:`n`

       | =1, Linear wave
       | =2, Stoke's wave (Fenton's 5th-order theory)
       | =3, Stokes and cnoidal waves (Fenton's Fourier series method)
       | =4, Solitary wave
       | =5, Random wave

     - NONE

   * - :envvar:`ISPECT(n)`
     - 1
     - Type of wave energy spectrum. Used when :envvar:`INWAVE(n)` = 5.

       | =0, user-provided data file for wave energy spectrum (the first and second columns are angular frequency and spectrum density, respectively)
       | =1, Person-Moskowitz (P-M) spectrum
       | =2, JONSWAP spectrum
     - NONE

   * - :envvar:`FEDS(n)`
     - ...
     - Name of user-provided data file for wave energy spectrum. 

       .. note:: Used only when :envvar:`INWAVE(n)` = 5 and :envvar:`ISPECT(n)` = 0.
     - NONE

   * - :envvar:`FETCH(n)`
     - ...
     - Fetch length in JONSWAP spectrum. 

       .. note:: Used only when :envvar:`ISPECT(n)` = 5 and :envvar:`ISPECT(n)` = 2.
     - [L]

   * - :envvar:`GAM(n)`
     - 3.3
     - Peak enhancement factor in JONSWAP spectrum. 

       .. note:: Used only when :envvar:`INWAVE(n)` = 5 and :envvar:`ISPECT(n)` = 2.
     - NON-DIM

   * - :envvar:`UW(n)`
     - ...
     - Wind speed at 10m above water surface. Used when :envvar:`INWAVE(n)` = 5 and :envvar:`ISPECT(n)` = 1 or 2.
     - [L/t]

.. index::
   pair: rating curve; natural inlet 

.. index:: Rrting curve and natural inlets boundary condition

.. _ratingcurves:

Rating curve and natural inlet boundary condition
==============================================================

| *n* :math:`\leq` *6, boundary index*
| *nvol* :math:`\leq` *500, index for volume flow rate and fluid elevation in rating curve table*



.. seealso:: \  :doc:`model-reference` -->  :ref:`waveBoundaryConditionsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IRATING(n)`
     - 0
     - Flag for fluid elevation at boundary :envvar:`n`

       | =0, fluid elevation vs. time is user-prescribed. Can be applied to all six mesh boundaries with :envvar:`IBCT(n)` = 5, 6, 10 or 11.
       | =1, time-varying fluid elevation is defined using rating curve that is a tabular definition of volume flow rate vs. fluid elevation. The table can be manually entered or read from an external file where the first column is flow rate and must be in ascending order. Can only be applied to X and Y boundaries with :envvar:`IBCT(n)` = 5 or 11.
       | =2, time-varying fluid elevation is calculated according to flow rate with no definition of flow regime. Can only be applied to X and Y inlet boundaries with :envvar:`IBCT(n)` = 11.
       | =3, time-varying fluid elevation is calculated according to flow rate. Flow is in subcritical regime. Can only be applied to X and Y inlet boundaries with :envvar:`IBCT(n)` = 11.
       | =4, time-varying fluid elevation is calculated according to flow rate. Flow is in supercritical flow regime. Can only be applied to X and Y boundaries with :envvar:`IBCT(n)` = 11.
       | =5, time-varying fluid elevation is calculated according to flow rate. Flow is in critical flow regime. Can only be applied to X and Y boundaries with :envvar:`IBCT(n)` = 11.

       .. note:: 

          * :envvar:`IRATING(n)` is used only when :envvar:`IHPBCT(n)` = 1.

          * :envvar:`FLHTBCT(1,n)` is not used when :envvar:`IRATING(n)` > 0.

     - NONE

   * - :envvar:`VOLBC(nvol)`
     - ...
     - Volume flow rate in rating curve table. Used when :envvar:`IRATING(n)` = 1. 
     - [L\ :sup:`3`/t]

   * - :envvar:`FLHTBCV(nvol,n)`
     - ...
     - Fluid elevation corresponding to :envvar:`VOLBC(nvol)` in rating curve table. Used when IRATING(n)=1.
     - [L]

   * - :envvar:`FFLHTBCV(n)`
     - 
     - Name of the external file for rating curve table. Used when :envvar:`IRATING(n)` = 1 and :envvar:`IFLHTBCVC(n)` > 0.
     - NONE

   * - :envvar:`IFLHTBCVC(n)`
     - 0
     - The column index of fluid elevation in the external rating curve file :envvar:`FFLHTBCV(n)`. 

       | =0, rating curve is manually entered without using the external file :envvar:`FFLHTBCV(n)`. 
       | >0, external file :envvar:`FFLHTBCV(n)` is used to define rating curve.
     - NONE

   * - :envvar:`FLELEVMIN(n)`
     - ...
     - Lower limit for fluid elevation. Used when :envvar:`IRATING(n)` > 1. Default is the minimum z-coordinate of the computational domain. 
     - NONE

   * - :envvar:`FLELEVMAX(n)`
     - ...
     - Upper limit for fluid elevation. Used when :envvar:`IRATING(n)` > 1. Default is the maximum z-coordinate of the computational domain. 
     - NONE

.. index::
   pair: boundary; flow rate

.. index:: flow rate

.. _BoundaryFlowRate:

Boundary Flow Rate
==============================================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *4, boundary index*


| Left boundary     n=1,    Right n=2
| Front boundary    n=3,    Back  n=4
| Bottom boundary   n=5,    Top   n=6

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BCDATA
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`FLRBCT(t,n)`
     - 0.0
     - Volume flow rate at mesh boundary :envvar:`n`, or at a macro-boundary (see :envvar:`IF_PART`), at time :envvar:`TIMBCT(t)`.

       .. note:: 

          * The flow rate is converted to a uniform velocity across the wetted part of the boundary, that is, where fluid (#1 or #2) is present. For one-fluid flow with free-surface elevation defined, the flow rate is applied only below free surface.

          * Must be a positive quantity.
     - [L\ :sup:`3`/t]

   * - :envvar:`FFLRBCT(n)`
     - 
     - The external filename for tabular volume flow rate at mesh boundary :envvar:`n` as a function of time (used only if :envvar:`IFLRBCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFLRBCTC(n)`
     - 0
     - The column number for volume flow rate at mesh boundary :envvar:`n` in the external file

       .. note:: 

          * The flow rate is converted to a uniform velocity across the wetted part of the boundary, that is, where fluid (#1 or #2) is present. For one-fluid flow with free-surface elevation defined, the flow rate is applied only below free surface.

          * Must be a positive quantity.
     - NONE

   * - :envvar:`FNX(n)`
     - ...
     - X-component of the flow direction vector at mesh boundary :envvar:`n`.

       Defaults 1.0 at left boundary (\ :envvar:`n` =1 ), to -1.0 at right boundary (\ :envvar:`n` = 2), to 0.0 at all other boundaries.
     - NON-DIM

   * - :envvar:`FNY(n)`
     - ...
     - Y-component of the flow direction vector at mesh boundary :envvar:`n`.

       Defaults 1.0 at front boundary (\ :envvar:`n` = 3), to -1.0 at back boundary (\ :envvar:`n` = 4), to 0.0 at all other boundaries.
     - NON-DIM

   * - :envvar:`FNZ(n)`
     - ...
     - Z-component of the flow direction vector at mesh boundary :envvar:`n`.

       Defaults 1.0 at bottom boundary (\ :envvar:`n` = 5), to -1.0 at top boundary (\ :envvar:`n` = 6), to 0.0 at all other boundaries.
     - NON-DIM

   * - :envvar:`TIMBCT(t)`
     - 0.0
     - Time table for mesh boundary conditions
     - [t]

.. index:: active simulation control; boundary conditions

.. _EventsBCs:

Active simulation control of boundary conditions 
====================================================

.. seealso:: \  :doc:`model-reference` -->  :ref:`activeSimulationControlMR`.

| *n* :math:`\leq` *6, boundary index*
| *t* :math:`\leq` *500, time index*
| *m* :math:`\leq` *10, boundary condition event index*
| *i* :math:`\leq` *10, event action index*
| *j* :math:`\leq` *10, probe condition index*

| Left boundary   n=1  Right n=2
| Front boundary  n=3  Back  n=4
| Bottom boundary n=5  Top   n=6

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTEventsBCs:

.. list-table:: Namelist XPUT
   :widths: 25 15 40 20
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NEVENTS_BC(n)`
     - 0
     - Number of events for mesh boundary :envvar:`n`

       .. note:: Used only when :envvar:`IMO(m)` = 3 (prescribed motion GMO)
     - NONE

   * - :envvar:`EVENT_NAME_BC(m,n)`
     - ' '
     - Event :envvar:`m` name (up to 50 characters)
     - NONE

   * - :envvar:`IF_EVENT_ENABLED_BC(m,n)`
     - 1
     - Event :envvar:`m` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IF_GLOBAL_BC(m,n)`
     - 0
     - Global condition flag for event :envvar:`m`

       | =0, use local conditions
       | =1, use global conditions

     - NONE

   * - :envvar:`IGLOBAL_BC(m,n)`
     - 0
     - Global condition id for event :envvar:`m` (used if :envvar:`IF_GLOBAL_BC(m,n)` = 1)
     - NONE

   * - :envvar:`NACTIONS_BC(m,n)`
     - 0
     - Number of actions for event :envvar:`m` (used if :envvar:`IF_GLOBAL_BC(m,n)` = 0)
     - NONE

   * - :envvar:`NPROBES_BC(m,n)`
     - 0
     - Number of local probe conditions for event :envvar:`m`
     - NONE

   * - :envvar:`EVENT_CONDITION_LOGIC_BC(m,n)`
     - ' '
     - Logical operator between probe conditions for event :envvar:`m`

       | ='ANY', event triggered when any of the enabled probe conditions satisfied
       | ='ALL', event triggered when all of the enabled probe conditions satisfied

       .. note:: Required when number of enabled probe conditions > 1
     - NONE

   * - :envvar:`EVENT_ACTION_BC(i,m,n)`
     - ' '
     - Event action :envvar:`i` for event :envvar:`m`

       | ='PBCT', change pressure at mesh boundary :envvar:`n`. Used only when :envvar:`IBCT(n)` = 5 or 6.
       | ='FLRBCT', change volume flow rate at mesh boundary :envvar:`n`. Used only when :envvar:`IBCT(n)` = 11.
       | ='UBCT', change x-velocity at mesh boundary :envvar:`n`. Used only when :envvar:`IBCT(n)` = 2, 5, 6, or 10.
       | ='VBCT', change y-velocity at mesh boundary :envvar:`n`. Used only when :envvar:`IBCT(n)` = 2, 5, 6, or 10.
       | ='WBCT', change z-velocity at mesh boundary :envvar:`n`. Used only when :envvar:`IBCT(n)` = 2, 5, 6, or 10.
       | ='TBCT', change temperature at mesh boundary :envvar:`n`. Used only when :envvar:`IHTC` :math:`=` 1, and (:envvar:`IBCT(n)` = 2 and :envvar:`IHTBCT(n)` = 0, or :envvar:`IBCT(n)` = 5 or 6).
       | ='POBCT', change thermal power at mesh boundary :envvar:`n`. Used only when :envvar:`IHTC` :math:`=` 1, :envvar:`IBCT(n)` = 2, and :envvar:`IHTBCT(n)` = 1.
     - NONE

   * - :envvar:`PBCT_EVENT(t,m,n)`
     - 0.0
     - Pressure at time :envvar:`TIMBCT(t)` for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'PBCT' for any action :envvar:`i`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`IPBCTC_EVENT(m,n)`
     - 0
     - The column number for the pressure for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'PBCT' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FPBCT_EVENT(m,n)`
     - 
     - The external filename for the tabular pressure for event :envvar:`m` as a function of time

       .. note:: Used when :envvar:`IPBCTC_EVENT(m,n)` :math:`\geq` 2.
     - NONE

   * - :envvar:`FLRBCT_EVENT(t,m,n)`
     - 0.0
     - Volume flow rate at time :envvar:`TIMBCT(t)` for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'FLRBCT' for any action :envvar:`i`.
     - [L\ :sup:`3`/t]

   * - :envvar:`IFLRBCTC_EVENT(m,n)`
     - 0
     - The column number for the volume flow rate for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'FLRBCT' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FFLRBCT_EVENT(m,n)`
     - 
     - The external filename for the tabular volume flow rate for event :envvar:`m` as a function of time

       .. note:: Used when :envvar:`IFLRBCTC_EVENT(m,n)` :math:`\geq` 2.
     - NONE

   * - :envvar:`UBCT_EVENT(t,m,n)`
     - 0.0
     - x-velocity at time :envvar:`TIMBCT(t)` for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'UBCT' for any action :envvar:`i`.
     - [L/t]

   * - :envvar:`IUBCTC_EVENT(m,n)`
     - 0
     - The column number for the x-velocity for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'UBCT' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FUBCT_EVENT(m,n)`
     - 
     - The external filename for the tabular x-velocity for event :envvar:`m` as a function of time

       .. note:: Used when :envvar:`IUBCTC_EVENT(m,n)` :math:`\geq` 2.
     - NONE

   * - :envvar:`VBCT_EVENT(t,m,n)`
     - 0.0
     - y-velocity at time :envvar:`TIMBCT(t)` for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'VBCT' for any action :envvar:`i`.
     - [L/t]

   * - :envvar:`IVBCTC_EVENT(m,n)`
     - 0
     - The column number for the y-velocity for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'VBCT' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FVBCT_EVENT(m,n)`
     - 
     - The external filename for the tabular y-velocity for event :envvar:`m` as a function of time

       .. note:: Used when :envvar:`IVBCTC_EVENT(m,n)` :math:`\geq` 2.
     - NONE

   * - :envvar:`WBCT_EVENT(t,m,n)`
     - 0.0
     - z-velocity at time :envvar:`TIMBCT(t)` for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'WBCT' for any action :envvar:`i`.
     - [L/t]

   * - :envvar:`IWBCTC_EVENT(m,n)`
     - 0
     - The column number for the z-velocity for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'WBCT' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FWBCT_EVENT(m,n)`
     - 
     - The external filename for the tabular z-velocity for event :envvar:`m` as a function of time

       .. note:: Used when :envvar:`IWBCTC_EVENT(m,n)` :math:`\geq` 2.
     - NONE

   * - :envvar:`TBCT_EVENT(t,m,n)`
     - 0.0
     - Temperature at time :envvar:`TIMBCT(t)` for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'TBCT' for any action :envvar:`i`.
     - [T]

   * - :envvar:`ITBCTC_EVENT(m,n)`
     - 0
     - The column number for the temperature for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'TBCT' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FTBCT_EVENT(m,n)`
     - 
     - The external filename for the tabular temperature for event :envvar:`m` as a function of time

       .. note:: Used when :envvar:`ITBCTC_EVENT(m,n)` :math:`\geq` 2.
     - NONE

   * - :envvar:`POBCT_EVENT(t,m,n)`
     - 0.0
     - Thermal power at time :envvar:`TIMBCT(t)` for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'POBCT' for any action :envvar:`i`.
     - [M L\ :sup:`2` t\ :sup:`-3`]

   * - :envvar:`IPOBCTC_EVENT(m,n)`
     - 0
     - The column number for the thermal power for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_BC(i,m,n)` = 'POBCT' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FPOBCT_EVENT(m,n)`
     - 
     - The external filename for the tabular thermal power for event :envvar:`m` as a function of time

       .. note:: Used when :envvar:`IPOBCTC_EVENT(m,n)` :math:`\geq` 2.
     - NONE

   * - :envvar:`IF_CONDITION_ENABLED_BC(j,m,n)`
     - 1
     - Probe condition :envvar:`j` enable/disable flag for event :envvar:`m`

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IPRBD_BC(j,m,n)`
     - 0
     - Probe id for probe condition :envvar:`j`
     - NONE

   * - :envvar:`IPRBSC_BC(j,m,n)`
     - 0
     - Scalar id for probe condition :envvar:`j`

       .. note:: Used when :envvar:`PRBVNAM_BC(j,m,n)` = 'SCSCLR'
     - NONE

   * - :envvar:`IPRBSCN_BC(j,m,n)`
     - 0
     - Additional scalar index for probe condition :envvar:`j`

       Sediment species id, when :envvar:`PRBVNAM_BC` = 'NSSPC', or
       Baffle flux surface id, when :envvar:`PRBVNAM_BC` = 'TRACERN'.
     - NONE

   * - :envvar:`PRBVNAM_BC(j,m,n)`
     - ...
     - Probe variable name for probe condition :envvar:`j`

       .. note:: Please check table :ref:`namelistXPUTTerminationControlPRBVNAM` for valid variable names and descriptions.
     - NONE

   * - :envvar:`IFPRBVABS_BC(j,m,n)`
     - 0
     - Specify if to use the absolute probe variable value for probe condition :envvar:`j`

       | =0, use the real value
       | =1, use absolute value
     - NONE

   * - :envvar:`PRBVROP_BC(j,m,n)`
     - ' '
     - Probe variable relational operator for probe condition :envvar:`j`

       | ='LT', probe condition satisfied when probe variable value is *less* than the critical value
       | ='LE', probe condition satisfied when probe variable value is *less* than or *equal* to the critical value
       | ='EQ', probe condition satisfied when probe variable value is *equal* to the critical value
       | ='NE', probe condition satisfied when probe variable value is *not equal* to the critical value
       | ='GE', probe condition satisfied when probe variable value is *greater* than or *equal* to the critical value
       | ='GT', probe condition satisfied when probe variable value is *greater* than the critical value
     - NONE

   * - :envvar:`PRBVAL_CRITICAL_BC(j,m,n)`
     - 0.0
     - Critical value for probe condition :envvar:`j`
     - NONE

   * - :envvar:`PRBDT_BC(j,m,n)`
     - 0.0
     - Duration after the critical value has reached for probe condition :envvar:`j`
     - [t]





.. index::
   pair: boundary; wave absorbing

.. index:: wave absorbing

.. _BoundaryWaveAbsorbing:

Wave Absorbing Layer
===========================================================

.. seealso:: \  :doc:`model-reference` -->  :ref:`waveAbsorbingLayerMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFTSPNGBC(n)`
     - 0
     - flag for time scale for calculation of background stream velocity

       | =0, time scale is automatically calculated
       | =1, time scale is user-prescribed

       .. note:: Used when :envvar:`ISPNGBC(n)` = 1 and :envvar:`IFVSPNGBC(n)` = 0.  
     - NONE  

   * - :envvar:`IFVSPNGBC(n)`
     - 1
     - flag for background stream velocity

       | =0, background stream velocity is calculated automatically
       | =1, background stream velocity is user-prescribed

       .. note:: Used when :envvar:`ISPNGBC(n)` = 1.       
     - NONE

   * - :envvar:`ISPNGBC(n)`
     - 0
     - flag for wave absorbing layer

       | =0, there is no wave absorbing layer
       | =1, there is a wave absorbing layer
       
       .. note:: Used when :envvar:`IBCT(n)` = 3 or 8.       
     - NONE

   * - :envvar:`C0SPNGBC(n)`
     - 0.0
     - damping coefficient at the starting side of the wave absorbing layer

       .. note:: Used when :envvar:`ISPNGBC(n)` = 1. Must be 0.0 or positive        
     - [1/t]

   * - :envvar:`C1SPNGBC(n)`
     - 1.0
     - damping coefficient at the end side of the wave absorbing layer

       .. note:: Used when :envvar:`ISPNGBC(n)` = 1. Must be 0.0 or positive        
     - [1/t]

   * - :envvar:`USPNGBC(n)`
     - 0.0
     - x-component of background stream velocity

       .. note:: Used when :envvar:`ISPNGBC(n)` = 1 and :envvar:`IFVSPNGBC(n)` = 1.      
     - [L/t]
    
   * - :envvar:`VSPNGBC(n)`
     - 0.0
     - y-component of background stream velocity

       .. note:: Used when :envvar:`ISPNGBC(n)` = 1 and :envvar:`IFVSPNGBC(n)` = 1.       
     - [L/t]
     
   * - :envvar:`WSPNGBC(n)`
     - 0.0
     - z-component of background stream velocity

       .. note:: Used when :envvar:`ISPNGBC(n)` = 1 and :envvar:`IFVSPNGBC(n)` = 1.       
     - [L/t]

   * - :envvar:`THSPNGBC(n)`
     - ...
     - wave absorbing layer length

       .. note:: Used when :envvar:`ISPNGBC(n)` = 1. Must be 0.0 or positive.     
     - [L]

   * - :envvar:`TSPNGBC(n)`
     - ...
     - time scale for calculation of background stream velocity

       .. note:: Used when :envvar:`ISPNGBC(n)` = 1, :envvar:`IFVSPNGBC(n)` = 0 and :envvar:`IFTSPNGBC(n)` = 1.       
     - [T]

.. index::
   pair: mesh namelist; MESH

.. _MeshNamelistMESH:

==========================
Mesh Namelist - MESH
==========================

.. index:: mesh generator

.. _MeshGeneratorMESH:

Mesh Generator
==============================================================

| *n* :math:`\leq` *500, boundary index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist MESH
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ICYL`
     - 0
     - Mesh coordinate type indicator

       | =0, plane coordinates (Cartesian)
       | =1, cylindrical coordinates

     - NONE

   * - :envvar:`ISWATLOC`
     - ...
     - Mesh block flow type indicator

       | =0, 3D flow type mesh block
       | =1, shallow water type mesh block

       .. note:: Defaults to 1 when :envvar:`ISWAT` =1 and :envvar:`NZCELT` =2. Defaults to 0 otherwise.

       .. seealso:: \  :envvar:`ISWAT` in :ref:`PhysicalModelOptions`.

     - NONE

   * - :envvar:`MESHNAME`
     - mesh block no. ##
     - Mesh block name (up to 256 characters)
     - NONE

.. index:: uniform mesh specification

.. _UniformMeshSpecifications:

Uniform Mesh Specifications
------------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_SIZE`
     - 1
     - Flag for the method of defining a uniform mesh

       | =0, use the total number of cells :envvar:`NTOTAL`
       | =1, use the average cell size :envvar:`SIZE`

     - NONE

   * - :envvar:`NTOTAL`
     - 0
     - Approximate total number of real cells to be generated. Used when :envvar:`IF_SIZE` = 0. :envvar:`NTOTAL` is used for directions for which a domain has been specified by :envvar:`PX`, :envvar:`PY`, and :envvar:`PZ`, but not the number of cells (:envvar:`NXCELT`, :envvar:`NYCELT`, or :envvar:`NZCELT`).

       .. seealso:: \  

          * :envvar:`PX`, :envvar:`PY`, :envvar:`PZ` in :ref:`GridPlaneLocation`.

          * :envvar:`NXCELT`, :envvar:`NYCELT`, :envvar:`NZCELT` in :ref:`NumberofCellsinSpecifiedDirections`.
     - NONE

   * - :envvar:`SIZE`
     - 0.0
     - Cell size to be approximated for a uniform mesh. Used when :envvar:`IF_SIZE` = 1. :envvar:`SIZE` is used for directions for which a domain has been specified by :envvar:`PX`, :envvar:`PY`, and/or :envvar:`PZ`, but not the number of cells (:envvar:`NXCELT`, :envvar:`NYCELT`, or :envvar:`NZCELT`).

       .. seealso:: \  

          * :envvar:`PX`, :envvar:`PY`, :envvar:`PZ` in :ref:`GridPlaneLocation`.
       
          * :envvar:`NXCELT`, :envvar:`NYCELT`, :envvar:`NZCELT` in :ref:`NumberofCellsinSpecifiedDirections`.
     - [L]

.. index:: number of cells

.. _NumberofCellsinSpecifiedDirections:

Number of Cells in Specified Directions
------------------------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NXCELT`
     - 1
     - Total number of real cells in x-direction
     - NONE

   * - :envvar:`NYCELT`
     - 1
     - Total number of real cells in y-direction
     - NONE

   * - :envvar:`NZCELT`
     - 1
     - Total number of real cells in z-direction
     - NONE

.. index:: grid plane location

.. _GridPlaneLocation:

Grid Plane Location
------------------------------------------

| *n* :math:`\leq` *200, mesh plane index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`PX(n)`
     - ...
     - nth location in x-direction for a mesh plane

       .. note:: \ :envvar:`PX(2)` defaults to :envvar:`PX(1)` + 1.0; otherwise all :envvar:`PX` s default to 0.0.
     - [L]

   * - :envvar:`PY(n)`
     - ...
     - nth location in y-direction for a mesh plane

       .. note:: \ :envvar:`PY(2)` defaults to :envvar:`PY(1)` + 1.0; otherwise all :envvar:`PY` s default to 0.0.
     - [L]

   * - :envvar:`PYA(n)`
     - ...
     - nth location angle (in degrees) in y-direction for a cylindrical coordinate mesh.

       .. note:: 

          * Used for :envvar:`ICYL` = 1 only (see :ref:`MeshGeneratorMESH`)

          * :envvar:`PYA(2)` defaults to :envvar:`PYA(1)` + 30°, otherwise all :envvar:`PYA` s default to 0.0.
     - [DEGREES]

   * - :envvar:`PZ(n)`
     - ...
     - nth location in z-direction for a mesh plane

       .. note:: \ :envvar:`PZ(2)` defaults to :envvar:`PZ(1)` + 1.0; otherwise all :envvar:`PZ` s default to 0.0.
     - [L]


.. _GridLocationSpecifications:

Grid Location Specifications
------------------------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NXCELL(n)`
     - ...
     - Number of cells between :envvar:`PX(n)` and :envvar:`PX(n+1)`
     - NONE

   * - :envvar:`NYCELL(n)`
     - ...
     - Number of cells between :envvar:`PY(n)` and :envvar:`PY(n+1)`
     - NONE

   * - :envvar:`NZCELL(n)`
     - ...
     - Number of cells between :envvar:`PZ(n)` and :envvar:`PZ(n+1)`
     - NONE

   * - :envvar:`SIZEX(n)`
     - ...
     - Size of mesh cells at :envvar:`PX(n)` in x-direction.
     - [L]

   * - :envvar:`SIZEY(n)`
     - ...
     - Size of mesh cells at :envvar:`PY(n)` in y-direction.
     - [L]

   * - :envvar:`SIZEYA(n)`
     - ...
     - Size of mesh cells in degrees at :envvar:`PY(n)` in y-direction for a cylindrical coordinate mesh.

       .. note:: Used for :envvar:`ICYL` = 1 only (see :ref:`MeshGeneratorMESH`)
     - [DEGREES]

   * - :envvar:`SIZEZ(n)`
     - ...
     - Size of mesh cells at :envvar:`PZ(n)` in z-direction.
     - [L]

.. index:: partially overlapping meshes

.. _PartiallyOverlappingMeshes:

Partially Overlapping Mesh Specifications
--------------------------------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`MESH_RANK`
     - 0
     - Mesh rank for partially overlapping mesh blocks. When two mesh blocks
       overlap partially, the governing equations in the common area are solved on the mesh having
       a lower value of :envvar:`MESH_RANK`. If :envvar:`MESH_RANK` is not specified
       explicitly by the user for all mesh blocks, then the ranking is
       automatically decided based on average cell sizes in all mesh blocks. The
       smaller the average cell size in a mesh block, the lower it's value of
       :envvar:`MESH_RANK`.
     - NONE

.. index::
   pair: component setup; OBS

.. index:: conforming meshes

.. _ConformingMeshes:

Conforming Mesh Specifications
--------------------------------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_MESH_ENABLED`
     - 1
     - Activation flag for mesh block

       | =0, mesh block disabled
       | =1, mesh block enabled
     - NONE 

   * - :envvar:`MESH_TYPE`
     - 0
     - Mesh block shape type

       | =0, standard, non-conforming
       | =1, conforms to all open space
       | =2, conforms to blocked regions
       | =3, conform to meshing component defined with :envvar:`MESH_COMP` (see below)   
       | =4, conforms to cavity only (cooling channels are excluded)
       | =5, conforms to cooling channels only                  
     - NONE

   * - :envvar:`MESH_COMP`
     - 0
     - Meshing component number that mesh block conforms to. Used when :envvar:`MESH_TYPE` = 3.     
     - NONE

   * - :envvar:`OVERLAP`
     - ...
     - The extent of the overlap (in terms of length) of a conforming block into
       the surrounding regions, e.g., of a cavity-conforming block into solid
       or of a solid-conforming block into open volume.

       The :envvar:`OVERLAP` defaults to 6 times the average cell size of the conforming block.
     - [L]

   * - :envvar:`ICMBOBS(n)`
     - 1
     - Specifies whether the mesh should conform to component :envvar:`N`

       | =0, solid-conforming mesh does not conform to component :envvar:`N`
       | =1, solid-conforming mesh conforms to component :envvar:`N`
     - NONE

.. index::
   pair: component setup; OBS

.. _ComponentSetupOBS:

=================================
Component Setup Namelist -  OBS
=================================

.. index::
   single: components; general parameters

.. _ComponentGeneralParameters:

Component: General Parameters
==============================================================

| *m* :math:`\leq` *500, component index*
| *n* :math:`\leq` *500, subcomponent index* 

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IAVRCK`
     - 1
     - FAVOR |TM| volume adjustment for stability with larger time-step limit (see :envvar:`AVRCK`)

       | =0, no adjustment
       | =1, maximum adjustment for maximum time-step limit
       | =2, smaller adjustment for improved time-step limit
       | =3, no adjustment, adveciton in sliver cells is approximated implicitly.
     - NONE

   * - :envvar:`AVRCK`
     - 3.1
     - Cell volume fractions are adjusted in so-called *sliver* cells so that the area/volume fraction ratios do not exceed this value. 
       The adjustment is made when :envvar:`AVRCK` = 1 or 2. The adjusted cells are listed in pre-processor summary output.
       When :envvar:`AVRCK` = 3, the convective fluxes in sliver cells are treated implicitly to avoid reducing the time step size.

       (This option allows larger fluid convective time steps for certain situations.)
     - NON-DIM

   * - :envvar:`TOLERANCE_GAP`
     - 0.0
     - Gap size tolerance. Gaps that are smaller than the tolerance will be closed.
     - [L]

   * - :envvar:`TOLERANCE_SKIN`
     - 0.0
     - Skin size tolerance. Skins that are smaller than the tolerance will be converted to the base component which they
       cover.

       .. note:: It is not compatible with cores/liners in thermal die cycling simulations.
     - [L]

   * - :envvar:`CCOLOR(m)`
     - 0
     - Component :envvar:`m` RGB color value for display in the Graphical User Interface
     - NONE

   * - :envvar:`IFCOMPENABLED(m)`
     - 1
     - Activation flag for component :envvar:`m`

       | =0, component disabled
       | =1, component enabled
     - NONE

   * - :envvar:`IFRCO(m)`
     - 0
     - Flag for force and torque output for component :envvar:`m` 

       | =0, do not evaluate and output force and torque on component :envvar:`m`
       | =1, evaluate and output force and torque on component :envvar:`m`
     - NONE

   * - :envvar:`IFWETAR(m)`
     - 0
     - Flag for wetted area output for component :envvar:`m`

       | =0, no wetted area output
       | =1, component surface area wetted by fluid #1 is computed and output to General History data catalogue
     - NONE

   * - :envvar:`IFOB(m)`
     - 0
     - "Free" (or phantom) component flag

       | =-2, core gas component
       | =-1, porous component
       | = 0, regular component
       | = 1, lost foam component
       | = 2, fan/impeller component
       | = 3, sediment scour component
       | = 4, specified velocity phantom component for continuous casting
       | = 5, domain removing component
       | = 6, flow vent component
       | = 7, FEA domain removing component
       | = 8, sampling volume component
       | = 9, surface roughness component providing roughness height or Manning's roughness coefficien (:ref:`surfaceroughnesscomptype` component type)
       | = 10, wave absorbing component
       | = 11, meshing component       

       .. note:: For :envvar:`IFOB` :math:`>` 0, components do not contribute to area and volume blockages, so the component will **not** be visible in component plots, except for the :envvar:`IFOB(m)` = 5 type.
     - NONE

   * - :envvar:`IPREF(m)`
     - 1
     - Flag for reference pressure for component :envvar:`m` 

       | =1, reference pressure is user-prescribed as :envvar:`PREFMBW(m)`
       | =2, reference pressure is calculated using the average pressure on the exposed surface of the component
     - NONE

   * - :envvar:`IMO(m)`
     - 0
     - Type of component :envvar:`m`

       | = 0, stationary component
       | = 2, moving web / sliding motion component; the component surface tangential velocity is specified in :file:`velobs.f` by :envvar:`UTOBS`, :envvar:`VTOBS`, and :envvar:`WTOBS`.  
       | = 3, prescribed-motion of general moving object
       | = 4, coupled-motion of general moving object

       .. note:: 
          * :envvar:`IMOBS` = 1 must be set in :ref:`PhysicalModelOptions` when :envvar:`IMO` = 2, = 3, or = 4.
     - NONE

   * - :envvar:`MATERIAL(m)`
     - " "
     - Character string allowing user to identify the material of component :envvar:`m` (up to 256 characters).
     - 

   * - :envvar:`NOBR(m)`
     - :envvar:`m`
     - Component identifier for restarts; used to identify the old component number if components have been changed for restart runs.

       =0, for a newly added component

       .. note:: Defaults to the current component number.
     - NONE

   * - :envvar:`NOBS`
     - 0
     - Number of components
     - NONE

   * - :envvar:`OBSID(m)`
     - " "
     - Character string allowing user to identify component :envvar:`m` (up to 30 characters)
     - NONE

   * - :envvar:`PREFMBW(m)`
     - :envvar:`PVOID`
     - Reference pressure

       .. seealso:: \  :envvar:`PVOID` in :ref:`InitialConditionsUniform`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`SUBCMPID(n)`
     - " "
     - Character string allowing user to identify subcomponent :envvar:`n` (up to 50 characters)
     - NONE

   * - :envvar:`XFRCO(m)`
     - 0.0
     - x coordinate of the reference point for torque evaluation for component :envvar:`m`
     - [L]

   * - :envvar:`YFRCO(m)`
     - 0.0
     - y coordinate of the reference point for torque evaluation for component :envvar:`m`
     - [L]

   * - :envvar:`ZFRCO(m)`
     - 0.0
     - z coordinate of the reference point for torque evaluation for component :envvar:`m`
     - [L]

.. index::
   single: subcomponents; general parameters

.. _SubcomponentGeneralParameters:

Subcomponents: General Parameters
==============================================================

| *m* :math:`\leq` *500, component index*
| *n* :math:`\leq` *500, subcomponent index* 

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IGEN(n)`
     - 0
     - Subcomponent generation flag, indicates source of geometric data for region :envvar:`n`

       | =0, |prod| component generator
       | =1, not used
       | =2, not used
       | =3, stereolithography (STL) CAD data file
       | =5, raster data file format (.asc): topographic terrain or roughness data

     - NONE

   * - :envvar:`IFSUBCOMPENABLED(n)`
     - 1
     - Activation flag for subcomponent :envvar:`n`

       | =0, subcomponent disabled
       | =1, subcomponent enabled
     - NONE

   * - :envvar:`IOB(n)`
     - 0
     - Associates subcomponent :envvar:`n` with a particular component

       .. note:: Usage: :envvar:`IOB(n)` = :envvar:`m`; region :envvar:`n` is part of component :envvar:`m`.
     - NONE

   * - :envvar:`IOH(n)`
     - 1
     - Subcomponent type

       | =0, hole
       | =1, solid
       | =-1, complement (CAD data and FAVOR |TM| data file only).
     - NONE

   * - :envvar:`FSTL(n)`
     - :file:`stlfnn.inp`
     - File name for stereolithography (STL) CAD data file, where "nn "= n.

       .. note:: Relevant only for :envvar:`IGEN(n)` = 3.
     - NONE

   * - :envvar:`FTOPO(n)`
     - :file:`topofnn.inp`
     - File name for raster file format data file, where "nn "= n.

       .. note:: Relevant only for :envvar:`IGEN(n)` = 5.
     - NONE

.. index::
   single: subcomponents; limiters

.. _SubcomponentsLimiters:

Subcomponents: Limiters
==============================================================

| *n* :math:`\leq` *500, subcomponent index*

.. note:: 

   * All subcomponents and functions are defined in terms of Cartesian coordinates irrespective of the mesh coordinate system.

   * All subcomponent limiter defaults include the entire mesh. 

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ANGLH(n)`
     - ...
     - Upper cylindrical angle limit for subcomponent :envvar:`n` (measured in the x-y plane from the x-axis, in degrees).
     - [DEGREES]

   * - :envvar:`ANGLL(n)`
     - ...
     - Lower cylindrical angle limit for subcomponent :envvar:`n` (measured in the x-y plane from the x-axis, in degrees).
     - [DEGREES]

   * - :envvar:`CONEH(n)`
     - ...
     - Upper conical angle limit for subcomponent :envvar:`n` (measured from the z-axis in degrees).
     - [DEGREES]

   * - :envvar:`CONEL(n)`
     - ...
     - Lower conical angle limit for subcomponent :envvar:`n` (measured from the z-axis in degrees).
     - [DEGREES]

   * - :envvar:`RAH(n)`
     - ...
     - Upper cylindrical-radius limit for subcomponent :envvar:`n`
     - [L]

   * - :envvar:`RAL(n)`
     - ...
     - Lower cylindrical-radius limit for subcomponent :envvar:`n`
     - [L]

   * - :envvar:`RSH(n)`
     - ...
     - Upper spherical-radius limit for subcomponent :envvar:`n`
     - [L]

   * - :envvar:`RSL(n)`
     - ...
     - Lower spherical-radius limit for subcomponent :envvar:`n`
     - [L]

   * - :envvar:`RTORIN(n)`
     - -1.0
     - Minor toroid radius
     - [L]

   * - :envvar:`RTOROUT(n)`
     - -1.0
     - Major toroid radius
     - [L]

   * - :envvar:`XH(n)`
     - ...
     - Upper x-coordinate limit for subcomponent :envvar:`n`
     - [L]

   * - :envvar:`XL(n)`
     - ...
     - Lower x-coordinate limit for subcomponent :envvar:`n`
     - [L]

   * - :envvar:`YL(n)`
     - ...
     - Lower y-coordinate limit for subcomponent :envvar:`n`
     - [L]

   * - :envvar:`ZH(n)`
     - ...
     - Upper z-coordinate limit for subcomponent :envvar:`n`
     - [L]

   * - :envvar:`ZL(n)`
     - ...
     - Lower z-coordinate limit for subcomponent :envvar:`n`
     - [L]

   * - :envvar:`NODATRPLC(n)`
     - ...
     - Elevation to replace *NODAT* value from raster format data files for subcomponent :envvar:`n`.

       .. note:: Used only for raster format data files (\ :envvar:`IGEN(n)` = 5)
     - [L]

.. _SubcomponentsFunctionCoefficients:

Subcomponents: Function Coefficients
==============================================================

| *n* :math:`\leq` *500, subcomponent index*

.. note:: All subcomponents and functions are defined in terms of Cartesian coordinates irrespective of the mesh coordinate system. The function has the format:

          :envvar:`CC(n)` + :envvar:`CX(n)`\ :math:`x` + :envvar:`CY(n)`\ :math:`y` + :envvar:`CZ(n)`\ :math:`z` + :envvar:`CXY(n)`\ :math:`xy` + :envvar:`CXZ(n)`\ :math:`xz` + :envvar:`CYZ(n)`\ :math:`yz` + :envvar:`CX2(n)`\ :math:`x^2` + :envvar:`CY2(n)`\ :math:`y^2` + :envvar:`CZ2(n)`\ :math:`z^2` + :envvar:`CRXY(n)`\ :math:`\sqrt{x^2 + y^2} \le` \ 0

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CC(n)`
     - -0.1
     - Function constant coefficient for subcomponent :envvar:`n`
     - NON-DIM

   * - :envvar:`CX(n)`
     - 0.0
     - Function coefficient of :math:`x` for subcomponent :envvar:`n`
     - [1/L]

   * - :envvar:`CY(n)`
     - 0.0
     - Function coefficient of :math:`y` for subcomponent :envvar:`n`
     - [1/L]

   * - :envvar:`CZ(n)`
     - 0.0
     - Function coefficient of :math:`z` for subcomponent :envvar:`n`
     - [1/L]

   * - :envvar:`CXY(n)`
     - 0.0
     - Function coefficient of :math:`xy` for subcomponent :envvar:`n`
     - [1/L\ :sup:`2`]

   * - :envvar:`CXZ(n)`
     - 0.0
     - Function coefficient of :math:`xz` for subcomponent :envvar:`n`
     - [1/L\ :sup:`2`]

   * - :envvar:`CYZ(n)`
     - 0.0
     - Function coefficient of :math:`yz` for subcomponent :envvar:`n`
     - [1/L\ :sup:`2`]

   * - :envvar:`CX2(n)`
     - 0.0
     - Function coefficient of :math:`x^2` for subcomponent :envvar:`n`
     - [1/L\ :sup:`2`]

   * - :envvar:`CY2(n)`
     - 0.0
     - Function coefficient of :math:`y^2` for subcomponent :envvar:`n`
     - [1/L\ :sup:`2`]

   * - :envvar:`CZ2(n)`
     - 0.0
     - Function coefficient of :math:`z^2` for subcomponent :envvar:`n`
     - [1/L\ :sup:`2`]

   * - :envvar:`CRXY(n)`
     - 0.0
     - Function coefficient of :math:`\sqrt{x^2 + y^2}` for subcomponent :envvar:`n`
     - [1/L]

   * - :envvar:`CDUM(n)`
     - 0.0
     - Dummy function coefficient for subcomponent :envvar:`n` for customizing functions.

       .. note:: Used only for customized code, and represents coefficient of user-defined additional term in equation above. The routine :file:`fcn0.F90` is used to modify :envvar:`cdum` (subcomponent regions), :envvar:`fcdum` (fluid regions), and :envvar:`bcdum` (baffle regions). See :doc:`customization` for more information.
     - VARIES

.. index::
   single: subcomponents; transformations

.. index:: transformations

.. _SubcomponentsTransformations:

Subcomponents: Transformations
==============================================================

| *n* :math:`\leq` *500, subcomponent index*

.. note:: 

   * All subcomponents and functions are defined in terms of Cartesian coordinates irrespective of the mesh coordinate system.

   * Magnifications are performed before rotations, which are performed before reflections, which are performed before translations.

   * X-rotations are performed before y-rotations, which are performed before z-rotations. 

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`MAGN(n)`
     - 1.0
     - Magnification (scaling) factor for subcomponent :envvar:`n`
     - NON-DIM

   * - :envvar:`MAGNX(n)`
     - 1.0
     - Scaling factor in x-direction for subcomponent :envvar:`n`
     - NON-DIM

   * - :envvar:`MAGNY(n)`
     - 1.0
     - Scaling factor in y-direction for subcomponent :envvar:`n`
     - NON-DIM

   * - :envvar:`MAGNZ(n)`
     - 1.0
     - Scaling factor in z-direction for subcomponent :envvar:`n`
     - NON-DIM

   * - :envvar:`ROTX(n)`
     - 0°
     - Subcomponent :envvar:`n` rotation about x-axis in degrees, positive in right hand sense

       .. note:: **Not** valid for raster data file type subcomponents (\ :envvar:`IGEN(n)` = 5)
     - [DEGREES]

   * - :envvar:`ROTY(n)`
     - 0°
     - Subcomponent :envvar:`n` rotation about y-axis in degrees

       .. note:: **Not** valid for raster data file type subcomponents (\ :envvar:`IGEN(n)` = 5)
     - [DEGREES]

   * - :envvar:`ROTZ(n)`
     - 0°
     - Subcomponent :envvar:`n` rotation about z-axis in degrees
     - [DEGREES]

   * - :envvar:`TRNX(n)`
     - 0.0
     - Subcomponent :envvar:`n` translation in x-direction
     - [L]

   * - :envvar:`TRNY(n)`
     - 0.0
     - Subcomponent :envvar:`n` translation in y-direction
     - [L]

   * - :envvar:`TRNZ(n)`
     - 0.0
     - Subcomponent :envvar:`n` translation in z-direction
     - [L]

   * - :envvar:`XTRFC(n)`
     - 0.0
     - x-coordinate of transformation center for subcomponent :envvar:`n`

       .. note:: Magnification and rotation are made about the transformation center.
     - [L]

   * - :envvar:`YTRFC(n)`
     - 0.0
     - y-coordinate of transformation center for subcomponent :envvar:`n`

       .. note:: Magnification and rotation are made about the transformation center.
     - [L]

   * - :envvar:`ZTRFC(n)`
     - 0.0
     - z-coordinate of transformation center for subcomponent :envvar:`n`

       .. note:: Magnification and rotation are made about the transformation center.
     - [L]

.. index::
   single: subcomponents; cooling channels

.. index:: cooling channels

.. _SubcomponentsCoolingChannel:

Subcomponents: Cooling Channel
==============================================================

| *m* :math:`\leq` *500, component index*
| *n* :math:`\leq` *500, subcomponent index* 
| *t* :math:`\leq` *500, time index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`coolingChannelsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IVR(n)`
     - 0
     - Cooling channel activation flag for subcomponent :envvar:`n`

       | =0, subcomponent :envvar:`n` is not a cooling channel
       | =1, subcomponent :envvar:`n` defines a cooling channel
     - NONE

   * - :envvar:`CCTIME(t,n)`
     - 0.0
     - Time table for the time dependent properties of the cooling channel
     - [t]

   * - :envvar:`CCTEMP(t,n)`
     - ...
     - Temperature of the cooling channel between time :envvar:`CCTIME(t,n)` and :envvar:`CCTIME(t+1,n)`

       | Defaults to 25 when :envvar:`TUNITS` ="c"
       | Defaults to 298 when :envvar:`TUNITS` ="k"
       | Defaults to 77 when :envvar:`TUNITS` ="f"
       | Defaults to 536.7 when :envvar:`TUNITS` ="r"

       .. seealso:: \  :envvar:`TUNITS` in :ref:`namelistPROPSFluidNamesandUnitsIdentifiers`.
     - [T]

   * - :envvar:`FCCTEMP(n)`
     - 
     - The external filename for tabular temperature of the cooling channel subcomponent :envvar:`n` as a function of time (used only if :envvar:`ICCTEMPC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ICCTEMPC(n)`
     - 0
     - The column number for temperature of the cooling channel subcomponent :envvar:`n` in the external file
     - NONE

   * - :envvar:`HCCT(t,n)`
     - 0.0
     - Heat transfer coefficient between the cooling channel subcomponent :envvar:`n` and its component :envvar:`m` between time :envvar:`CCTIME(t,n)` and :envvar:`CCTIME(t+1,n)`
     - [M t :sup:`-3` T :sup:`-1` ]

   * - :envvar:`FHCCT(n)`
     - 
     - The external filename for tabular heat transfer coefficient between the cooling channel subcomponent :envvar:`n` and its component :envvar:`m` as a function of time (used only if :envvar:`IHCCTC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IHCCTC(n)`
     - 0
     - The column number for heat transfer coefficient between the cooling channel subcomponent :envvar:`n` and its component :envvar:`m` in the external file
     - NONE

   * - :envvar:`ICCCONTROL(n)`
     - 1
     - On/off control mode for the cooling channel

       | =0, always off
       | =1, always on
       | =2, controlled by status table :envvar:`ICCTIME(t,n)`
       | =3, controlled by thermocouple, cooling mode
       | =4, controlled by thermocouple, heating mode
       | =5, controlled by total heat removed, cooling mode
       | =6, controlled by total heat added, heating mode
     - NONE

   * - :envvar:`ICCTIME(t,n)`
     - 1
     - On/off status for the cooling channel

       | =0, off between time :envvar:`CCTIME(t,n)` and :envvar:`CCTIME(t+1,n)`
       | =1, on between time :envvar:`CCTIME(t,n)` and :envvar:`CCTIME(t+1,n)`
     - NONE

   * - :envvar:`FICCTIME(n)`
     - 
     - The external filename for tabular on/off status for the cooling channel subcomponent :envvar:`n` as a function of time (used only if :envvar:`ICCTIME(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IICCTIMEC(n)`
     - 0
     - The column number for on/off status for the cooling channel subcomponent :envvar:`n` in the external file
     - NONE

   * - :envvar:`ICCPRB(n)`
     - 0
     - Probe number controlling the on/off status of the cooling channel
     - NONE

   * - :envvar:`CCTC1(n)`
     - ...
     - Turn-on temperature at probe :envvar:`ICCPRB(n)` for the cooling channel

       | :envvar:`CCTC1(n)` :math:`>` :envvar:`CCTC2(n)` when :envvar:`ICCCONTROL(n)=3`
       | :envvar:`CCTC1(n)` :math:`<` :envvar:`CCTC2(n)` when :envvar:`ICCCONTROL(n)=4`
     - [T]

   * - :envvar:`CCTC2(n)`
     - ...
     - Turn-off temperature at probe :envvar:`ICCPRB(n)` for the cooling channel

       | :envvar:`CCTC1(n)` :math:`>` :envvar:`CCTC2(n)` when :envvar:`ICCCONTROL(n)=3`
       | :envvar:`CCTC1(n)` :math:`<` :envvar:`CCTC2(n)` when :envvar:`ICCCONTROL(n)=4`
     - [T]

   * - :envvar:`CCHEAT(n)`
     - ...
     - Critical total heat to turn off the cooling channel

       | used only if :envvar:`ICCCONTROL(n)=5` or :envvar:`ICCCONTROL(n)=6`
     - [M L\ :sup:`2` t\ :sup:`-2`]


.. index::
   single: component; transformations

.. _ComponentTransformationsParameters:

Component Transformations: Parameters
==============================================================

| *m* :math:`\leq` *500, component index*

.. note:: 

   * Transformation of a component is applied to the whole component after the subcomponent transformations are performed.

   * Magnifications are performed before rotations, which are performed before reflections, which are performed before translations. 

   * x rotations are performed before y rotations, which are performed before z rotations.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IGTRFMVB(m)`
     - 0
     - Flag to apply component transformations to the body-fixed coordinate system for GMO component :envvar:`m`. 
       This affects component properties and output computed in the body system such mass properties, forces, force application points, 
       torque, linear and angular velocities, GMO reference point, and rotational axis location.    

       | =0, do not apply component transformations to the body-fixed coordinate system
       | =1, apply component transformations to the body-fixed coordinate system
     - NONE

   * - :envvar:`GMAGN(m)`
     - 1.0
     - Magnification (scaling) factor for component :envvar:`m`
     - NONE

   * - :envvar:`GROTX(m)`
     - 0.0
     - Rotation of component :envvar:`m` about x-axis, positive in right hand
     - [Degrees]

   * - :envvar:`GROTY(m)`
     - 0.0
     - Rotation of component :envvar:`m` about y-axis, positive in right hand
     - [Degrees]

   * - :envvar:`GROTZ(m)`
     - 0.0
     - Rotation of component :envvar:`m` about z-axis, positive in right hand
     - [Degrees]

   * - :envvar:`GTRNX(m)`
     - 0.0
     - Translation of component :envvar:`m` in x-direction
     - [L]

   * - :envvar:`GTRNY(m)`
     - 0.0
     - Translation of component :envvar:`m` in y-direction
     - [L]

   * - :envvar:`GTRNZ(m)`
     - 0.0
     - Translation of component :envvar:`m` in z-direction
     - [L]

   * - :envvar:`GXTRFC(m)`
     - 0.0
     - x-coordinate of transformation center for component :envvar:`m`

       .. note:: Magnification and rotation are made about the transformation center.
     - [L]


   * - :envvar:`GYTRFC(m)`
     - 0.0
     - y-coordinate of transformation center for component :envvar:`m`

       .. note:: Magnification and rotation are made about the transformation center.
     - [L]


   * - :envvar:`GZTRFC(m)`
     - 0.0
     - z-coordinate of transformation center for component :envvar:`m`

       .. note:: Magnification and rotation are made about the transformation center.
     - [L]


.. index::
   single: component copy; parameters

.. _ComponentCopyParameters:

Component Copy: Parameters
==============================================================

| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *500, copy index*
| *m* :math:`\leq` *500, component index*

.. note:: 

   * All subcomponents and functions are defined in terms of Cartesian coordinates irrespective of the mesh coordinate system.

   * Magnifications are performed before rotations, which are performed before reflections, which are performed before translations. 

   * X rotations are performed before y rotations, which are performed before z rotations.

   * CAD data cannot be copied.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IVRT(m)`
     - 0
     - Virtual component flag for component :envvar:`m`

       | =0, construct component
       | =1, use defined subcomponents only as template for making copies. Do not construct component as defined by subcomponents.
     - NONE

   * - :envvar:`ICPY(n)`
     - 0
     - Number for component that is template for copy :envvar:`n`

       Usage: :envvar:`ICPY(n)` = :envvar:`m`; copy :envvar:`n` uses the subcomponents defined for component :envvar:`m`.
     - NONE

   * - :envvar:`CMAGN(n)`
     - 1.0
     - Magnification (scaling) factor for component copy :envvar:`n`
     - NON-DIM

   * - :envvar:`CMAGNX(n)`
     - 1.0
     - Scaling factor in x-direction for component copy :envvar:`n`
     - NON-DIM

   * - :envvar:`CMAGNY(n)`
     - 1.0
     - Scaling factor in y-direction for component copy :envvar:`n`
     - NON-DIM

   * - :envvar:`CMAGNZ(n)`
     - 1.0
     - Scaling factor in z-direction for component copy :envvar:`n`
     - NON-DIM

   * - :envvar:`CRFLX(n)`
     - ...
     - Component copy :envvar:`n` x-reflection location.

       .. note:: Defaults outside mesh for no reflection.
     - [L]

   * - :envvar:`CRFLY(n)`
     - ...
     - Component copy :envvar:`n` y-reflection location.

       .. note:: Defaults outside mesh for no reflection.
     - [L]

   * - :envvar:`CRFLZ(n)`
     - ...
     - Component copy :envvar:`n` z-reflection location.

       .. note:: Defaults outside mesh for no reflection.
     - [L]

   * - :envvar:`CROTX(n)`
     - 0°
     - Component copy :envvar:`n` rotation about x-axis in degrees, positive in right-hand sense. 
     - (DEGREES

   * - :envvar:`CROTY(n)`
     - 0°
     - Component copy :envvar:`n` rotation about y-axis (degrees)
     - DEGREES

   * - :envvar:`CROTZ(n)`
     - 0°
     - Component copy :envvar:`n` rotation about z-axis (degrees)
     - DEGREES

   * - :envvar:`CTRNX(n)`
     - 0.0
     - Component copy :envvar:`n` translation in x-direction
     - [L]

   * - :envvar:`CTRNY(n)`
     - 0.0
     - Component copy :envvar:`n` translation in y-direction
     - [L]

   * - :envvar:`CTRNZ(n)`
     - 0.0
     - Component copy :envvar:`n` translation in z-direction
     - [L]

.. index::
   single: component copy; contact angle and roughness

.. index:: contact angle, roughness

.. _ComponentPropertiesContactAngleandRoughness:

Component Properties: Contact Angle and Roughness
==============================================================

| *m* :math:`\leq` *500, component index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`DFCWE(m)`
     - 0.0
     - Rate at which solid material is eroded at mold walls (scalar specified by :envvar:`IDFCWE`).
     - NON-DIM     

   * - :envvar:`OCANG(m)`
     - :envvar:`CANGLE`
     - Static contact angle (in degrees) for fluid #1 wall adhesion for component :envvar:`m`. (:envvar:`CANGLE` is set in namelist :envvar:`PROPS`).

       0 :math:`<` :envvar:`OCANG` :math:`<` 90 indicates wetting condition

       90 :math:`<` :envvar:`OCANG` :math:`<` 180 indicates non-wetting condition

       .. seealso:: \  :envvar:`CANGSUB(n)` below.
     - [DEGREES]

   * - :envvar:`CANGSUB(n)`
     - :envvar:`OCANG(m)`
     - Static contact angle (in degrees) for fluid #1 wall adhesion for subcomponent :envvar:`n` of component :envvar:`m`

       0 :math:`<` :envvar:`CANGSUB` :math:`<` 90 indicates wetting condition

       90 :math:`<` :envvar:`CANGSUB` :math:`<` 180 indicates non-wetting condition
     - [DEGREES]    

   * - :envvar:`IF_COMP_PIN(m)`
     - 0
     - Flag to control the pinning of fluid interface contact line to the surface of component :envvar:`m`:

       | =0, fluid interface contact line is not pinned to the surface of the component and is controlled by the static contact angle :envvar:`OCANG(m)` or :envvar:`CANGSUB(n)`
       | =1, fluid interface contact line is pinned to the surface of the component
               
     - NONE  

   * - :envvar:`IF_SUB_PIN(n)`
     - :envvar:`IF_COMP_PIN(m)`
     - Flag to control the pinning of fluid interface contact line to the surface of subcomponent :envvar:`n` of component :envvar:`m`:

       | =0, fluid interface contact line is not pinned to the surface of the subcomponent and is controlled by the static contact angle :envvar:`OCANG(m)` or :envvar:`CANGSUB(n)`
       | =1, fluid interface contact line is pinned to the surface of the subcomponent
               
     - NONE          

   * - :envvar:`OFRCOF(m)`
     - -1.0
     - Coefficient of friction between fluid and solid walls for the partial slip model for component :envvar:`m`. A zero value corresponds to free slip and an infinite value to no-slip. A negative value turns off the partial slip model. 

       .. seealso:: \  :envvar:`FRCOF` in :ref:`WallShearProperties`.
     - [M L\ :sup:`-2` t\ :sup:`-1`]

   * - :envvar:`IROUGHUSE(m)`
     - 0
     - Flag to control roughness data to use for surface of component :envvar:`m`:

       | =0, use :envvar:`ROUGH(m)` or :envvar:`ROUGHSUB(m)` and ignore tabular roughness data read in via raster file input.
       | =1, use raster file input, as specified by special phantom component option :envvar:`IFOB(m)=9` (see :ref:`ComponentGeneralParameters`.) If no roughness component specified, or outside of domain specified by phantom component, :envvar:`ROUGH(m)` or :envvar:`ROUGHSUB(m)` are used.
       
       .. seealso:: \  

          * :envvar:`IFOB` in :ref:`ComponentGeneralParameters`.

          * :envvar:`IGEN` in :ref:`SubcomponentGeneralParameters`.

          * :envvar:`FTOPO` in :ref:`SubcomponentGeneralParameters`.

       .. seealso:: \  :envvar:`ROUGH(m)` and :envvar:`ROUGHSUB(n)` below.          
     - NONE

   * - :envvar:`ROUGH(m)`
     - ...
     - Wall roughness for component :envvar:`m` for wall shear stress calculations. A roughness of 0.0 corresponds to a smooth surface. :envvar:`ROUGH` < 0 
       indicates free-slip surfaces for component :envvar:`m`. A positive value of :envvar:`ROUGH` should correspond to the average height of surface imperfections 
       like bumps and pits. A positive value of :envvar:`ROUGH` also induces a) boiling in one- and two-fluid phase change models (:envvar:`IPHCHG` = 2 or 5), 
       irrespective of the value of the superheat temperature :envvar:`TV0` and b) condensation in two-fluid phase change models (:envvar:`IPHCHG` = 2), irrespective of the value of the supercooling temperature :envvar:`TC0`.

       .. note:: For lost foam components with gravity effects (:envvar:`CGFOB` :math:`>` 0.0), :envvar:`ROUGH` defaults to 0.1 m for all foam components, converted to simulation units. Otherwise, defaults to 0.0.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`.

          * :envvar:`CGFOB` in :ref:`HeatTransferOptionsIVS`.

          * :envvar:`TV0` in :ref:`PhaseChangeProperties`.

       .. seealso:: \  :envvar:`ROUGHSUB(n)` below.          
     - [L]

   * - :envvar:`ROUGHSUB(n)`
     - :envvar:`ROUGH(m)`
     - Wall roughness for subcomponent :envvar:`n` for wall shear stress calculations. A roughness of 0.0 corresponds to a smooth surface. :envvar:`ROUGHSUB` < 0 
       indicates free-slip surfaces for subcomponent :envvar:`n`. A positive value of :envvar:`ROUGHSUB` should correspond to the average height of surface imperfections 
       like bumps and pits. A positive value of :envvar:`ROUGHSUB` also induces a) boiling in one- and two-fluid phase change models (:envvar:`IPHCHG` = 2 or 5), 
       irrespective of the value of the superheat temperature :envvar:`TV0` and b) condensation in two-fluid phase change models (:envvar:`IPHCHG` = 2), irrespective of the value of the supercooling temperature :envvar:`TC0`.

       .. seealso:: \  

          * :envvar:`IPHCHG` in :ref:`PhysicalModelOptions`.

          * :envvar:`CGFOB` in :ref:`HeatTransferOptionsIVS`.

          * :envvar:`TV0` and :envvar:`TC0` in :ref:`PhaseChangeProperties`.
     - [L]    

.. index::
   single: component properties; electrostatic and electroosmotic potential
   single: component properties; Joule heating

.. index:: Joule heating, electrostatic, electroosmotive

.. _ComponentPropertiesElectrostaticandElectroosmoticPotentialJouleHeating:

Component Properties: Electrostatic and Electroosmotic Potential, Joule Heating
===============================================================================

| *m* :math:`\leq` *500, component index*
| *t* :math:`\leq` *500, time index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`electricFieldsMR` and :ref:`electroOsmosisMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IOEPOTM(m)`
     - 0
     - Type of electric field mode for component :envvar:`n`

       | =0, specified potential
       | =1, dielectric
     - NONE

   * - :envvar:`OEPOT(t,m)`
     - 0.0
     - Electrostatic potential of component :envvar:`m` at time :envvar:`TOBS(t)`.

       .. note:: Used when :envvar:`IOEPOTM(m)` = 0.
     - [M L\ :sup:`2` Q\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`FOEPOT(m)`
     - 
     - The external filename for tabular electrostatic potential of component :envvar:`m` as a function of time (used only if :envvar:`IOEPOTC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IOEPOTC(m)`
     - 0
     - The column number for electrostatic potential of component :envvar:`m` in the external file

       .. note:: Used when :envvar:`IOEPOTM(m)` = 0.
     - NONE

   * - :envvar:`OEPOTZT(m)`
     - 0.0
     - Zeta potential of component :envvar:`m`
     - [M L\ :sup:`2` Q\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`ODIEL(m)`
     - 1.0
     - Dielectric constant (relative permittivity) for component :envvar:`m`.

       Used when :envvar:`IOEPOTM(m)` = 1.

     - NON-DIM

   * - :envvar:`OECOND(m)`
     - 0.0
     - Electric conductivity for component :envvar:`m`
     - [Q\ :sup:`2` t M\ :sup:`-1` L\ :sup:`-3`]

   * - :envvar:`OECHRG(m)`
     - 0.0
     - Initial uniform electric charge density in component :envvar:`m`
     - [Q/L\ :sup:`3`]

.. index::
   single: component properties; heat transfer coefficients

.. index:: heat transfer coefficients

.. _ComponentPropertiesHeatTransferCoefficients:

Component Properties: Heat Transfer Coefficients
=====================================================

| *m* :math:`\leq` *500, component index*
| *t* :math:`\leq` *500, time index*

.. note:: 

   * All parameters in this section require activation of the heat transfer model (\ :envvar:`IHTC` :math:`=` 1); see :ref:`PhysicalModelOptions`.

   * Radiation is not allowed with porous components. 

   * For heat transfer to voids, see :envvar:`IVHT` (\ see :ref:`VoidPropertiesHeatTransfer`).

.. seealso:: \  :doc:`model-reference` -->  :ref:`heatTransferAndConductionsInComponentsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`HOBEM1(m)`
     - 0.0
     - Emissivity for component :envvar:`m` to type 1 void
     - NON-DIM

   * - :envvar:`HOBEM2(m)`
     - 0.0
     - Emissivity for component :envvar:`m` to type 2 void
     - NON-DIM

   * - :envvar:`HOBEM3(m)`
     - 0.0
     - Emissivity for component :envvar:`m` to type 3 void
     - NON-DIM

   * - :envvar:`HOBS1S(m)`
     - ...
     - Heat-transfer coefficient to solidified fluid #1 for component :envvar:`m`

       Defaults to :envvar:`HOBS1(m)`.

       .. note:: When Thermal Stress Evolution model used, effect of gap formation on heat transfer between component and solidified fluid is controlled by :envvar:`IF_GAP`.

       .. seealso:: \  

          * :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`

          * :envvar:`THCGAP` in :ref:`FluidWallGapHeatTransferProperties`
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`HOBS1(m)`
     - -1.0 
     - Heat-transfer coefficient to fluid #1 for component :envvar:`m`

       If :envvar:`HOBS1(m)` < 0.0, the solver will calculate a heat-transfer coefficient.

       If :envvar:`HOBS1(m)` = 0.0, then no heat transfer to components occurs.

       For a lost foam component (:envvar:`IFOB(m)` = 1), :envvar:`HOBS1(m)` is the foam/metal heat transfer coefficient and must be specified.

       .. seealso:: \  :envvar:`IFOB(m)` in :ref:`ComponentPropertiesLostFoamCastingModelParameters`.
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`HOBS2(m)`
     - -1.0 
     - Heat-transfer coefficient to fluid #2 for component :envvar:`m`. 

       If :envvar:`HOBS2(m)` = -1.0, the solver will calculate a heat-transfer coefficient.
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`HOBVT1(t,m)`
     - 0.0
     - Time-dependent component :envvar:`m` heat transfer to void

       .. seealso:: \  :envvar:`IVHT` in :ref:`VoidPropertiesHeatTransfer`.
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`FHOBVT1(m)`
     - 
     - The external filename for tabular component :envvar:`m` heat transfer to void as a function of time (used only if :envvar:`IHOBVT1C(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IHOBVT1C(m)`
     - 0
     - The column number for total component :envvar:`m` heat transfer to void in the external file

       .. seealso:: \  :envvar:`IVHT` in :ref:`VoidPropertiesHeatTransfer`.
     - NONE

   * - :envvar:`HOBVT2(t,m)`
     - 0.0
     - Time-dependent component :envvar:`m` heat transfer to void

       .. seealso:: \  :envvar:`IVHT` in :ref:`VoidPropertiesHeatTransfer`.
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`FHOBVT2(m)`
     - 
     - The external filename for tabular component :envvar:`m` heat transfer to void as a function of time (used only if :envvar:`IHOBVT2C(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IHOBVT2C(m)`
     - 0
     - The column number for total component :envvar:`m` heat transfer to void in the external file

       .. seealso:: \  :envvar:`IVHT` in :ref:`VoidPropertiesHeatTransfer`.
     - NONE

   * - :envvar:`HOBVT3(t,m)`
     - 0.0
     - Time-dependent component :envvar:`m` heat transfer to void

       .. seealso:: \  :envvar:`IVHT` in :ref:`VoidPropertiesHeatTransfer`.
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`FHOBVT3(m)`
     - 
     - The external filename for tabular component :envvar:`m` heat transfer to void as a function of time (used only if :envvar:`IHOBVT3C(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IHOBVT3C(m)`
     - 0
     - The column number for total component :envvar:`m` heat transfer to void in the external file

       .. seealso:: \  :envvar:`IVHT` in :ref:`VoidPropertiesHeatTransfer`.
     - NONE

   * - :envvar:`HTCOB(m1,m2)`
     - -1.0
     - Heat transfer coefficient between component :envvar:`m1` and component :envvar:`m2`

       If :envvar:`HTCOB(m1,m2)` :math:`<` 0.0, the interface between the two components is assumed to have no thermal resistance. If :envvar:`HTCOB(m1,m2)` = 0, a fully insulated interface is assumed between the two components.
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`TOBS(t)`
     - 0.0
     - Times for time-dependent component arrays
     - [t]

.. index::
   single: component properties; lost foam casting

.. index:: lost foam casting

.. _ComponentPropertiesLostFoamCastingModelParameters:

Component Properties: Lost Foam Casting Model Parameters
===========================================================

| *m* :math:`\leq` *500, component index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`lostFoamMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOB(m)`
     - 0
     - "Free" (or phantom) component flag

       | =-2, core gas component
       | =-1, porous component
       | = 0, regular component
       | = 1, lost foam component
       | = 2, fan/impeller component
       | = 3, sediment scour component
       | = 4, specified velocity phantom component for continuous casting
       | = 5, domain removing component
       | = 6, flow vent component
       | = 7, FEA domain removing component
       | = 8, sampling volume component
       | = 9, surface roughness component providing roughness height or Manning's roughness coefficien (:ref:`surfaceroughnesscomptype` component type)
       | = 10, wave absorbing component
       | = 11, meshing component        

       .. note:: For :envvar:`IFOB` :math:`>` 0, components do not contribute to area and volume blockages, so the component will not be visible in component plots, except for the :envvar:`IFOB(m)` = 5 type.
     - NONE

   * - :envvar:`HOBS1(m)`
     - 0.0
     - Heat-transfer coefficient between fluid #1 and foam component :envvar:`m` (:envvar:`IFOB(m)` = 1)

       .. note:: \ :envvar:`HOBS1(m)` must be positive for the metal to advance into foam.
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`RCOBS(m)`
     - 0.0
     - Density times specific heat product for component :envvar:`m`. If :envvar:`RCOBS(m)` :math:`>` 0.0, a dynamic equation is solved for the heat transfer surface temperature.

       Alternate: :envvar:`MOBS(m)`

       .. note:: \ :envvar:`RCOBS(m)` is required input for lost foam components. For GMO components :envvar:`RCOBS(m)` should be used in place of :envvar:`MOBS(m)`.

       .. seealso:: \  \ :envvar:`MOBS(m)` in :ref:`ComponentPropertiesThermalandHeatTransfer`.
     - [M L\ :sup:`-1` T\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`REMFOB(m)`
     - 0.0
     - Density times specific melting energy product for foam
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`REVFOB(m)`
     - 0.0
     - Density times specific vaporization energy product for foam
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`TMFOB(m)`
     - 0.0
     - Foam melting temperature
     - [T]

   * - :envvar:`TVFOB(m)`
     - 0.0
     - Foam vaporization temperature
     - [T]

.. _ComponentPropertiesContactTime:

Component Properties: Contact Time with Fluid
=====================================================================

| *m* :math:`\leq` *500, component index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFCONTCOMP(m)`
     - 0
     - Flag to output contact time of component :envvar:`m` with fluid #1

       | = 0, no output
       | = 1, output the time spent by fluid #1 in contact with component :envvar:`m`

       .. note:: Two spatial variables are calculated for each activated component. One represents the contact time of fluid #1 with the component and is a quantity transported by fluid. The other is the contact time of the component with fluid #1 and is a static variable on the component's surface.

       .. note:: Requires the activation of the fluid/wall contact time output, :envvar:`ICONTACT` = 1 (see :ref:`WallContactTime`).  

     - NONE       

.. index::
   single: component properties; spray cooling

.. index:: spray cooling

.. _ComponentPropertiesSprayCooling:

Component Properties: Spray Cooling for thermal die cycling
===========================================================
.. note::  Only available through |f3dc|.
.. note::  Requires :envvar:`IFSPRAY` = 1.

| *m* :math:`\leq` *500, component index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CYC_TRANS_X(m)`
     - 0.0
     - Component displacement in x direction during spray cooling
     - [L]

   * - :envvar:`CYC_TRANS_Y(m)`
     - 0.0
     - Component displacement in y direction during spray cooling
     - [L]

   * - :envvar:`CYC_TRANS_Z(m)`
     - 0.0
     - Component displacement in y direction during spray cooling
     - [L]

.. index::
   single: component properties; dissolving components

.. index:: dissolving components

.. _ComponentPropertiesDissolvingComponents:

Component Properties: Dissolving Components
===========================================================

| *m* :math:`\leq` *500, component index*

.. seealso:: \  Theory manual section :ref:`DissolvingSolidSoluteModel`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOBDISS(m)`
     - 0
     - Dissolving component flag

       | =0, regular component
       | =1, dissolving component

       .. note:: Requires the activation of the dissolution model, :envvar:`IDISSOLVE` = 1 (see :ref:`DissolutionModelParameters`).

     - NONE

.. index::
   single: component properties; combustible components

.. index:: combustible components

.. _ComponentPropertiesCombustibleComponents:

Component Properties: Combustible Components
===========================================================

| *m* :math:`\leq` *500, component index*

.. seealso:: \ Theory manual section :ref:`CombustibleObjectModel` and Model Reference section :ref:`combustibleObjectsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOBBURN(m)`
     - 0
     - Combustible component flag

       | =0, regular component
       | =1, combustible component

       .. note:: Requires the activation of the combustible object model, :envvar:`IBURN` = 1 (see :ref:`CombustibleObjectModelParameters`).

     - NONE

   * - :envvar:`BURNA(m)`
     - 1.0e-05
     - The combustion front velocity in the solid.
     - [L :sup:`-1`]

   * - :envvar:`BURNB(m)`
     - 0.5
     - A dummy variable that can be used to customize the burn rate equation.   
     - NONE    

   * - :envvar:`BURNDEN(m)`
     - -1.0
     - Density of the solid combustible component :envvar:`m`       
     - [M/L\ :sup:`3`]

   * - :envvar:`BURNIGNTEMP(m)`
     - 0.0 degrees C or F
     - Threshold temperature below which combustible component :envvar:`m` does not burn.
     - [T]

   * - :envvar:`BURNTEMP(m)`
     - -1.0
     - Temperature at which combustible component :envvar:`m` burns      
     - [T]                

.. index::
   single: component properties; vents

.. index:: vents

.. _ComponentPropertiesVents:

Component Properties: Vents
===========================================================

| *m* :math:`\leq` *500, component index*
| *t* :math:`\leq` *500, time index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOB(m)`
     - 0
     - "Free" (or phantom) component flag

       | =-2, core gas component
       | =-1, porous component
       | = 0, regular component
       | = 1, lost foam component
       | = 2, fan/impeller component
       | = 3, sediment scour component
       | = 4, specified velocity phantom component for continuous casting
       | = 5, domain removing component
       | = 6, flow vent component
       | = 7, FEA domain removing component
       | = 8, sampling volume component
       | = 9, surface roughness component providing roughness height or Manning's roughness coefficien (:ref:`surfaceroughnesscomptype` component type)
       | = 10, wave absorbing component
       | = 11, meshing component        

       .. note:: For :envvar:`IFOB` :math:`>` 0, components do not contribute to area and volume blockages, so the component will not be visible in component plots, except for the :envvar:`IFOB(m)` = 5 type.
     - NONE

   * - :envvar:`VTAREA(m)`
     - minimum cell size, squared
     - Open area of each individual vent defined by vent component :envvar:`m`
     - [L\ :sup:`2`]

   * - :envvar:`VTDIAM(m)`
     - 0.0
     - Diameter of an individual vent channel
     - [L]

   * - :envvar:`VTPRES(t,m)`
     - PVOID
     - External vent pressure at time :envvar:`TOBS(t)`
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`IVTPRESC(m)`
     - 0
     - The column number for external vent pressure in the external file
     - NONE

   * - :envvar:`FVTPRES(m)`
     - 
     - The external filename for tabular external vent pressure as a function of time (used only if :envvar:`IVTPRESC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`VTTEMP(t,m)`
     - TVOID
     - External vent temperature at time :envvar:`TOBS(t)`
     - [T]

   * - :envvar:`IVTTEMPC(m)`
     - 0
     - The column number for external vent temperature in the external file
     - NONE

   * - :envvar:`FVTTEMP(m)`
     - 
     - The external filename for tabular external vent temperature as a function of time (used only if :envvar:`IVTTEMPC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IF_2WAY_VT(m)`
     - 0
     - The flag for vent flow direction

       | =0, two way flow, both inflow and outflow are allowed
       | =1, outflow only, inflow not allowed
       | =2, inflow only, outflow not allowed
     - NONE

   * - :envvar:`VTF_MIN(m)`
     - 0.0
     - Fluid fraction at vent :envvar:`m` below which fluid #1 is allowed to escape through the vent. 
       Both fluid #1 and gas escape when :math:`F` < :envvar:`VTF_MIN(k)`, and only gas escapes otherwise.

       .. note:: Used only with compressible flow, :envvar:`ICMPRS` = 1.
     - NON-DIM

   * - :envvar:`VTF_MAX(k)`
     - ...
     - Fluid fraction at vent :envvar:`m` above which the vent is considered blocked to any flow through it.
       Gas escapes when :math:`F` < :envvar:`VTF_MAX(k)`, and the vent is closed otherwise.

       .. note:: Defaults to 0.5 when the sharp interface model is on, :envvar:`ITB` = 1, and to 0.99 otherwise.
     - NON-DIM      

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist XPUT
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`RHOAIR`
     - ...
     - Air density for use in the calculation of the venting loss coefficient for vent components. 

       | Defaults to air density in simulation units, which is 1.225 kg/m\ :sup:`3` in SI system.

       .. seealso:: \  :doc:`model-setup` --> :ref:`flowventcomptype`.

     - [M/L\ :sup:`3`] 


.. index:: active simulation control; vents

.. _EventsVents:

Active simulation control of vents 
-----------------------------------

.. seealso:: \  :doc:`model-reference` -->  :ref:`activeSimulationControlMR`.

| *m* :math:`\leq` *500, component index*
| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *10, vent event index*
| *i* :math:`\leq` *10, event action index*
| *j* :math:`\leq` *10, probe condition index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTEventsVents:

.. list-table:: Namelist XPUT
   :widths: 25 15 40 20
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NEVENTS_VT(m)`
     - 0
     - Number of events for vent component :envvar:`m`
     - NONE

   * - :envvar:`EVENT_NAME_VT(n,m)`
     - ' '
     - Event :envvar:`n` name (up to 50 characters)
     - NONE

   * - :envvar:`IF_EVENT_ENABLED_VT(n,m)`
     - 1
     - Event :envvar:`n` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IF_GLOBAL_VT(n,m)`
     - 0
     - Global condition flag for event :envvar:`n`

       | =0, use local conditions
       | =1, use global conditions

     - NONE

   * - :envvar:`IGLOBAL_VT(n,m)`
     - 0
     - Global condition id for event :envvar:`n` (used if :envvar:`IF_GLOBAL_VT(n,m)` = 1)
     - NONE

   * - :envvar:`NACTIONS_VT(n,m)`
     - 0
     - Number of actions for event :envvar:`n` (used if :envvar:`IF_GLOBAL_VT(n,m)` = 0)
     - NONE

   * - :envvar:`NPROBES_VT(n,m)`
     - 0
     - Number of local probe conditions for event :envvar:`n`
     - NONE

   * - :envvar:`EVENT_CONDITION_LOGIC_VT(n,m)`
     - ' '
     - Logical operator between probe conditions for event :envvar:`n`

       | ='ANY', event triggered when any of the enabled probe conditions satisfied
       | ='ALL', event triggered when all of the enabled probe conditions satisfied

       .. note:: Required when number of enabled probe conditions > 1
     - NONE

   * - :envvar:`EVENT_ACTION_VT(i,n,m)`
     - ' '
     - Event action :envvar:`i` for event :envvar:`n`

       | ='VTPRES', change vent external pressure
       | ='VTTEMP', change vent external temperature
       | ='OFF', close the vent

       .. note:: Actions 'VTPRES' and 'VTTEMP' cannot be used together with action 'OFF' in the same event.
     - NONE

   * - :envvar:`VTPRES_EVENT(t,n,m)`
     - PVOID
     - Vent external pressure at time :envvar:`TOBS(t)` for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_VT(i,n,m)` = 'VTPRES' for any action :envvar:`i`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`IVTPRESC_EVENT(n,m)`
     - 0
     - The column number for the vent external pressure for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_VT(i,n,m)` = 'VTPRES' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FVTPRES_EVENT(n,m)`
     - 
     - The external filename for the tabular vent external pressure for event :envvar:`n` as a function of time

       .. note:: Used when :envvar:`IVTPRESC_EVENT(n,m)` :math:`\geq` 2.
     - NONE

   * - :envvar:`VTTEMP_EVENT(t,n,m)`
     - TVOID
     - Vent external temperature at time :envvar:`TOBS(t)` for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_VT(i,n,m)` = 'VTTEMP' for any action :envvar:`i`.
     - [T]

   * - :envvar:`IVTTEMPC_EVENT(n,m)`
     - 0
     - The column number for the vent external temperature for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_VT(i,n,m)` = 'VTTEMP' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FVTTEMP_EVENT(n,m)`
     - 
     - The external filename for the vent external temperature for event :envvar:`n` as a function of time

       .. note:: Used when :envvar:`IVTTEMPC_EVENT(n,m)` :math:`\geq` 2.
     - NONE

   * - :envvar:`IF_CONDITION_ENABLED_VT(j,n,m)`
     - 1
     - Probe condition :envvar:`j` enable/disable flag for event :envvar:`n`

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IPRBD_VT(j,n,m)`
     - 0
     - Probe id for probe condition :envvar:`j`
     - NONE

   * - :envvar:`IPRBSC_VT(j,n,m)`
     - 0
     - Scalar id for probe condition :envvar:`j`

       .. note:: Used when :envvar:`PRBVNAM_VT(j,n,m)` = 'SCSCLR'
     - NONE

   * - :envvar:`IPRBSCN_VT(j,n,m)`
     - 0
     - Additional scalar index for probe condition :envvar:`j`

       Sediment species id, when :envvar:`PRBVNAM_VT` = 'NSSPC', or
       Baffle flux surface id, when :envvar:`PRBVNAM_VT` = 'TRACERN'.
     - NONE

   * - :envvar:`PRBVNAM_VT(j,n,m)`
     - ...
     - Probe variable name for probe condition :envvar:`j`

       .. note:: Please check table :ref:`namelistXPUTTerminationControlPRBVNAM` for valid variable names and descriptions.
     - NONE

   * - :envvar:`IFPRBVABS_VT(j,n,m)`
     - 0
     - Specify if to use the absolute probe variable value for probe condition :envvar:`j`

       | =0, use the real value
       | =1, use absolute value
     - NONE

   * - :envvar:`PRBVROP_VT(j,n,m)`
     - ' '
     - Probe variable relational operator for probe condition :envvar:`j`

       | ='LT', probe condition satisfied when probe variable value is *less* than the critical value
       | ='LE', probe condition satisfied when probe variable value is *less* than or *equal* to the critical value
       | ='EQ', probe condition satisfied when probe variable value is *equal* to the critical value
       | ='NE', probe condition satisfied when probe variable value is *not equal* to the critical value
       | ='GE', probe condition satisfied when probe variable value is *greater* than or *equal* to the critical value
       | ='GT', probe condition satisfied when probe variable value is *greater* than the critical value
     - NONE

   * - :envvar:`PRBVAL_CRITICAL_VT(j,n,m)`
     - 0.0
     - Critical value for probe condition :envvar:`j`
     - NONE

   * - :envvar:`PRBDT_VT(j,n,m)`
     - 0.0
     - Duration after the critical value has reached for probe condition :envvar:`j`
     - [t]

.. index::
   single: component properties; mass sources

.. index:: mass sources

.. _ComponentPropertiesMassSources:

Component Properties: Mass Sources
==============================================================

| *t* :math:`\leq` *500, time index*
| *m* :math:`\leq` *500, component index*
| *ns* :math:`\leq` *99, scalar index*
| *k* :math:`\leq` *10, sediment species index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`massSourcesMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IAQSRB(m)`
     - 0
     - Activation flag for individual mass source (when flow rate is negative) for geometry component :envvar:`m`.

       | =0, source is deactivated
       | =1, source is activated
     - NONE

   * - :envvar:`IFQSRB(m)`
     - 1
     - Index of fluid released by mass source (when flow rate is positive) for geometry component :envvar:`m`.

       | =1,fluid #1
       | =2, fluid #2 (or void)
     - NONE

   * - :envvar:`IFSNKB(m)`
     - 1
     - Index of fluid removed by mass source (when flow rate) is negative) for geometry component :envvar:`m`.

       | =1, fluid #1
       | =2, fluid #2 (or void)

       =3, mixture of fluids #1 and #2 (or void) in proportion to their volume fractions in the mesh cells adjacent to source.
     - NONE

   * - :envvar:`IOQSRT(m)`
     - 1
     - Mass source type

       | =0, static pressure source (e.g., flow out of a pipe)
       | =1, stagnation pressure source (e.g., flow out of a deflating balloon)

       .. note:: This option is only used when the mass source is positive. It does not apply to mass sinks. Generally, this option is most useful when applied to coupled-motion GMO components with mass sources.
     - NONE

   * - :envvar:`ITQSRB(m)`
     - 1
     - Indicator of fluid flow rate of mass source for geometry component :envvar:`m`.

       | =1, total flow rate is defined as :envvar:`QSROBS(t,m)`
       | =2, flow rate per unit component surface area is defined as :envvar:`SQSROBS(t,m)`
     - NONE

   * - :envvar:`IVQSRB(m)`
     - 2
     - Indicator of volume or mass flow rate for fluid from mass source for geometry component :envvar:`m`.

       | =1, volume flow rate :envvar:`QSROBS(t,m)` or :envvar:`SQSROBS(t,m)` defines volume flow rate
       | =2, mass flow rate defined as :envvar:`QSROBS(t,m)` or :envvar:`SQSROBS(t,m)` defines mass flow rate
     - NONE

   * - :envvar:`QSROBS(t,m)`
     - 0.0 
     - Total flow rate from mass source at time :envvar:`TOBS(t)` for geometry component :envvar:`m`, where :envvar:`t` is index of time 

       .. note:: Positive if fluid is released; negative if fluid is removed. Can change sign with time. If :envvar:`IVQSRB(m)` = 1, it is volume flow rate. If :envvar:`IVQSRB(m)` = 2, it is mass flow rate.
     - [L\ :sup:`3`/t] or [M/t]

   * - :envvar:`FQSROBS(m)`
     - 
     - The external filename for tabular total flow rate from mass source for component :envvar:`m` as a function of time (used only if :envvar:`IQSROBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IQSROBSC(m)`
     - 0
     - The column number for total power for component :envvar:`m` in the external file

       .. note:: Positive if fluid is released; negative if fluid is removed. Can change sign with time. If :envvar:`IVQSRB(m)` = 1, it is volume flow rate. If :envvar:`IVQSRB(m)` = 2, it is mass flow rate.
     - NONE

   * - :envvar:`RHOQSRB(m)`
     - ...
     - Density of fluid released by mass source for geometry component :envvar:`m`

       .. note:: For variable density problems only (:envvar:`IFRHO` :math:`\geq` 2). Used when mass (or volume) flow rate from source is positive. For a one-fluid problem with fluid #1 release, defaults to RHOF. For a compressible flow problem, defaults to :envvar:`RHOF2`.

       .. seealso:: \  :envvar:`IFRHO` in :ref:`PhysicalModelOptions` and :envvar:`RHOF2` in :ref:`DensityProperties` \.
     - [M/L\ :sup:`3`]

   * - :envvar:`RHOSNKB(m)`
     - ...
     - Density of gas in voids

       Used to convert mass flow rate to volume flow rate at void sinks in one-fluid problems, :envvar:`IVQSRB(m)` = 2, :envvar:`IFSNKB(m)` = 2 or 3, and :envvar:`NMAT` = 1.

       .. seealso:: \  :envvar:`NMAT` in :ref:`PhysicalModelOptions`.
     - [M/L\ :sup:`3`]

   * - :envvar:`ROBS(m)`
     - 1.0
     - Surface area multiplier due to roughness of component :envvar:`m`. This multiplies the cell-face area to give the effective heat transfer area for each cell. No heat transfer at component :envvar:`m` if :envvar:`ROBS(m)` = 0.0.

       .. note:: No mass sources are applied for component :envvar:`m` if :envvar:`ROBS(m)` = 0.0.
     - NON-DIM

   * - :envvar:`SCLQSR(ns,m)`
     - 0.0
     - Scalar concentration of species ns in fluid added by mass source :envvar:`m`
     - [M/L\ :sup:`3`]

   * - :envvar:`SQSROBS(t,m)`
     - 0.0
     - Flow rate per unit surface area from mass source at time :envvar:`TOBS(t)` for geometry component :envvar:`m`, where :envvar:`t` is index of time. 

       .. note:: Positive if fluid is released; negative if fluid is removed. Can change sign with time. If :envvar:`IVQSRB(m)` = 1, it is volume flow rate. If :envvar:`IVQSRB(m)` = 2, it is mass flow rate.
     - [L\ :sup:`3`/t] or [M/t]

   * - :envvar:`FSQSROBS(m)`
     - 
     - The external filename for tabular flow rate per unit surface area from mass source for component :envvar:`m` as a function of time (used only if :envvar:`ISQSROBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ISQSROBSC(m)`
     - 0
     - The column number for flow rate per unit surface area from mass source for component :envvar:`m` in the external file

       .. note:: Positive if fluid is released; negative if fluid is removed. Can change sign with time. If :envvar:`IVQSRB(m)` = 1, it is volume flow rate. If :envvar:`IVQSRB(m)` = 2, it is mass flow rate.
     - NONE

   * - :envvar:`TQSRB(t,m)`
     - 0.0
     - Temperature of fluid released by mass source for geometry component :envvar:`m` at time :envvar:`TMS(t)`, where :envvar:`t` is the index for time.
     - [T]

   * - :envvar:`FTQSRB(m)`
     - 
     - The external filename for tabular temperature of mass source for component :envvar:`m` as a function of time (used only if :envvar:`ITQSRBC(m)` :math:`\geq` 2).
     - NONE

   * - :envvar:`ITQSRBC(m)`
     - 0
     - The column number for temperature of mass source for component :envvar:`m` in the external file.
     - NONE

   * - :envvar:`TOBS(t)`
     - 0.0
     - Times for time-dependent component arrays
     - [t]

   * - :envvar:`QSRAIR(m)`
     - 0.0
     - Volume fraction of entrained air at mass source :envvar:`m`

       .. note:: Only used when :envvar:`IDFAIR` = 1 (see :ref:`AirEntrainmentModelParameters`).
     - NON-DIM

   * - :envvar:`QSRCHRG(m)`
     - 0.0
     - Electric charge density at mass source :envvar:`m`

       .. note:: Only used when :envvar:`IECHRG` = 1 (see :ref:`ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters`).
     - [Q/L\ :sup:`3`]

   * - :envvar:`QSRDSIZE(m)`
     - :envvar:`DFDIAM_INI`
     - Droplet diameter at mass source :envvar:`m`

       .. note:: Only used when :envvar:`IDSIZE` = 1 (see :ref:`DynamicDropletModelParameters`).
     - [L]

   * - :envvar:`QSRDISS(m)`
     - 0.0
     - Concentration of dissolved air at mass source :envvar:`m`

       .. note:: Only used when :envvar:`IDISSOLVE` = 1 (see :ref:`DissolutionModelParameters`).
     - [M/L\ :sup:`3`]

   * - :envvar:`QSRNCG(m)`
     - 0.0
     - Volume fraction of the non-condensable gas component in the gas phase at mass source :envvar:`m`

       .. note:: Only used with the non-condensable gas model (\ :envvar:`INCG` = 1) and relative saturation turned off (\ :envvar:`IRSAT` = 0)

       .. seealso:: \  :ref:`PhysicalModelOptions` and :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`
     - NON-DIM

   * - :envvar:`RSATQSR(m)`
     - 0.0
     - Relative saturation of the vapor component in the gas phase at mass source :envvar:`m`

       .. note:: Only used with the non-condensable gas model (\ :envvar:`INCG` = 1) and relative saturation turned on (\ :envvar:`IRSAT` = 1)

       .. seealso:: \  :ref:`PhysicalModelOptions` and :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`
     - NON-DIM

   * - :envvar:`QSRSS(m,k)`
     - 0.0
     - Suspended sediment mass concentration of sediment species k at mass source :envvar:`m`

       .. note:: Only used when :envvar:`NSSPC` :math:`>` 0 (see :ref:`ScalarSedimentationScourParameters`).
     - [M/L\ :sup:`3`]

   * - :envvar:`QSRSEG(m)`
     - 0.0
     - Solute mass concentration at mass source :envvar:`m`

       .. note:: Only used when :envvar:`ISEG` = 1 (see :ref:`BinaryAlloySegregationParameters`).
     - [M/L\ :sup:`3`]

.. index:: active simulation control; mass sources

.. _EventsMassSources:

Active simulation control of mass sources
---------------------------------------------

.. seealso:: \  :doc:`model-reference` -->  :ref:`activeSimulationControlMR`.

| *m* :math:`\leq` *500, mass source component index*
| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *10, mass source event index*
| *j* :math:`\leq` *10, probe condition index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTEventsMassSources:

.. list-table:: Namelist XPUT
   :widths: 25 15 40 20
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NEVENTS_QSRB(m)`
     - 0
     - Number of events for mass source :envvar:`m`
     - NONE

   * - :envvar:`EVENT_NAME_QSRB(n,m)`
     - ' '
     - Event :envvar:`n` name (up to 50 characters)
     - NONE

   * - :envvar:`IF_EVENT_ENABLED_QSRB(n,m)`
     - 1
     - Event :envvar:`n` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IF_GLOBAL_QSRB(n,m)`
     - 0
     - Global condition flag for event :envvar:`n`

       | =0, use local conditions
       | =1, use global conditions

     - NONE

   * - :envvar:`IGLOBAL_QSRB(n,m)`
     - 0
     - Global condition id for event :envvar:`n` (used if :envvar:`IGLOBAL_QSRB(n,m)` = 1)
     - NONE

   * - :envvar:`NPROBES_QSRB(n,m)`
     - 0
     - Number of probe conditions for event :envvar:`n` (used if :envvar:`IF_GLOBAL_QSRB(n,m)` = 0)
     - NONE

   * - :envvar:`EVENT_CONDITION_LOGIC_QSRB(n,m)`
     - ' '
     - Logical operator between probe conditions for event :envvar:`n`

       | ='ANY', event triggered when any of the enabled probe conditions satisfied
       | ='ALL', event triggered when all of the enabled probe conditions satisfied

       .. note:: Required when number of enabled probe conditions > 1
     - NONE

   * - :envvar:`EVENT_ACTION_QSRB(n,m)`
     - ' '
     - Event action for event :envvar:`n`

       | ='QSROBS' if :envvar:`ITQSRB(m)` = 1, change the total flow rate from mass source :envvar:`m` 
       | ='SQSROBS' if :envvar:`ITQSRB(m)` = 2, change the flow rate per unit surface area from mass source :envvar:`m` 
     - NONE

   * - :envvar:`QSROBS_EVENT(t,n,m)`
     - 0.0
     - Total flow rate at time :envvar:`TOBS(t)` for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_QSRB(n,m)` = 'QSROBS'.
     - [L\ :sup:`3`/t] or [M/t]

   * - :envvar:`IQSROBSC_EVENT(n,m)`
     - 0
     - The column number for the total flow rate for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_QSRB(n,m)` = 'QSROBS'.
     - NONE

   * - :envvar:`FQSROBS_EVENT(n,m)`
     - 
     - The external filename for the tabular total flow rate for event :envvar:`n` as a function of time

       .. note:: Used when :envvar:`IQSROBSC_EVENT(n,m)` :math:`\geq` 2.
     - NONE

   * - :envvar:`SQSROBS_EVENT(t,n,m)`
     - 0.0
     - Flow rate per unit surface area at time :envvar:`TOBS(t)` for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_QSRB(n,m)` = 'SQSROBS'.
     - [L\ :sup:`3`/t] or [M/t]

   * - :envvar:`ISQSROBSC_EVENT(n,m)`
     - 0
     - The column number for the flow rate per unit surface area for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_QSRB(n,m)` = 'SQSROBS'.
     - NONE

   * - :envvar:`FSQSROBS_EVENT(n,m)`
     - 
     - The external filename for the tabular flow rate per unit surface area for event :envvar:`n` as a function of time

       .. note:: Used when :envvar:`ISQSROBSC_EVENT(n,m)` :math:`\geq` 2.
     - NONE

   * - :envvar:`IF_CONDITION_ENABLED_QSRB(j,n,m)`
     - 1
     - Probe condition :envvar:`j` enable/disable flag for event :envvar:`n`

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IPRBD_QSRB(j,n,m)`
     - 0
     - Probe id for probe condition :envvar:`j`
     - NONE

   * - :envvar:`IPRBSC_QSRB(j,n,m)`
     - 0
     - Scalar id for probe condition :envvar:`j`

       .. note:: Used when :envvar:`PRBVNAM_QSRB(j,n,m)` = 'SCSCLR'
     - NONE

   * - :envvar:`IPRBSCN_QSRB(j,n,m)`
     - 0
     - Additional scalar index for probe condition :envvar:`j`

       Sediment species id, when :envvar:`PRBVNAM_QSRB` = 'NSSPC', or
       Baffle flux surface id, when :envvar:`PRBVNAM_QSRB` = 'TRACERN'.
     - NONE

   * - :envvar:`PRBVNAM_QSRB(j,n,m)`
     - ...
     - Probe variable name for probe condition :envvar:`j`

       .. note:: Please check table :ref:`namelistXPUTTerminationControlPRBVNAM` for valid variable names and descriptions.
     - NONE

   * - :envvar:`IFPRBVABS_QSRB(j,n,m)`
     - 0
     - Specify if to use the absolute probe variable value for probe condition :envvar:`j`

       | =0, use the real value
       | =1, use absolute value
     - NONE

   * - :envvar:`PRBVROP_QSRB(j,n,m)`
     - ' '
     - Probe variable relational operator for probe condition :envvar:`j`

       | ='LT', probe condition satisfied when probe variable value is *less* than the critical value
       | ='LE', probe condition satisfied when probe variable value is *less* than or *equal* to the critical value
       | ='EQ', probe condition satisfied when probe variable value is *equal* to the critical value
       | ='NE', probe condition satisfied when probe variable value is *not equal* to the critical value
       | ='GE', probe condition satisfied when probe variable value is *greater* than or *equal* to the critical value
       | ='GT', probe condition satisfied when probe variable value is *greater* than the critical value
     - NONE

   * - :envvar:`PRBVAL_CRITICAL_QSRB(j,n,m)`
     - 0.0
     - Critical value for probe condition :envvar:`j`
     - NONE

   * - :envvar:`PRBDT_QSRB(j,n,m)`
     - 0.0
     - Duration after the critical value has reached for probe condition :envvar:`j`
     - [t]

.. index::
   single: component properties; moisture drying model

.. index:: moisture drying model

.. _ComponentPropertiesMoistureDryingModel:

Component Properties: Moisture Drying Model
==============================================================

| *m* :math:`\leq` *500, component index*

.. seealso:: \  :ref:`moistureDryingMR`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOBSMST(m)`
     - 0
     - Moisture flag for component :envvar:`m`.

       | =0, no moisture inside component
       | =1, component contains moisture

       .. note:: Requires the activation if a moisture drying model, :envvar:`IFDRYING` = 1 or 2 (see :ref:`PhysicalModelOptions`) and full heat transfer within the component, :envvar:`IHTOBS(m)` = 0.

     - NONE

   * - :envvar:`OBSMST(m)`
     - 0.0
     - Initial uniform moisture content in component :envvar:`m` defined as:

       % weight fraction of the dry component when :envvar:`IFMST` = 1, or macroscopic concentration (weight per unit bulk component volume) when :envvar:`IFMST` = 2.

       .. seealso:: \  :envvar:`IFMST` in :ref:`PhysicalModelOptions`.
     - NON-DIM

   * - :envvar:`RHOBS(m)`
     - -1.0
     - Dry component :envvar:`m` microscopic density (weight per unit solid volume in mesh)
     - [M/L\ :sup:`3`]

.. index::
   single: component properties; fluid-structure-interaction model

.. index:: 
   pair: FSI model; fluid-structure interaction model

.. _ComponentPropertiesFluidStructureInteractionFSImodel:

Component Properties: Fluid-Structure Interaction (FSI) Model
=====================================================================

| *m* :math:`\leq` *500, component index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`fsiTseMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFSI(m)`
     - 0
     - Fluid-structure interaction (FSI) flag for component :envvar:`m`

       | =0, deactivates the fluid-structure interaction model
       | =1, activates the fluid-structure interaction model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`fsiTseMR`

     - NONE

   * - :envvar:`IFFEM(m)`
     - 0
     - Flag to use finite element (FE) mesh file for the fluid-structure interaction solver for component :envvar:`m`

       | =0, generate finite element (FE) mesh file for the component
       | =1, use existing finite element (FE) mesh file for the component
       | =2, use existing :program:`EXODUS II` mesh file for the component

     - NONE

   * - :envvar:`FFEM(m)`
     - ...
     - Finite element (FE) mesh file name for component :envvar:`m`

       Defaults to :file:`compm.prjext.FEmesh`, where :file:`prjext` is the project extension and :envvar:`m` is the component number.

       Can include the full path, e.g., :file:`c:/work/my_comp1.FEmesh` (up to 256 characters).

     - NONE

   * - :envvar:`IFSICPL(m)`
     - 0
     - Flag to control fluid/solid coupling for component :envvar:`m`. 

       | =0, only partial fluid/solid coupling for the component: fluid pressure affects solid, but solid deformations do not affect fluid flow.
       | =1, full fluid/solid coupling for the component: fluid pressure affects solid, and solid deformations affect fluid flow. This option may lengthen computation times for some simulations.

     - NONE

   * - :envvar:`ITETFSI(m)`
     - 0
     - Flag to use tetrahedral meshing to generate the mesh for Fluid-structure interaction (FSI) component :envvar:`m`. Default is a hexahedral mesh, and this value is overridden when reading in an existing mesh from a file (when :envvar:`IFFEM(m)` = 1).

       | =0 use hexahedral meshes for fluid structure interaction (FSI) component :envvar:`m`
       | =1 use tetrahedral meshes for fluid structure interaction (FSI) component :envvar:`m`

       .. note:: Used only with FSI (\ :envvar:`IFSI(m)` = 1) model.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`fsiTseMR`
     - NONE

   * - :envvar:`ICOUPLE(m,m1)`
     - 0
     - Flag to control coupling between neighboring Fluid Structure Interaction (FSI) components :envvar:`m` and :envvar:`m1` (see :envvar:`IFSI(m)` above). Default is no coupling between components (i.e., a fixed boundary condition). Note that the coupling is always symmetric: the coupling of component :envvar:`m` to :envvar:`m1` is always the same as :envvar:`m1` to :envvar:`m`. If coupling is doubly defined between two components, the higher-valued :envvar:`ICOUPLE` prevails.

       | =0 No coupling between FSI components :envvar:`m` and :envvar:`m1`. Fixed boundary is assumed between the components
       | =1 Full coupling between FSI components :envvar:`m` and :envvar:`m1`. The shared interface between the two components is assumed to be welded together, and cannot pull apart or slide past one another.
       | =2 Partial coupling between FSI components :envvar:`m` and :envvar:`m1`. The shared interface between the two components is able to pull apart and slide past one another, based on the friction coefficient :envvar:`FRICTION` (see below), but cannot interfere will one another.

       .. note:: Used only with FSI (\ :envvar:`IFSI(m)` = 1) model.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`fsiTseMR`
     - NONE

   * - :envvar:`FRICTION(m,m1)`
     - -1.0
     - Friction coefficient between neighboring Fluid Structure Interaction (FSI) components that are partially coupled, :envvar:`ICOUPLE(m,m1)` = 2.
       A negative value indicates that the coefficient is infinite (i.e., tangential traction is not limited), and a positive value indicates the physical friction coefficient. Its value represents the ratio between the limit of the magnitude of tangential traction to the normal traction between the component interfaces. Physical values are typically less than 1.0.

       .. note:: Used only with FSI model when both components are FSI components (\ :envvar:`IFSI(m)` = 1 and :envvar:`IFSI(m1)` = 1) and  are partially coupled (\ :envvar:`ICOUPLE(m,m1)` = 2).

       .. seealso:: \  :doc:`model-reference` -->  :ref:`fsiTseMR`
     - NONE

   * - :envvar:`RHOBS(m)`
     - -1.0
     - Density of component :envvar:`m`
     - [M/L\ :sup:`3`]

   * - :envvar:`BLKMOD(m)`
     - 0.0
     - Bulk modulus of component :envvar:`m`
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`ELASTMOD(m)`
     - 0.0
     - Elastic modulus of component :envvar:`m`
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`POISSONR(m)`
     - -2.0
     - Poisson ratio of component :envvar:`m`

       .. note:: Default computed based on other elasticity parameters. At least 2 properties must be defined for each FSI component. If insufficient data provided, preprocessing errors will occur.
     - NON-DIM

   * - :envvar:`SHRMOD(m)`
     - 0.0
     - Shear modulus of component :envvar:`m`
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`THEXOBS(m)`
     - 0.0
     - Thermal expansion coefficient of component :envvar:`m`
     - [1/T]

   * - :envvar:`YLDSTR(m)`
     - 0.0
     - Yield stress limit of component :envvar:`m`

       .. note:: Default is no yielding which simulates an material with infinitely large yield stress limit. Any positive value activates the plastic deformation model.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

.. index::
   single: component properties; thermal stress evolution model

.. index:: 
   pair: TSE model; thermal stress evolution model

.. _ComponentPropertiesThermalStressEvolutionTSEModel:

Component Properties: Thermal Stress Evolution (TSE) Model
=====================================================================

| *m* :math:`\leq` *500, component index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`TseSolidifiedFluidRegion`.

.. note:: All parameters in this section require the Thermal Stress Model, :envvar:`ITHRMST` (see :ref:`PhysicalModelOptions`).

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFSOFT(m)`
     - 0
     - Flag to determine the stiffness of the component :envvar:`m` adjacent to solidified fluid region.

       | =0, constraining component-does not deform with solidified fluid
       | =1, non-constraining component-deforms with solidified fluid (i.e., represents sand mold)

     - NONE

.. index::
   single: component properties; general moving objects model

.. index::
   pair: GMO; general moving objects model

.. _ComponentPropertiesGeneralMovingObjectsGMO:

Component Properties: General Moving Objects (GMO)
=====================================================================

| *m* :math:`\leq` *500, component index*
| *mf = 1,2,3, control force index*
| *n* :math:`\leq` *500, subcomponent index* 
| *t* :math:`\leq` *500, time index*

.. note:: \ :envvar:`IMOBS` = 1 must be set in :ref:`PhysicalModelOptions` for all options in this section.

.. seealso:: \  :doc:`model-reference` -->  :ref:`gmoBasicsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IBUOYO(m)`
     - 0
     - Flag for the output of buoyancy center and metacentric height

       Used when :envvar:`IMO(m)` = 4.

       | =0, do not evaluate and output buoyancy center and metacentric height
       | =1, evaluate and output buoyancy center and metacentric height.
     - NONE

   * - :envvar:`ICLIDOB(m1,m2)`
     - :envvar:`ICLID`
     - Collision flag for components :envvar:`m1` and :envvar:`m2`, one of which is a coupled-motion GMO component.

       =1, calculate collision between components :envvar:`m1` and :envvar:`m2`

       =0, no collision between components :envvar:`m1` and :envvar:`m2`; if :envvar:`m1` = :envvar:`m2`, then component :envvar:`m1` does not collide with any other components and symmetry- and wall-type mesh boundaries. In this case the moving components can move through other components and walls.

       .. seealso:: \  :envvar:`ICLID` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`IGF(m)`
     - 0
     - Type of input data for control force and torque. Used when :envvar:`IMO(m)` = 4.

       | = 0, no control force and torque are defined
       | = 1, define total control force and total control torque
       | = 2, define multiple control forces and their application points
     - NONE

   * - :envvar:`IGTRFMVB(m)`
     - 0
     - Flag for transformation of GMO dynamic properties for component :envvar:`m` if the component undergoes total transformation. These properties include mass properties, force(s), force application point(s), torque(s), linear and angular velocities, GMO reference point, and rotational axis location.    

       | =0, code makes no transformation of GMO dynamic properties
       | =1, code makes transformation of GMO dynamic properties 
     - NONE

   * - :envvar:`IMO(m)`
     - 0
     - Type of component :envvar:`m`

       | = 0, stationary component
       | = 2, moving web / sliding motion component; the component surface tangential velocity is specified in :file:`velobs.f` by :envvar:`UTOBS`, :envvar:`VTOBS`, and :envvar:`WTOBS`.  
       | = 3, prescribed-motion of general moving object
       | = 4, coupled-motion of general moving object

       .. note:: 
          * :envvar:`IMOBS` = 1 must be set in :ref:`PhysicalModelOptions` when :envvar:`IMO` = 2, = 3, or = 4.
     - NONE

   * - :envvar:`IMOAXS(m)`
     - 0
     - Specifies how the component's :envvar:`m` motion is constrained

       | = 0, 6 degrees of freedom
       | = 1, fixed x-axis rotation
       | = 2, fixed y-axis rotation
       | = 3, fixed z-axis rotation
       | = 4, fixed point rotation
     - NONE

   * - :envvar:`IOMXCAL(m)`
     - 1
     - Flag for rotational component in x'-direction of body system

       | = 1, coupled motion
       | = 0, prescribed motion
     - NONE

   * - :envvar:`IOMXPRE(m)`
     - 0
     - Type of time-dependent x'- angular velocity in body system

       Used when :envvar:`IMO(m)` = 3 or 4, and :envvar:`IMOAXS(m)` = 0, 1, or 4.

       | = 0, constant or tabular data
       | = 1, sinusoidal function of time
     - NONE

   * - :envvar:`IOMYCAL(m)`
     - 1
     - Flag for rotational component in y'-direction of body system

       | = 1, coupled motion
       | = 0, prescribed motion

       .. note:: Used for :envvar:`IMO(m)` = 4.
     - NONE

   * - :envvar:`IOMYPRE(m)`
     - 0
     - Type of time-dependent y'- angular velocity in body system

       | = 0, constant or tabular data
       | = 1, sinusoidal function of time

       .. note:: Used when :envvar:`IMO(m)` = 3 or 4, and :envvar:`IMOAXS(m)` = 0, 2, or 4.
     - NONE

   * - :envvar:`IOMZCAL(m)`
     - 1
     - Flag for rotational component in z'-direction of body system

       | = 0, prescribed motion
       | = 1, coupled motion

       .. note:: Used for :envvar:`IMO(m)` = 4.
     - NONE

   * - :envvar:`IOMZPRE(m)`
     - 0
     - Type of time-dependent z'- angular velocity in body system

       | = 0, constant or tabular data
       | = 1, sinusoidal function of time

       .. note:: Used when :envvar:`IMO(m)` = 3 or 4, and :envvar:`IMOAXS(m)` = 0, 3, or 4.
     - NONE

   * - :envvar:`IPREF(m)`
     - 1
     - Flag for reference pressure for component :envvar:`m` 

       | =1, reference pressure is user-prescribed
       | =2, reference pressure is calculated using the average pressure on the exposed surface of the component
     - NONE

   * - :envvar:`IPRPMVB(m)`
     - 0
     - Flag for mass property input

       = 0, Uniform mass density, :envvar:`RHOMVB(m)`, is required input data.

       = 1, If :envvar:`IMOAXS(m)` = 0 or 4, then mass, :envvar:`MASSMVB(m)`, initial coordinates of mass center in space system, :envvar:`XMCMVB0(m)`, :envvar:`YMCMVB0(m)`, :envvar:`ZMCMVB0(m)`, and moment of inertia tensor, :envvar:`TJMVB(m,i,j)`, are required input data. If :envvar:`IMOAXS(m)` = 1, 2, or 3, then mass, :envvar:`MASSMVB(m)`, initial coordinates of mass center in space system, :envvar:`XMCMVB0(m)`, :envvar:`YMCMVB0(m)`, :envvar:`ZMCMVB0(m)`, and moment of inertia about the fixed axis, :envvar:`TJAXS(m)`, are required input data.

       .. note:: 
          * Mass properties of moving object is required input if :envvar:`IMO(m)` = 4 and optional if :envvar:`IMO(m)` = 3. 
          * If mass properties are defined when :envvar:`IMO(m)` = 3, then control forces and torques will be computed and stored as history data in both space and body coordinate systems.
     - NONE

   * - :envvar:`IREFGF(m)`
     - 1
     - Indicator of reference system in which control forces and torques are prescribed. 

       | = 1, space system
       | = 2, body system

       .. note:: Used when :envvar:`IMO(m)` = 4.
     - NONE

   * - :envvar:`IREFGFM(m,mf)`
     - 1
     - Indicator of the reference system in which control force :envvar:`mf` exerting on component :envvar:`m` is defined

       | = 1, space system
       | = 2, body system

       .. note:: Used when :envvar:`IGF(m)` = 2.
     - NONE

   * - :envvar:`IUMCAL(m)`
     - 1
     - Flag for translational component in x-direction of space system

       | = 0, prescribed motion
       | = 1, coupled motion

       .. note:: Used for :envvar:`IMO(m)` = 4.
     - NONE

   * - :envvar:`IUPRE(m)`
     - 0
     - Type of time-dependent translational x-velocity in space system

       | = 0, constant or tabular data
       | = 1, sinusoidal function of time

       .. note:: Used when :envvar:`IMO(m)` = 3 or 4 and :envvar:`IMOAXS(m)` = 0.
     - NONE

   * - :envvar:`IVMCAL(m)`
     - 0
     - Flag for translational component in y-direction of space system

       | = 0, prescribed motion
       | = 1, coupled motion

       .. note:: Used for :envvar:`IMO(m)` = 4.
     - NONE

   * - :envvar:`IVPRE(m)`
     - 0
     - Type of time-dependent translational y-velocity in space system

       | = 0, constant or tabular data
       | = 1, sinusoidal function of time

       .. note:: Used when :envvar:`IMO(m)` = 3 or 4, and :envvar:`IMOAXS(m)` = 0.
     - NONE

   * - :envvar:`IWMCAL(m)`
     - 1
     - Flag for translational component in z-direction of space system

       | = 0, prescribed motion
       | = 1, coupled motion

       .. note:: Used for :envvar:`IMO(m)` = 4.
     - NONE

   * - :envvar:`IWPRE(m)`
     - 0
     - Type of time-dependent translational z-velocity in space system

       | = 0, constant or tabular data
       | = 1, sinusoidal function of time

       .. note:: Used when :envvar:`IMO(m)` = 3 or 4, and :envvar:`IMOAXS(m)` = 0.
     - NONE

   * - :envvar:`ANGLMIN(m)`
     - 1.0\ :math:`\times`\ 10\ :sup:`19`
     - Maximum angular displacement from the initial position, in degrees, in the negative rotational direction for fixed-axis rotation.

       .. note:: Used only when :envvar:`IMOAXS(m)` = 1, 2, 3.
     - [DEGREES]

   * - :envvar:`ANGLMAX(m)`
     - 1.0\ :math:`\times`\ 10\ :sup:`19`
     - Maximum angular displacement from the initial position, in degrees, in the positive rotational direction for fixed-axis motion.

       .. note:: Used only when :envvar:`IMOAXS(m)` = 1, 2, 3.
     - [DEGREES]

   * - :envvar:`CFRC(m)`
     - :envvar:`FRCMOB`
     - Coefficient of friction during collision for component :envvar:`m`. Used in the GMO collision model. The smallest value is used for two colliding components, one of which must be a coupled-motion component.

       .. seealso:: \  :envvar:`FRCMOB` is in :ref:`CollisionModelOptions`.
     - NON-DIM

   * - :envvar:`CRSTRNG(m)`
     - :envvar:`STRNGMOB`
     - Coefficient of Stronge's restitution for component :envvar:`m`. Used in the GMO collision model. The smallest value is used for two colliding components, one of which must be a coupled-motion component. Values should be between 0.0 and 1.0.

       .. seealso:: \  :envvar:`STRNGMOB` is in :ref:`CollisionModelOptions`.
     - NON-DIM

   * - :envvar:`DXMCMIN(m)`
     - 1.0\ :math:`\times`\ 10\ :sup:`19`
     - Maximum allowed displacement from the initial position in the negative x-direction

       .. note:: Used only when :envvar:`IMOAXS(m)` = 0.
     - [L]

   * - :envvar:`DXMCMAX(m)`
     - 1.0\ :math:`\times`\ 10\ :sup:`19`
     - Maximum allowed displacement from the initial position in the positive x-direction

       .. note:: Used only when :envvar:`IMOAXS(m)` = 0.
     - [L]

   * - :envvar:`DYMCMIN(m)`
     - 1.0\ :math:`\times`\ 10\ :sup:`19`
     - Maximum allowed displacement from the initial position in the negative y-direction

       .. note:: Used only when :envvar:`IMOAXS(m)` = 0.
     - [L]

   * - :envvar:`DYMCMAX(m)`
     - 1.0\ :math:`\times`\ 10\ :sup:`19`
     - Maximum allowed displacement from the initial position in the positive y-direction

       .. note:: Used only when :envvar:`IMOAXS(m)` = 0.
     - [L]

   * - :envvar:`DZMCMIN(m)`
     - 1.0\ :math:`\times`\ 10\ :sup:`19`
     - Maximum allowed displacement from the initial position in the negative z-direction

       .. note:: Used only when :envvar:`IMOAXS(m)` = 0.
     - [L]

   * - :envvar:`DZMCMAX(m)`
     - 1.0\ :math:`\times`\ 10\ :sup:`19`
     - Maximum allowed displacement in the positive z-direction

       .. note:: Used only when :envvar:`IMOAXS(m)` = 0.
     - [L]

   * - :envvar:`FXTOBS(t,m)`
     - 0.0
     - Time-dependent control force component at time :envvar:`TOBS(t)`

       .. note:: 
          * When :envvar:`IREFGF(m)` = 1, it is in x-direction of space system. When :envvar:`IREFGF(m)` = 0, it is in x'-direction of body system.
          * Used when :envvar:`IMO(m)` = 4, :envvar:`IMOAXS(m)` = 0 and :envvar:`IUMCAL(m)` = 1, and applied at the mass center.

     - [M L t\ :sup:`-2`]

   * - :envvar:`FFXTOBS(m)`
     - 
     - The external filename for tabular control force component for component :envvar:`m` as a function of time (used only if :envvar:`IFXTOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFXTOBSC(m)`
     - 0
     - The column number for control force component for component :envvar:`m` in the external file

       .. note:: 
          * When :envvar:`IREFGF(m)` = 1, it is in x-direction of space system. When :envvar:`IREFGF(m)` = 0, it is in x'-direction of body system.
          * Used when :envvar:`IMO(m)` = 4, :envvar:`IMOAXS(m)` = 0 and :envvar:`IUMCAL(m)` = 1, and applied at the mass center.

     - NONE

   * - :envvar:`FXTOBSM(t,m,mf)`
     - 0.0
     - x-component of control force :envvar:`mf` at time :envvar:`TOBS(t)`. 

       .. note:: 
          * When :envvar:`IREFGFM(m,mf)` = 1, it is in x-direction of the space system. When :envvar:`IREFGFM(m)` = 2, it is in x'-direction of the body system. 
          * Used when :envvar:`IGF(m)` = 2.
     - [M L t\ :sup:`-2`]

   * - :envvar:`FFXTOBSM(m,mf)`
     - 
     - The external filename for tabular x-component of control force :envvar:`mf` for component :envvar:`m` as a function of time (used only if :envvar:`IFXTOBSMC(m,mf)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFXTOBSMC(m,mf)`
     - 0
     - The column number for x-component of control force :envvar:`mf` for component :envvar:`m` in the external file

       .. note:: 
          * When :envvar:`IREFGFM(m,mf)` = 1, it is in x-direction of the space system. When :envvar:`IREFGFM(m)` = 2, it is in x'-direction of the body system. 
          * Used when :envvar:`IGF(m)` = 2.

     - NONE

   * - :envvar:`FYTOBS(t,m)`
     - 0.0
     - Time-dependent control force component at time :envvar:`TOBS(t)`. 

       .. note:: 
          * When :envvar:`IREFGF(m)` = 1, it is in y-direction of space system. When :envvar:`IREFGF(m)` = 0, it is in y'-direction of body system. 
          * Used when :envvar:`IMO(m)` = 4, and :envvar:`IVMCAL(m)` = 1, and applied at the mass center.

     - [M L t\ :sup:`-2`]

   * - :envvar:`FFYTOBS(m)`
     - 
     - The external filename for tabular control force component for component :envvar:`m` as a function of time (used only if :envvar:`IFYTOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFYTOBSC(m)`
     - 0
     - The column number for control force component for component :envvar:`m` in the external file

       .. note:: 
          * When :envvar:`IREFGF(m)` = 1, it is in y-direction of space system. When :envvar:`IREFGF(m)` = 0, it is in y'-direction of body system. 
          * Used when :envvar:`IMO(m)` = 4, and :envvar:`IVMCAL(m)` = 1, and applied at the mass center.

     - NONE

   * - :envvar:`FYTOBSM(t,m,mf)`
     - 0.0
     - y-component of control force :envvar:`mf` at time :envvar:`TOBS(t)`

       .. note:: 
          * When :envvar:`IREFGFM(m,mf)` = 1, it is in y-direction of the space system. When :envvar:`IREFGFM(m)` = 2, it is in y'-direction of the body system. 
          * Used when :envvar:`IGF(m)` = 2.

     - [M L t\ :sup:`-2`]

   * - :envvar:`FFYTOBSM(m,mf)`
     - 
     - The external filename for tabular y-component of control force :envvar:`mf` for component :envvar:`m` as a function of time (used only if :envvar:`IFYTOBSMC(m,mf)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFYTOBSMC(m,mf)`
     - 0
     - The column number for y-component of control force :envvar:`mf` for component :envvar:`m` in the external file

       .. note:: 
          * When :envvar:`IREFGFM(m,mf)` = 1, it is in y-direction of the space system. When :envvar:`IREFGFM(m)` = 2, it is in y'-direction of the body system. 
          * Used when :envvar:`IGF(m)` = 2.

     - NONE

   * - :envvar:`FZTOBS(t,m)`
     - 0.0
     - Time-dependent control force component at time :envvar:`TOBS(t)`

       .. note:: 
          * When :envvar:`IREFGF(m)` = 1, it is in z-direction of space system. When :envvar:`IREFGF(m)` = 0, it is in z'-direction of body system.
          * Used when :envvar:`IMO(m)` = 4, :envvar:`IMOAXS(m)` = 0 and :envvar:`IWMCAL(m)` = 1, and applied at the mass center.

     - [M L t\ :sup:`-2`]

   * - :envvar:`FFZTOBS(m)`
     - 
     - The external filename for tabular control force component for component :envvar:`m` as a function of time (used only if :envvar:`IFZTOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFZTOBSC(m)`
     - 0
     - The column number for control force component for component :envvar:`m` in the external file

       .. note:: 
          * When :envvar:`IREFGF(m)` = 1, it is in z-direction of space system. When :envvar:`IREFGF(m)` = 0, it is in z'-direction of body system.
          * Used when :envvar:`IMO(m)` = 4, :envvar:`IMOAXS(m)` = 0 and :envvar:`IWMCAL(m)` = 1, and applied at the mass center.

     - NONE

   * - :envvar:`FZTOBSM(t,m,mf)`
     - 0.0
     - z-component of control force :envvar:`mf` at time :envvar:`TOBS(t)`

       .. note:: 
          * When :envvar:`IREFGFM(m,mf)` = 1, it is in z-direction of the space system. When :envvar:`IREFGFM(m,mf)` = 2, it is in z'-direction of the body system.
          * Used when :envvar:`IGF(m)` = 2.

     - [M L t\ :sup:`-2`]

   * - :envvar:`FFZTOBMS(m,mf)`
     - 
     - The external filename for tabular z-component of control force :envvar:`mf` for component :envvar:`m` as a function of time (used only if :envvar:`IFZTOBSMC(m,mf)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFZTOBSMC(m,mf)`
     - 0
     - The column number for z-component of control force :envvar:`mf` for component :envvar:`m` in the external file

       .. note:: 
          * When :envvar:`IREFGFM(m,mf)` = 1, it is in z-direction of the space system. When :envvar:`IREFGFM(m,mf)` = 2, it is in z'-direction of the body system.
          * Used when :envvar:`IGF(m)` = 2.

     - NONE

   * - :envvar:`MASSMVB(m)`
     - ...
     - Total mass of moving object

       .. note:: Used when :envvar:`IPRPMVB(m)` = 1 and :envvar:`IMO(m)` = 3 or 4.
     - [M]

   * - :envvar:`OMXAMP(m)`
     - 0.0
     - Amplitude of sinusoidal x'- angular velocity in body system, in rad/s

       .. note:: Used when :envvar:`IOMXPRE(m)` = 1.
     - [radians/t]

   * - :envvar:`OMXFRE(m)`
     - 0.0
     - Frequency of sinusoidal x'- angular velocity in body system, in Hz

       .. note:: Used when :envvar:`IOMXPRE(m)` = 1.
     - [1/t]

   * - :envvar:`OMXPHS(m)`
     - 0.0
     - Initial phase of sinusoidal x'- angular velocity in body system, in degrees

       .. note:: Used when :envvar:`IOMXPRE(m)` = 1.
     - [DEGREES]

   * - :envvar:`OMXTOBS(t,m)`
     - 0.0
     - Time-dependent angular velocity component in x'-direction of body system at time :envvar:`TOBS(t)`

       .. note:: Used when :envvar:`IMO(m)` = 3 or 4 and :envvar:`IMOAXS(m)` = 0, 1, or 4. Applied at the reference point for :envvar:`IMO(m)` = 3, and at the mass center for :envvar:`IMO(m)` = 4.
     - [radians/t]

   * - :envvar:`FOMXTOBS(m)`
     - 
     - The external filename for tabular angular velocity component in x'-direction of body system for component :envvar:`m` as a function of time (used only if :envvar:`IOMXTOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IOMXTOBSC(m)`
     - 0
     - The column number for angular velocity component in x'-direction of body system for component :envvar:`m` in the external file

       .. note:: Used when :envvar:`IMO(m)` = 3 or 4 and :envvar:`IMOAXS(m)` = 0, 1, or 4. Applied at the reference point for :envvar:`IMO(m)` = 3, and at the mass center for :envvar:`IMO(m)` = 4.
     - NONE

   * - :envvar:`OMYAMP(m)`
     - 0.0
     - Amplitude of sinusoidal y'- angular velocity in body system, in rad/s

       .. note:: Used when :envvar:`IOMYPRE(m)` = 1.
     - [radians/t]

   * - :envvar:`OMYFRE(m)`
     - 0.0
     - Frequency of sinusoidal y'- angular velocity in body system, in Hz

       .. note:: Used when :envvar:`IOMYPRE(m)` = 1.
     - [1/t]

   * - :envvar:`OMYPHS(m)`
     - 0.0
     - Initial phase of sinusoidal y'- angular velocity in body system, in degrees

       .. note:: Used when :envvar:`IOMYPRE(m)` = 1.
     - [DEGREES]

   * - :envvar:`OMYTOBS(t,m)`
     - 0.0
     - Time-dependent angular velocity component in y'-direction of body system at time :envvar:`TOBS(t)`. 

       .. note:: Used when :envvar:`IMO(m)` = 3 or 4 and :envvar:`IMOAXS(m)` = 0, 2, or 4. Applied at the reference point for :envvar:`IMO(m)` = 3, and at the mass center for :envvar:`IMO(m)` = 4.
     - [radians/t]

   * - :envvar:`FOMYTOBS(m)`
     - 
     - The external filename for tabular angular velocity component in y'-direction of body system for component :envvar:`m` as a function of time (used only if :envvar:`IOMYTOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IOMYTOBSC(m)`
     - 0
     - The column number for angular velocity component in y'-direction of body system for component :envvar:`m` in the external file

       .. note:: Used when :envvar:`IMO(m)` = 3 or 4 and :envvar:`IMOAXS(m)` = 0, 2, or 4. Applied at the reference point for :envvar:`IMO(m)` = 3, and at the mass center for :envvar:`IMO(m)` = 4.
     - NONE

   * - :envvar:`OMZAMP(m)`
     - 0.0
     - Amplitude of sinusoidal z'- angular velocity in body system, in rad/s

       .. note:: Used when :envvar:`IOMZPRE(m)` = 1.
     - [radians/t]

   * - :envvar:`OMZFRE(m)`
     - 0.0
     - Frequency of sinusoidal z'- angular velocity in body system, in Hz

       .. note:: Used when :envvar:`IOMZPRE(m)` = 1.
     - [1/t]

   * - :envvar:`OMZPHS(m)`
     - 0.0
     - Initial phase of sinusoidal z'- angular velocity in body system, in degrees

       .. note:: Used when :envvar:`IOMZPRE(m)` = 1.
     - [DEGREES]
    
   * - :envvar:`OMZTOBS(t,m)`
     - 0.0
     - Time-dependent angular velocity component in z'-direction of body system at time :envvar:`TOBS(t)`

       .. note:: Used when :envvar:`IMO(m)` = 3 or 4 and :envvar:`IMOAXS(m)` = 0, 3, or 4. Applied at the reference point for :envvar:`IMO(m)` = 3, and at the mass center for :envvar:`IMO(m)` = 4.
     - [radians/t]

   * - :envvar:`FOMZTOBS(m)`
     - 
     - The external filename for tabular angular velocity component in z'-direction of body system for component :envvar:`m` as a function of time (used only if :envvar:`IOMZTOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IOMZTOBSC(m)`
     - 0
     - The column number for angular velocity component in z'-direction of body system for component :envvar:`m` in the external file

       .. note:: Used when :envvar:`IMO(m)` = 3 or 4 and :envvar:`IMOAXS(m)` = 0, 3, or 4. Applied at the reference point for :envvar:`IMO(m)` = 3, and at the mass center for :envvar:`IMO(m)` = 4.
     - NONE

   * - :envvar:`PREFMBW(m)`
     - :envvar:`PVOID`
     - Reference pressure

       .. seealso:: \  :envvar:`PVOID` in :ref:`InitialConditionsUniform`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`RHOMVB(m)`
     - 0.0
     - Global mass density of moving object

       .. note:: Used when :envvar:`IPRPMVB(m)` = 0 and :envvar:`IMO(m)` = 3 or 4.
     - [M/L\ :sup:`3`]

   * - :envvar:`RHOSUB(n)`
     - :envvar:`RHOMVB(m)`
     - Uniform mass density of subcomponent :envvar:`n` of moving component :envvar:`m`

       .. note:: Used when :envvar:`IPRPMVB(m)` = 0 and :envvar:`IMO(m)` = 3 or 4.
     - [M/L\ :sup:`3`]

   * - :envvar:`TJAXS(m)`
     - ...
     - Moment of inertia about fixed axis for component :envvar:`m`

       .. note:: Used when :envvar:`IPRPMVB(m)` = 1, :envvar:`IMOAXS(m)` = 1, 2, or 3 and :envvar:`IMO(m)` = 3 or 4.
     - [M L\ :sup:`2`]

   * - :envvar:`TJMVB(m,i,j)`
     - ...
     - Moment of inertia tensor in body system

       .. note:: Used when :envvar:`IPRPMVB(m)` = 1, :envvar:`IMOAXS(m)` = 0 or 4, and :envvar:`IMO(m)` = 3 or 4.
     - [M L\ :sup:`2`]

   * - :envvar:`TOBS(t)`
     - 0.0
     - Times for time-dependent component arrays
     - [t]

   * - :envvar:`TXTOBS(t,m)`
     - 0.0
     - Time-dependent control torque component at time :envvar:`TOBS(t)`. When :envvar:`IREFGF(m)` = 1, it is in x-direction of space system. When :envvar:`IREFGF(m)` = 2, it is in x'-direction of body system.

       .. note:: Used when :envvar:`IMO(m)` = 4, :envvar:`IOMXCAL(m)` = 1 and :envvar:`IMOAXS(m)` = 0, 1, or 4. Applied at the mass center for :envvar:`IMOAXS(m)` = 0, and at the rotation axis or point for :envvar:`IMOAXS(m)` = 1 or 4.
     - [M L\ :sup:`2` t\ :sup:`-2`]

   * - :envvar:`FTXTOBS(m)`
     - 
     - The external filename for tabular control torque component for component :envvar:`m` as a function of time (used only if :envvar:`ITXTOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ITXTOBSC(m)`
     - 0
     - The column number for control torque component for component :envvar:`m` in the external file

       .. note:: Used when :envvar:`IMO(m)` = 4, :envvar:`IOMXCAL(m)` = 1 and :envvar:`IMOAXS(m)` = 0, 1, or 4. Applied at the mass center for :envvar:`IMOAXS(m)` = 0, and at the rotation axis or point for :envvar:`IMOAXS(m)` = 1 or 4.
     - NONE

   * - :envvar:`TYTOBS(t,m)`
     - 0.0
     - Time-dependent control torque component at time :envvar:`TOBS(m)`. When :envvar:`IREFGF(m)` = 1, it is in y-direction of space system. When :envvar:`IREFGF(m)` = 2, it is in y'-direction of body system. 

       .. note:: Used when :envvar:`IMO(m)` = 4, :envvar:`IOMYCA(m)` = 1 and :envvar:`IMOAXS(m)` = 0, 2, or 4. Applied at the mass center for :envvar:`IMOAXS(m)` = 0, and at the rotation axis or point for :envvar:`IMOAXS(m)` = 1 or 4.
     - [M L\ :sup:`2` t\ :sup:`-2`]

   * - :envvar:`FTYTOBS(m)`
     - 
     - The external filename for tabular control torque component for component :envvar:`m` as a function of time (used only if :envvar:`ITYTOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ITYTOBSC(m)`
     - 0
     - The column number for control torque component for component :envvar:`m` in the external file

       .. note:: Used when :envvar:`IMO(m)` = 4, :envvar:`IOMYCA(m)` = 1 and :envvar:`IMOAXS(m)` = 0, 2, or 4. Applied at the mass center for :envvar:`IMOAXS(m)` = 0, and at the rotation axis or point for :envvar:`IMOAXS(m)` = 1 or 4.
     - NONE

   * - :envvar:`TZTOBS(t,m)`
     - 0.0
     - Time-dependent control torque component at time :envvar:`TOBS(t)`. When :envvar:`IREFGF(m)` = 1, it is in z-direction of space system. When :envvar:`IREFGF(m)` = 2, it is in z'-direction of body system.

       .. note:: Used when :envvar:`IMO(m)` = 4, :envvar:`IOMZCAL(m)` = 1 and :envvar:`IMOAXS(m)` = 0, 3, or 4. Applied at the mass center for :envvar:`IMOAXS(m)` = 0, and at the rotation axis or point for :envvar:`IMOAXS(m)` = 1 or 4.
     - [M L\ :sup:`2` t\ :sup:`-2`]

   * - :envvar:`FTZTOBS(m)`
     - 
     - The external filename for tabular control torque component for component :envvar:`m` as a function of time (used only if :envvar:`ITZTOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ITZTOBSC(m)`
     - 0
     - The column number for control torque component for component :envvar:`m` in the external file

       .. note:: Used when :envvar:`IMO(m)` = 4, :envvar:`IOMZCAL(m)` = 1 and :envvar:`IMOAXS(m)` = 0, 3, or 4. Applied at the mass center for :envvar:`IMOAXS(m)` = 0, and at the rotation axis or point for :envvar:`IMOAXS(m)` = 1 or 4.
     - NONE

   * - :envvar:`UAMP(m)`
     - 0.0
     - Amplitude of sinusoidal translational x-velocity in space system

       .. note:: Used when :envvar:`IUPRE(m)` = 1.
     - [L/t]

   * - :envvar:`UFRE(m)`
     - 0.0
     - Frequency of sinusoidal translational x-velocity in space system, in Hz

       .. note:: Used when :envvar:`IUPRE(m)` = 1.
     - [1/t]

   * - :envvar:`UPHS(m)`
     - 0.0
     - Initial phase of sinusoidal translational x-velocity in space system, in degrees

       Used when :envvar:`IUPRE(m)` = 1.
     - [DEGREES]

   * - :envvar:`UTOBS(t,m)`
     - 0.0
     - Time-dependent velocity component in x-direction at time :envvar:`TOBS(t)`

       For :envvar:`IMO(m)` = 4, :envvar:`UTOBS(1,m)` is the initial velocity of the mass center; for :envvar:`IMO(m)` = 3, :envvar:`UTOBS(t,m)` is the velocity of the reference point.

       .. note:: Used when :envvar:`IFOB(m)` = 4 or :envvar:`IMO(m)` = 2, 3, or 4.
     - [L/t]

   * - :envvar:`FUTOBS(m)`
     - 
     - The external filename for tabular velocity component in x-direction for component :envvar:`m` as a function of time (used only if :envvar:`IUTOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IUTOBSC(m)`
     - 0
     - The column number for velocity component in x-direction for component :envvar:`m` in the external file

       For :envvar:`IMO(m)` = 4, the first value is the initial velocity of the mass center; for :envvar:`IMO(m)` = 3, the table is the velocity of the reference point.

       .. note:: Used when :envvar:`IFOB(m)` = 4 or :envvar:`IMO(m)` = 2, 3, or 4.
     - NONE

   * - :envvar:`VAMP(m)`
     - 0.0
     - Amplitude of sinusoidal translational y-velocity in space system

       .. note:: Used when :envvar:`IVPRE(m)` = 1.
     - [L/t]

   * - :envvar:`VFRE(m)`
     - 0.0
     - Frequency of sinusoidal translational y-velocity in space system, in Hz

       .. note:: Used when :envvar:`IVPRE(m)` = 1.
     - [1/t]

   * - :envvar:`VPHS(m)`
     - 0.0
     - Initial phase of sinusoidal translational y-velocity in space system, in degrees

       .. note:: Used when :envvar:`IVPRE(m)` = 1.
     - [DEGREES]

   * - :envvar:`VTOBS(t,m)`
     - 0.0
     - Time-dependent velocity component in y-direction at time :envvar:`TOBS(t)`

       For :envvar:`IMO(m)` = 4, :envvar:`UTOBS(1,m)` is the initial velocity of the mass center; for :envvar:`IMO(m)` = 3, :envvar:`UTOBS(t,m)` is the velocity of the reference point.

       .. note:: Used when :envvar:`IFOB(m)` = 4 or :envvar:`IMO(m)` = 2, 3, or 4.
     - [L/t]

   * - :envvar:`FVTOBS(m)`
     - 
     - The external filename for tabular velocity component in y-direction for component :envvar:`m` as a function of time (used only if :envvar:`IVTOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IVTOBSC(m)`
     - 0
     - The column number for velocity component in y-direction for component :envvar:`m` in the external file

       For :envvar:`IMO(m)` = 4, the first value is the initial velocity of the mass center; for :envvar:`IMO(m)` = 3, the table is the velocity of the reference point.

       .. note:: Used when :envvar:`IFOB(m)` = 4 or :envvar:`IMO(m)` = 2, 3, or 4.
     - NONE

   * - :envvar:`WAMP(m)`
     - 0.0
     - Amplitude of sinusoidal translational z-velocity in space system

       .. note:: Used when :envvar:`IWPRE(m)` = 1.
     - [L/t]

   * - :envvar:`WFRE(m)`
     - 0.0
     - Frequency of sinusoidal translational z-velocity in space system, in Hz

       .. note:: Used when :envvar:`IWPRE(m)` = 1.
     - [1/t]

   * - :envvar:`WPHS(m)`
     - 0.0
     - Initial phase of sinusoidal translational z-velocity in space system, in degrees

       .. note:: Used when :envvar:`IWPRE(m)` = 1.
     - [DEGREES]

   * - :envvar:`WTOBS(t,m)`
     - 0.0
     - Time-dependent velocity component in z-direction at time :envvar:`TOBS(t)`

       For :envvar:`IMO(m)` = 4, :envvar:`UTOBS(1,m)` is the initial velocity of the mass center; for :envvar:`IMO(m)` = 3, :envvar:`UTOBS(t,m)` is the velocity of the reference point.

       .. note:: Used when :envvar:`IFOB(m)` = 4 or :envvar:`IMO(m)` = 2, 3, or 4.
     - [L/t]

   * - :envvar:`FWTOBS(m)`
     - 
     - The external filename for tabular total power for component :envvar:`m` as a function of time (used only if :envvar:`IWTOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IWTOBSC(m)`
     - 0
     - The column number for total power for component :envvar:`m` in the external file

       For :envvar:`IMO(m)` = 4, the first value is the initial velocity of the mass center; for :envvar:`IMO(m)` = 3, the table is the velocity of the reference point.

       .. note:: Used when :envvar:`IFOB(m)` = 4 or :envvar:`IMO(m)` = 2, 3, or 4.
     - NONE

   * - :envvar:`XAXS0(m)`
     - 0.0
     - X-coordinate of fixed point or fixed axis in space system

       .. note:: Used when :envvar:`IMOAXS(m)` :math:`>` 0.
     - [L]

   * - :envvar:`XFPNT(m,mf)`
     - :envvar:`XMCMVB0(m)`
     - Initial x-coordinate (in space system) of the application point of control force :envvar:`mf`. The application point is fixed on geometry component :envvar:`m` (a moving object)

       .. note:: Used when :envvar:`IGF(m)` = 2.
     - [L]

   * - :envvar:`XMCMVB0(m)`
     - ...
     - Initial x-coordinate of mass center in space system. Required when integrated mass properties are defined for moving component m under coupled or prescribed motion (:envvar:`IPRPMVB(m)` = 1 and :envvar:`IMO(m)` = 3 or 4).
     - [L]

   * - :envvar:`XREF0(m)`
     - ...
     - Initial x-coordinate of the reference point in space system. Required for prescribed motion with 6 degrees of freedom (:envvar:`IMO(m)` = 3 and :envvar:`IMOAXS(m)` = 0). 

       .. note:: If mass properties are defined, defaults to x-coordinate of the mass center; otherwise, defaults to x-coordinates of the geometric center.
     - [L]

   * - :envvar:`YAXS0(m)`
     - 0.0
     - Y-coordinate of fixed point or fixed axis in space system.

       .. note:: Used when :envvar:`IMOAXS(m)` :math:`>` 0.
     - [L]

   * - :envvar:`YFPNT(m,mf)`
     - :envvar:`YMCMVB0(m)`
     - Initial y-coordinate (in space system) of the application point of control force :envvar:`mf`. The application point is fixed on geometry component :envvar:`m` (a moving object).

       .. note:: Used when :envvar:`IGF(m)` = 2.
     - [L]

   * - :envvar:`YMCMVB0(m)`
     - ...
     - Initial y-coordinate of mass center in space system

       Required when integrated mass properties are defined for moving component :envvar:`m` under coupled or prescribed motion (:envvar:`IPRPMVB(m)` = 1 and :envvar:`IMO(m)` = 3 or 4).
     - [L]

   * - :envvar:`YREF0(m)`
     - ...
     - Initial y-coordinate of the reference point in space system

       Required for prescribed motion with 6 degrees of freedom (:envvar:`IMO(m)` = 3 and :envvar:`IMOAXS(m)` = 0). If mass properties are defined, defaults to x-coordinate of the mass center; otherwise, defaults to x-coordinates of the geometric center.
     - [L]

   * - :envvar:`ZAXS0(m)`
     - 0.0
     - Z-coordinate of fixed point or fixed axis in space system

       .. note:: Used for :envvar:`IMOAXS(m)` :math:`>` 0.
     - [L]

   * - :envvar:`ZFPNT(m,mf)`
     - :envvar:`ZMCMVB0(m)`
     - Initial z-coordinate (in space system) of the application point of control force :envvar:`mf`

       The application point is fixed on geometry component m (a moving object).

       .. note:: Used when :envvar:`IGF(m)` = 2.
     - [L]

   * - :envvar:`ZREF0(m)`
     - ...
     - Initial z-coordinate of the reference point in space system

       Required for prescribed motion with 6 degrees of freedom (:envvar:`IMO(m)` = 3 and :envvar:`IMOAXS(m)` = 0). If mass properties are defined, defaults to x-coordinate of the mass center; otherwise, defaults to x-coordinates of the geometric center.
     - [L]

.. index:: active simulation control; GMO

.. _EventsGMO:

Active simulation control of general moving objects (GMO)
----------------------------------------------------------

.. seealso:: \  :doc:`model-reference` -->  :ref:`activeSimulationControlMR`.

| *m* :math:`\leq` *500, component index*
| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *10, gmo event index*
| *i* :math:`\leq` *10, event action index*
| *j* :math:`\leq` *10, probe condition index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTEventsGMO:

.. list-table:: Namelist XPUT
   :widths: 25 15 40 20
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NEVENTS_GMO(m)`
     - 0
     - Number of events for GMO component :envvar:`m`

       .. note:: Used only when :envvar:`IMO(m)` = 3 (prescribed motion GMO)
     - NONE

   * - :envvar:`EVENT_NAME_GMO(n,m)`
     - ' '
     - Event :envvar:`n` name (up to 50 characters)
     - NONE

   * - :envvar:`IF_EVENT_ENABLED_GMO(n,m)`
     - 1
     - Event :envvar:`n` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IF_GLOBAL_GMO(n,m)`
     - 0
     - Global condition flag for event :envvar:`n`

       | =0, use local conditions
       | =1, use global conditions

     - NONE

   * - :envvar:`IGLOBAL_GMO(n,m)`
     - 0
     - Global condition id for event :envvar:`n` (used if :envvar:`IF_GLOBAL_GMO(n,m)` = 1)
     - NONE

   * - :envvar:`NACTIONS_GMO(n,m)`
     - 0
     - Number of actions for event :envvar:`n`
     - NONE

   * - :envvar:`NPROBES_GMO(n,m)`
     - 0
     - Number of local probe conditions for event :envvar:`n` (used if :envvar:`IF_GLOBAL_GMO(n,m)` = 0)
     - NONE

   * - :envvar:`EVENT_CONDITION_LOGIC_GMO(n,m)`
     - ' '
     - Logical operator between probe conditions for event :envvar:`n`

       | ='ANY', event triggered when any of the enabled probe conditions satisfied
       | ='ALL', event triggered when all of the enabled probe conditions satisfied

       .. note:: Required when number of enabled probe conditions > 1
     - NONE

   * - :envvar:`EVENT_ACTION_GMO(i,n,m)`
     - ' '
     - Event action :envvar:`i` for event :envvar:`n`

       | ='UTOBS', change velocity component in x-direction
       | ='VTOBS', change velocity component in y-direction
       | ='WTOBS', change velocity componentin z-direction
       | ='OMXTOBS', change angular velocity component in x'-direction
       | ='OMYTOBS', change angular velocity component in y'-direction
       | ='OMZTOBS', change angular velocity component in z'-direction
     - NONE

   * - :envvar:`UTOBS_EVENT(t,n,m)`
     - 0.0
     - Velocity component in x-direction at time :envvar:`TOBS(t)` for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_GMO(i,n,m)` = 'UTOBS' for any action :envvar:`i`.
     - [L/t]

   * - :envvar:`IUTOBSC_EVENT(n,m)`
     - 0
     - The column number for the velocity component in x-direction for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_GMO(i,n,m)` = 'UTOBS' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FUTOBS_EVENT(n,m)`
     - 
     - The external filename for the tabular velocity component in x-direction for event :envvar:`n` as a function of time

       .. note:: Used when :envvar:`IUTOBSC_EVENT(n,m)` :math:`\geq` 2.
     - NONE

   * - :envvar:`VTOBS_EVENT(t,n,m)`
     - 0.0
     - Velocity component in y-direction at time :envvar:`TOBS(t)` for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_GMO(i,n,m)` = 'VTOBS' for any action :envvar:`i`.
     - [L/t]

   * - :envvar:`IVTOBSC_EVENT(n,m)`
     - 0
     - The column number for the velocity component in y-direction for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_GMO(i,n,m)` = 'VTOBS' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FVTOBS_EVENT(n,m)`
     - 
     - The external filename for the tabular velocity component in y-direction for event :envvar:`n` as a function of time

       .. note:: Used when :envvar:`IVTOBSC_EVENT(n,m)` :math:`\geq` 2.
     - NONE

   * - :envvar:`WTOBS_EVENT(t,n,m)`
     - 0.0
     - Velocity component in z-direction at time :envvar:`TOBS(t)` for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_GMO(i,n,m)` = 'WTOBS' for any action :envvar:`i`.
     - [L/t]

   * - :envvar:`IWTOBSC_EVENT(n,m)`
     - 0
     - The column number for the velocity component in z-direction for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_GMO(i,n,m)` = 'WTOBS' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FWTOBS_EVENT(n,m)`
     - 
     - The external filename for the tabular velocity component in z-direction for event :envvar:`n` as a function of time

       .. note:: Used when :envvar:`IWTOBSC_EVENT(n,m)` :math:`\geq` 2.
     - NONE

   * - :envvar:`OMXTOBS_EVENT(t,n,m)`
     - 0.0
     - Angular velocity component in x'-direction at time :envvar:`TOBS(t)` for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_GMO(i,n,m)` = 'OMXTOBS' for any action :envvar:`i`.
     - [1/t]

   * - :envvar:`IOMXTOBSC_EVENT(n,m)`
     - 0
     - The column number for the angular velocity component in x'-direction for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_GMO(i,n,m)` = 'OMXTOBS' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FOMXTOBS_EVENT(n,m)`
     - 
     - The external filename for the tabular angular velocity component in x'-direction for event :envvar:`n` as a function of time

       .. note:: Used when :envvar:`IOMXTOBSC_EVENT(n,m)` :math:`\geq` 2.
     - NONE

   * - :envvar:`OMYTOBS_EVENT(t,n,m)`
     - 0.0
     - Angular velocity component in y'-direction at time :envvar:`TOBS(t)` for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_GMO(i,n,m)` = 'OMYTOBS' for any action :envvar:`i`.
     - [1/t]

   * - :envvar:`IOMYTOBSC_EVENT(n,m)`
     - 0
     - The column number for the angular velocity component in y'-direction for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_GMO(i,n,m)` = 'OMYTOBS' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FOMYTOBS_EVENT(n,m)`
     - 
     - The external filename for the tabular angular velocity component in y'-direction for event :envvar:`n` as a function of time

       .. note:: Used when :envvar:`IOMYTOBSC_EVENT(n,m)` :math:`\geq` 2.
     - NONE

   * - :envvar:`OMZTOBS_EVENT(t,n,m)`
     - 0.0
     - Angular velocity component in z'-direction at time :envvar:`TOBS(t)` for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_GMO(i,n,m)` = 'OMZTOBS' for any action :envvar:`i`.
     - [1/t]

   * - :envvar:`IOMZTOBSC_EVENT(n,m)`
     - 0
     - The column number for the angular velocity component in z'-direction for event :envvar:`n`

       .. note:: Used when :envvar:`EVENT_ACTION_GMO(i,n,m)` = 'OMZTOBS' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FOMZTOBS_EVENT(n,m)`
     - 
     - The external filename for the tabular angular velocity component in z'-direction for event :envvar:`n` as a function of time

       .. note:: Used when :envvar:`IOMZTOBSC_EVENT(n,m)` :math:`\geq` 2.
     - NONE

   * - :envvar:`IF_CONDITION_ENABLED_GMO(j,n,m)`
     - 1
     - Probe condition :envvar:`j` enable/disable flag for event :envvar:`n`

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IPRBD_GMO(j,n,m)`
     - 0
     - Probe id for probe condition :envvar:`j`
     - NONE

   * - :envvar:`IPRBSC_GMO(j,n,m)`
     - 0
     - Scalar id for probe condition :envvar:`j`

       .. note:: Used when :envvar:`PRBVNAM_GMO(j,n,m)` = 'SCSCLR'
     - NONE

   * - :envvar:`IPRBSCN_GMO(j,n,m)`
     - 0
     - Additional scalar index for probe condition :envvar:`j`

       Sediment species id, when :envvar:`PRBVNAM_GMO` = 'NSSPC', or
       Baffle flux surface id, when :envvar:`PRBVNAM_GMO` = 'TRACERN'.
     - NONE

   * - :envvar:`PRBVNAM_GMO(j,n,m)`
     - ...
     - Probe variable name for probe condition :envvar:`j`

       .. note:: Please check table :ref:`namelistXPUTTerminationControlPRBVNAM` for valid variable names and descriptions.
     - NONE

   * - :envvar:`IFPRBVABS_GMO(j,n,m)`
     - 0
     - Specify if to use the absolute probe variable value for probe condition :envvar:`j`

       | =0, use the real value
       | =1, use absolute value
     - NONE

   * - :envvar:`PRBVROP_GMO(j,n,m)`
     - ' '
     - Probe variable relational operator for probe condition :envvar:`j`

       | ='LT', probe condition satisfied when probe variable value is *less* than the critical value
       | ='LE', probe condition satisfied when probe variable value is *less* than or *equal* to the critical value
       | ='EQ', probe condition satisfied when probe variable value is *equal* to the critical value
       | ='NE', probe condition satisfied when probe variable value is *not equal* to the critical value
       | ='GE', probe condition satisfied when probe variable value is *greater* than or *equal* to the critical value
       | ='GT', probe condition satisfied when probe variable value is *greater* than the critical value
     - NONE

   * - :envvar:`PRBVAL_CRITICAL_GMO(j,n,m)`
     - 0.0
     - Critical value for probe condition :envvar:`j`
     - NONE

   * - :envvar:`PRBDT_GMO(j,n,m)`
     - 0.0
     - Duration after the critical value has reached for probe condition :envvar:`j`
     - [t]

.. index::
   single: PQ2 analysis; high pressure die casting

.. index:: PQ2 analyais

.. _PQ2Analysis:

PQ\ :sup:`2` Analysis
--------------------------------------------

| *m* :math:`\leq` *500, component index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`PQ2AnalysisMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOBPQ2(m)`
     - 0
     - Flag for PQ\ :sup:`2` analysis for component :envvar:`m`.

       Used only when :envvar:`IMO(m)` = 3, and :envvar:`IF_SQPIN(m)` = 0.

       | =0, no PQ\ :sup:`2` analysis
       | =1, do PQ\ :sup:`2` analysis

       .. note:: Only one GMO component is allowed to do PQ\ :sup:`2` analysis.
     - NONE

   * - :envvar:`IFOBPQ2_ADJUST(m)`
     - 0
     - Flag for velocity adjustment based on PQ\ :sup:`2` analysis and machine performance for component :envvar:`m`.

       Used only when :envvar:`IFOBPQ2(m)` = 1.

       | =0, do not adjust velocity
       | =1, adjust velocity 

       .. note:: If :envvar:`IFOBPQ2_ADJUST(m)` = 1, the machine performance parameters (:envvar:`PQ2_PMAX` and :envvar:`PQ2_QMAX`) have to be provided.
     - NONE

   * - :envvar:`PQ2_PMAX`
     - 0
     - Machine maximum pressure.

       Required if :envvar:`IFOBPQ2_ADJUST(m)` = 1.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`PQ2_QMAX`
     - 0
     - Machine maximum flow rate.

       Required if :envvar:`IFOBPQ2_ADJUST(m)` = 1.
     - [L\ :sup:`3`/t]

   * - :envvar:`PQ2_QMIN`
     - 1/3* :envvar:`PQ2_QMAX`
     - Machine minimum flow rate.

       It only affects the history data output frequency.

     - [L\ :sup:`3`/t]

   * - :envvar:`PQ2_MACC`
     - infinite
     - Machine maximum acceleration.

       Used when :envvar:`IFOBPQ2_ADJUST(m)` = 1.
     - [L/t\ :sup:`2`]

   * - :envvar:`PQ2_DIAM`
     - 0.0
     - Shot sleeve cross section diameter.

       Used to correct the metal flow rate. If only half of the domain is modeled, the diameter needs to be scaled to reflect the real cross section area in the simulation.
     - [L]

.. index::
   single: component properties; squeeze pins

.. _ComponentPropertiesSqueezePins:

Component Properties: Squeeze Pins
=====================================================================

| *m* :math:`\leq` *500, component index*

.. note:: \ Only works with simple solidification model (:envvar:`ISHRNK` = 2 in :ref:`PhysicalModelOptions`).

.. seealso:: \  :doc:`model-reference` -->  :ref:`squeezePinsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_SQPIN(m)`
     - 0
     - Squeeze pin flag

       | =0, component is not a squeeze pin
       | =1, component is a a squeeze pin

       .. note:: used when :envvar:`IMO(m)` = 0, 3, or 4.
     - NONE

   * - :envvar:`SQP_X1(m)`
     - 0
     - x coordinate of point #1 that defines the direction of the squeeze pin's motion.
     - [L]

   * - :envvar:`SQP_Y1(m)`
     - 0
     - Y coordinate of point #1 that defines the direction of the squeeze pin's motion.
     - [L]

   * - :envvar:`SQP_Z1(m)`
     - 0
     - Z coordinate of point #1 that defines the direction of the squeeze pin's motion.
     - [L]

   * - :envvar:`SQP_X2(m)`
     - 0
     - x coordinate of point #2 that defines the direction of the squeeze pin's motion.
     - [L]

   * - :envvar:`SQP_Y2(m)`
     - 0
     - y coordinate of point #2 that defines the direction of the squeeze pin's motion.
     - [L]

   * - :envvar:`SQP_Z2(m)`
     - 0
     - z coordinate of point #2 that defines the direction of the squeeze pin's motion.

       .. note:: The pin moves in the direction from point #1 to point #2. Points #1 and #2 can be anywhere on the line of action; they only define the direction of motion.
     - [L]

   * - :envvar:`ISQP_CONTROL(m)`
     - 0
     - Squeeze pin activation flag

       | =0, not activated
       | =1, automatically activate
       | =2, time activated
       | =3, active simulation control
     - NONE

   * - :envvar:`SQP_FORCE(m)`
     - 0.0
     - Constant force applied to squeeze pin

       Only used with TSE (:envvar:`ITHRMST` = 1) model.
     - [M L t\ :sup:`-2`]

   * - :envvar:`SQP_TIME(m)`
     - 0.0
     - Squeeze pin activation time

       Used when :envvar:`ISQP_CONTROL(m)` = 2.
     - [t]

   * - :envvar:`SQP_DISTANCE(m)`
     - unlimited
     - Maximum distance the pin can move
     - [L]

   * - :envvar:`SQP_SOLID(m)`
     - 1.0
     - Fraction of pin's surface covered by solid when its movement stops

       .. note:: The range is [0,1]. Can only be modified by directly editing the :file:`prepin.*` file. 
     - NONE

.. index:: active simulation control; squeeze pins

.. _EventsSqueezePins:

Active simulation control of squeeze pin activation
----------------------------------------------------------

| *m* :math:`\leq` *500, component index*
| *j* :math:`\leq` *10, probe condition index*

.. note:: \ Only works when the squeeze pin is specified to be activated by active simulation control (:envvar:`ISQP_CONTROL(m)` = 3 in :ref:`ComponentPropertiesSqueezePins`).

.. seealso:: \  :doc:`model-reference` -->  :ref:`activeSimulationControlMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTEventsSqueezePins:

.. list-table:: Namelist XPUT
   :widths: 25 15 40 20
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`EVENT_NAME_SQP(m)`
     - ' '
     - Squeeze pin :envvar:`m` activation event name (up to 50 characters)
     - NONE

   * - :envvar:`IF_GLOBAL_SQP(m)`
     - 0
     - Global condition flag for squeeze pin :envvar:`m` activation event

       | =0, use local conditions
       | =1, use global conditions

     - NONE

   * - :envvar:`IGLOBAL_SQP(m)`
     - 0
     - Global condition id for squeeze pin :envvar:`m` activation event (used if :envvar:`IF_GLOBAL_SQP(m)` = 0)
     - NONE

   * - :envvar:`NPROBES_SQP(m)`
     - 0
     - Number of local probe conditions for the activation event (used if :envvar:`IF_GLOBAL_SQP(m)` = 1)
     - NONE

   * - :envvar:`EVENT_CONDITION_LOGIC_SQP(m)`
     - ' '
     - Logical operator between probe conditions for the activation event

       | ='ANY', event triggered when any of the enabled probe conditions satisfied
       | ='ALL', event triggered when all of the enabled probe conditions satisfied

       .. note:: Required when number of enabled probe conditions > 1
     - NONE

   * - :envvar:`IF_CONDITION_ENABLED_SQP(j,m)`
     - 1
     - Probe condition :envvar:`j` enable/disable flag for the activation event

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IPRBD_SQP(j,m)`
     - 0
     - Probe id for probe condition :envvar:`j`
     - NONE

   * - :envvar:`PRBVNAM_SQP(j,m)`
     - ...
     - Probe variable name for probe condition :envvar:`j`

       .. note:: only `tn` (fluid temperature) and 'fs' (solid fraction) are allowed.  See also :ref:`namelistXPUTTerminationControlPRBVNAM` for reference.
     - NONE

   * - :envvar:`IFPRBVABS_SQP(j,m)`
     - 0
     - Specify if to use the absolute probe variable value for probe condition :envvar:`j`

       | =0, use the real value
       | =1, use absolute value
     - NONE

   * - :envvar:`PRBVROP_SQP(j,m)`
     - ' '
     - Probe variable relational operator for probe condition :envvar:`j`

       | ='LT', probe condition satisfied when probe variable value is *less* than the critical value
       | ='LE', probe condition satisfied when probe variable value is *less* than or *equal* to the critical value
       | ='EQ', probe condition satisfied when probe variable value is *equal* to the critical value
       | ='NE', probe condition satisfied when probe variable value is *not equal* to the critical value
       | ='GE', probe condition satisfied when probe variable value is *greater* than or *equal* to the critical value
       | ='GT', probe condition satisfied when probe variable value is *greater* than the critical value
     - NONE

   * - :envvar:`PRBVAL_CRITICAL_SQP(j,m)`
     - 0.0
     - Critical value for probe condition :envvar:`j`
     - NONE

   * - :envvar:`PRBDT_SQP(j,m)`
     - 0.0
     - Duration after the critical value has reached for probe condition :envvar:`j`
     - [t]

.. index::
   single: general moving objects model; springs, ropes and mooring lines

.. index:: elastic springs, ropes and mooring lines

.. _ElasticSpringsandRopes:

Elastic Springs, Ropes and Mooring Lines
=====================================================================

| *m* :math:`\leq` *500, component index*
| *nsp* :math:`\geq` *100, elastic spring/rope index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`gmoSpringsRopesMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_SPRP_ENABLED(nsp)`
     - 1
     - Activation flag for spring/rope/line :envvar:`nsp`

       | =0, spring/rope/line disabled
       | =1, spring/rope/line enabled
     - NONE 

   * - :envvar:`IFSP(nsp)`
     - 2
     - Type of elastic spring, rope or mooring line :envvar:`nsp`

       | =1, elastic rope. Used when :envvar:`IMO(m)` = 4, where :envvar:`m` = :envvar:`IOBSP1(nsp)` or :envvar:`IOBSP2(nsp)`.
       | =2, compression-extension spring. Used when :envvar:`IMO(m)` = 4, where :envvar:`m` = :envvar:`IOBSP1(nsp)` or :envvar:`IOBSP2(nsp)`.
       | =3, compression spring. Used when :envvar:`IMO(m)` = 4, where :envvar:`m` = :envvar:`IOBSP1(nsp)` or :envvar:`IOBSP2(nsp)`.
       | =4, extension spring. Used when :envvar:`IMO(m)` = 4, where :envvar:`m` = :envvar:`IOBSP1(nsp)` or :envvar:`IOBSP2(nsp)`.
       | =5, torsion spring. Used when :envvar:`IMO(m)` = 4 and :envvar:`IMOAXS(m)` = 1, 2 or 3, where :envvar:`m` = :envvar:`IOBSP1(nsp)`.
       | =6, mooring line. Used when :envvar:`IMO(m)` = 3 or 4, where :envvar:`m` = :envvar:`IOBSP1(nsp)` or :envvar:`IOBSP2(nsp)`.       
     - NONE

   * - :envvar:`IOBSP1(nsp)`
     - 0
     - Index of the geometry component which end 1 of the spring/rope :envvar:`nsp` is attached to. Equal to 0 if fixed at a stationary point in space. 

       .. note:: Used if :envvar:`IFSP(nsp)` = 1, 2, 3, 4, 5 or 6.
     - NONE

   * - :envvar:`IOBSP2(nsp)`
     - 0
     - Index of the geometry component which end 2 of the spring/rope :envvar:`nsp` is attached to. Equal to 0 if fixed at a stationary point in space. 

       .. note:: Used if :envvar:`IFSP(nsp)` :math:`\ne` 5.
     - NONE

   * - :envvar:`ASP(nsp)`
     - ...
     - Free length of spring/rope :envvar:`nsp`

       .. note:: Default is the initial distance between two ends of the spring/rope, as defined by component setup.

       .. note:: Used if :envvar:`IFSP(nsp)` = 1, 2, 3, 4, or 6.
     - [L]

   * - :envvar:`BSP(nsp)`
     - 10% × :envvar:`ASP(nsp)`
     - Block length of spring :envvar:`nsp`.

       .. note:: Used if :envvar:`IFSP(nsp)` = 2 or 3.
     - [L]

   * - :envvar:`CDSPN(nsp)`
     - 1.0
     - Drag coefficient in the normal direction of mooring line :envvar:`nsp`.

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - NONE

   * - :envvar:`CDSPT(nsp)`
     - 0.3
     - Drag coefficient in the tangential direction of mooring line :envvar:`nsp`.

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - NONE

   * - :envvar:`CSP(nsp)`
     - ...
     - Spring coefficient of spring/rope :envvar:`nsp`. Units in [force]/[length] if :envvar:`IFSP(nsp)` :math:`\ne` 5 and [torque]/[degrees] if :envvar:`IFSP(nsp)` = 5.

       .. note:: Used if :envvar:`IFSP(nsp)`:math:`\ne` 6.
     - [M/t\ :sup:`2`] or [M L\ :sup:`2` t\ :sup:`-2`/DEGREES]

   * - :envvar:`CSPUNIT(nsp)`
     - ...
     - Spring coefficient per unit length for mooring line :envvar:`nsp`.

       .. note:: 
          * Used if :envvar:`IFSP(nsp)` = 6.     
          * Can be approximated by the product of the modulus of elasticity and the cross-sectional area.
     - [M L t :sup:`-2`] 

   * - :envvar:`DIASP(nsp)`
     - 0.0
     - Diameter of mooring line :envvar:`nsp`. 

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - [L]

   * - :envvar:`DMPSP(nsp)`
     - 0.0
     - Damping coefficient for spring/rope :envvar:`nsp`. Units in [force][t]/[length] if :envvar:`IFSP(nsp)` :math:`\ne` 5 and [torque][t]/[degrees] if :envvar:`IFSP(nsp)` = 5.

       .. note:: Used if :envvar:`IFSP(nsp)`:math:`\ne` 6.
     - [M/t] or [M L\ :sup:`2` t\ :sup:`-1`/DEGREES]

   * - :envvar:`FSPBRK(nsp)`
     - ...
     - minimum breaking load of mooring line :envvar:`nsp`. 

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - [M L t\ :sup:`2`]

   * - :envvar:`NSEGSP(nsp)`
     - 31
     - total number of segments that the mooring line :envvar:`nsp` is divided into.

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - NONE

   * - :envvar:`NSPRP`
     - 0
     - Total number of elastic springs, elastic ropes and mooring lines.
     - NONE

   * - :envvar:`RHOSP(nsp)`
     - ...
     - Linear mass density of mooring line :envvar:`nsp`.

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - [M L\ :sup:`-1`]

   * - :envvar:`RHOSP_MAT(nsp)`
     - ...
     - Net mass density of mooring line :envvar:`nsp`.

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - [M L\ :sup:`-3`]

   * - :envvar:`SPRINGNAME(nsp)`
     - ' '
     - Spring :envvar:`nsp` name (up to 256 characters)
     - NONE

   * - :envvar:`TSP0(nsp)`
     - 0.0
     - Initial torque of torsion spring nsp.

       .. note:: Used if :envvar:`IFSP(nsp)` = 5.
     - [M L\ :sup:`2` t\ :sup:`-2`]

   * - :envvar:`XSP01(nsp)`
     - ...
     - Initial x-coordinate of end 1 of the spring/rope :envvar:`nsp`
     - [L]

   * - :envvar:`XSP02(nsp)`
     - ...
     - Initial x-coordinate of end 2 of the spring/rope :envvar:`nsp`
     - [L]

   * - :envvar:`XSPMN(nsp)`
     - ...
     - Lower limit of x-coordinate for the mooring line :envvar:`nsp`

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - [L]

   * - :envvar:`XSPMX(nsp)`
     - ...
     - Upper limit of x-coordinate for the mooring line :envvar:`nsp`

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - [L]

   * - :envvar:`YSP01(nsp)`
     - ...
     - Initial y-coordinate of end 1 of the spring/rope :envvar:`nsp`
     - [L]

   * - :envvar:`YSP02(nsp)`
     - ...
     - Initial y-coordinate of end 2 of the spring/rope :envvar:`nsp`
     - [L]

   * - :envvar:`YSPMN(nsp)`
     - ...
     - Lower limit of y-coordinate for the mooring line :envvar:`nsp`

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - [L]

   * - :envvar:`YSPMX(nsp)`
     - ...
     - Upper limit of y-coordinate for the mooring line :envvar:`nsp`

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - [L]

   * - :envvar:`ZSP01(nsp)`
     - ...
     - Initial z-coordinate of end 1 of the spring/rope :envvar:`nsp`
     - [L]

   * - :envvar:`ZSP02(nsp)`
     - ...
     - Initial z-coordinate of end 2 of the spring/rope :envvar:`nsp`
     - [L]

   * - :envvar:`ZSPMN(nsp)`
     - ...
     - Lower limit of z-coordinate for the mooring line :envvar:`nsp`

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - [L]

   * - :envvar:`ZSPMX(nsp)`
     - ...
     - Upper limit of z-coordinate for the mooring line :envvar:`nsp`

       .. note:: Used if :envvar:`IFSP(nsp)` = 6.
     - [L]

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist XPUT
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`RHOAIR`
     - ...
     - Air density for use in the calculation of air drag on mooring lines for the parts of a
       mooring line that are exposed to void regions. 

       | Defaults to air density in simulation units, which is 1.225 kg/m\ :sup:`3` in SI system.

       .. seealso:: \  :doc:`theory` -->  :ref:`mooringlinesth`.

     - [M/L\ :sup:`3`]      


.. index::
   single: component properties; sediment scour

.. index:: sediment scour

.. _ComponentPropertiesSedimentScourComponentParameters:

Component Properties: Sediment Scour Component Parameters
=====================================================================

| *m* :math:`\leq` *500, component index*
| *n* :math:`\leq` *500, subcomponent index*
| *k* :math:`\leq` *than 10, sediment species index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`sedimentScourMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOB(m)`
     - 0
     - "Free" (or phantom) component flag

       | =-2, core gas component
       | =-1, porous component
       | = 0, regular component
       | = 1, lost foam component
       | = 2, fan/impeller component
       | = 3, sediment scour component
       | = 4, specified velocity phantom component for continuous casting
       | = 5, domain removing component
       | = 6, flow vent component
       | = 7, FEA domain removing component
       | = 8, sampling volume component
       | = 9, surface roughness component providing roughness height or Manning's roughness coefficien (:ref:`surfaceroughnesscomptype` component type)
       | = 10, wave absorbing component
       | = 11, meshing component        

       .. note:: For :envvar:`IFOB` :math:`>` 0, components do not contribute to area and volume blockages, so the component will not be visible in component plots, except for the :envvar:`IFOB(m)` = 5 type.
     - NONE

   * - :envvar:`SVFSUB(n,k)`
     - 0.0 for :envvar:`nsspc` :math:`>` 1; 1.0 for  :envvar:`nsspc` =1
     - Volume fraction of sediment species :envvar:`k` in subcomponent n

       This is a dimensionless fractional value, and |prod| automatically normalizes values such that values sum to 1.0. Valid only when sediment & scour model is turned on (:envvar:`ISCOUR` = 1) and component flag :envvar:`IFOB(m)` = 3 is specified.

     - NON-DIM

.. index::
   single: component properties; shallow water

.. index:: shallow water

.. _ComponentPropertiesShallowWater:

Component Properties: Shallow Water
=====================================================================

| *m* :math:`\leq` *500, component index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`shallowWaterFlowsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IBTMSHR(m)`
     - 0
     - Flag for the calculation of the drag coefficient in shallow water shear stress on component :envvar:`m`

       | = 0, drag coefficient is equal to :envvar:`CBTMSHR(m)`
       | = 1, use user-defined roughness to calculate the drag coefficient
       | = 2, use user-defined Manning Roughness Coefficient to calculate drag coefficient

     - NONE
  
   * - :envvar:`CBTMSHR(m)`
     - :envvar:`BTMSHR`
     - Drag coefficient in the shallow water shear stress on component :envvar:`m`
     - NONE
  
   * - :envvar:`RCMAN(m)`
     - 0.0
     - Manning roughness coefficient on component :envvar:`m`
     - [t/L\ :sup:`1/3`]

   * - :envvar:`RCMANSUB(n)`
     - RCMAN(m)
     - Manning roughness coefficient for subcomponent :envvar:`n` that belongs to component :envvar:`m`. Note only value in SI unit is used.
     - [t/L\ :sup:`1/3`]

   * - :envvar:`IMANUSE(m)`
     - 0
     - Flag for input method for Manning's roughness coefficient for component :envvar:`m`

       | = 0, use CRMAN(m) or CRMANSUB(n) 
       | = 1, use raster files

     - NONE

.. index::
   single: component properties; simple moving objects

.. index:: simple moving objects

.. _ComponentPropertiesSimpleMovingObjects:

Component Properties: Simple Moving Objects
=====================================================================

.. index::
   single: components; moving web

.. index:: moving web components

.. _MovingWebComponents:

Moving Web Components
-----------------------

| *t* :math:`\leq` *500, time index*
| *m is less than or equal to 500, component index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IMO(m)`
     - 0
     - Type of component :envvar:`m`

       | = 0, stationary component
       | = 2, moving web / sliding motion component; the component surface tangential velocity is specified in :file:`velobs.f` by :envvar:`UTOBS`, :envvar:`VTOBS`, and :envvar:`WTOBS`.  
       | = 3, prescribed-motion of general moving object
       | = 4, coupled-motion of general moving object

       .. note:: 
          * :envvar:`IMOBS` = 1 must be set in :ref:`PhysicalModelOptions` when :envvar:`IMO` = 2, = 3, or = 4.
     - NONE

   * - :envvar:`TOBS(t)`
     - 0.0
     - Times for time-dependent component arrays
     - [t]

   * - :envvar:`UTOBS(t,m)`
     - 0.0
     - Time-dependent component :envvar:`m` velocity in x-direction at time :envvar:`TOBS(t)`

       .. note:: Only used when :envvar:`IFOB(m)` = 4 or :envvar:`IMO(m)` = 2, 3, or 4.
     - [L/t]

   * - :envvar:`VTOBS(t,m)`
     - 0.0
     - Time-dependent component :envvar:`m` velocity in y-direction at time :envvar:`TOBS(t)`

       .. note:: Only used when :envvar:`IFOB(m)` = 4 or :envvar:`IMO(m)` = 2, 3, or 4.
     - [L/t]

   * - :envvar:`WTOBS(t,m)`
     - 0.0
     - Time-dependent component :envvar:`m` velocity in z-direction at time :envvar:`TOBS(t)`

       .. note:: Only used when :envvar:`IFOB(m)` = 4 or :envvar:`IMO(m)` = 2, 3, or 4.
     - [L/t]

.. index::
   single: components; spinning

.. index:: spinning components

.. _SpinningComponents:

Spinning Components
-----------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS
   
   * - :envvar:`IFSPIN(m)`
     - 0
     - Flag for axisymmetric spinning component :envvar:`m`

       | = 0, not an axisymmetric spinning component
       | = 1, axisymmetric spinning component
     - NONE

   * - :envvar:`CMOX(m)`
     - ...
     - x coordinate of point 1 on spin axis for spinning component :envvar:`m`.
     - [L]

   * - :envvar:`CMOY(m)`
     - ...
     - y coordinate of point 1 on spin axis for spinning component :envvar:`m`.
     - [L]

   * - :envvar:`CMOZ(m)`
     - ...
     - z coordinate of point 1 on spin axis for spinning component :envvar:`m`.
     - [L]

   * - :envvar:`CMOX2(m)`
     - ...
     - x coordinate of point 2 on spin axis for spinning component :envvar:`m`.
     - [L]

   * - :envvar:`CMOY2(m)`
     - ...
     - y coordinate of point 2 on spin axis for spinning component :envvar:`m`.
     - [L]

   * - :envvar:`CMOZ2(m)`
     - ...
     - z coordinate of point 2 on spin axis for spinning component :envvar:`m`.
     - [L]

   * - :envvar:`OSPIN(t,m)`
     - 0.0
     - Spin rate for rotating component :envvar:`m` at time :envvar:`TOBS(t)`

       .. note:: Component must be axisymmetric about axis of spin. The spin axis is determined by :envvar:`CMOX(m)`, :envvar:`CMOY(m)`, :envvar:`CMOZ(m)`, :envvar:`CMOX2(m)`, :envvar:`CMOY2(m)` and :envvar:`CMOZ2(m)`.
     - [radians/t]

   * - :envvar:`FOSPIN(m)`
     - 
     - The external filename for tabular spin rate for rotating component :envvar:`m` as a function of time (used only if :envvar:`IOSPINC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IOSPINC(m)`
     - 0
     - The column number for spin rate for rotating component :envvar:`m` in the external file

       .. note:: Component must be axisymmetric about axis of spin. The spin axis is determined by :envvar:`CMOX(m)`, :envvar:`CMOY(m)`, :envvar:`CMOZ(m)`, :envvar:`CMOX2(m)`, :envvar:`CMOY2(m)` and :envvar:`CMOZ2(m)`
     - NONE

.. index::
   single: component; fan or impeller

.. index:: fan or impeller components

.. _FanorImpellerComponents:

Fan or Impeller Components
-------------------------------

.. note:: A non-zero viscosity is required for the fan/impeller model.

.. seealso:: \  

   * :doc:`model-reference` -->  :ref:`fanAndImpellerMR`.

   * Theory manual section: :ref:`FanAndImpellerModelTh`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOB(m)`
     - 0
     - "Free" (or phantom) component flag

       | =-2, core gas component
       | =-1, porous component
       | = 0, regular component
       | = 1, lost foam component
       | = 2, fan/impeller component
       | = 3, sediment scour component
       | = 4, specified velocity phantom component for continuous casting
       | = 5, domain removing component
       | = 6, flow vent component
       | = 7, FEA domain removing component
       | = 8, sampling volume component
       | = 9, surface roughness component providing roughness height or Manning's roughness coefficien (:ref:`surfaceroughnesscomptype` component type)
       | = 10, wave absorbing component
       | = 11, meshing component        

       .. note:: For :envvar:`IFOB` :math:`>` 0, components do not contribute to area and volume blockages, so the component will not be visible in component plots, except for the :envvar:`IFOB(m)` = 5 type.
     - NONE

   * - :envvar:`CMOX(m)`
     - ...
     - x coordinate of point 1 on spin axis for fan/impleller component :envvar:`m`.
     - [L]

   * - :envvar:`CMOY(m)`
     - ...
     - y coordinate of point 1 on spin axis for fan/impeller component :envvar:`m`.
     - [L]

   * - :envvar:`CMOZ(m)`
     - ...
     - z coordinate of point 1 on spin axis for fan/impeller component :envvar:`m`.
     - [L]

   * - :envvar:`CMOX2(m)`
     - ...
     - x coordinate of point 2 on spin axis for fan/impeller component :envvar:`m`.
     - [L]

   * - :envvar:`CMOY2(m)`
     - ...
     - y coordinate of point 2 on spin axis fan/impeller component :envvar:`m`.
     - [L]

   * - :envvar:`CMOZ2(m)`
     - ...
     - z coordinate of point 2 on spin axis fan/impeller component :envvar:`m`.
     - [L]

   * - :envvar:`OADRG(m)`
     - 0.0
     - For fan/impeller component :envvar:`m`, the accommodation coefficient for rotational velocity.
     - [1/t]

   * - :envvar:`OBDRG(m)`
     - 0.0 
     - For fan/impeller component :envvar:`m`, the accommodation coefficient for axial velocity. A negative axial velocity is generated by :envvar:`OBDRG` :math:`<` 0.
     - [1/radians]

   * - :envvar:`OSPIN(t,m)`
     - 0.0
     - Spin rate for rotating component :envvar:`m` at time :envvar:`TOBS(t)`. Component must be axisymmetric about axis of spin. The spin axis are determined by :envvar:`CMOX(m)`, :envvar:`CMOY(m)`, :envvar:`CMOZ(m)`, :envvar:`CMOX2(m)`, :envvar:`CMOY2(m)` and :envvar:`CMOZ2(m)`.
     - [radians/t]

   * - :envvar:`NOBLDS(m)`
     - 0
     - Number of blades for added bladed effects
     - NONE

   * - :envvar:`OBLTHK(m)`
     - 0.0
     - Blade tip thickness in the azimuthal direction (in units of length)
     - [L]

.. index::
   single: continuous casting; linear motion

.. _LinearMotionforContinuousCasting:

Linear Motion for Continuous Casting
----------------------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOB(m)`
     - 0
     - "Free" (or phantom) component flag

       | =-2, core gas component
       | =-1, porous component
       | = 0, regular component
       | = 1, lost foam component
       | = 2, fan/impeller component
       | = 3, sediment scour component
       | = 4, specified velocity phantom component for continuous casting
       | = 5, domain removing component
       | = 6, flow vent component
       | = 7, FEA domain removing component
       | = 8, sampling volume component
       | = 9, surface roughness component providing roughness height or Manning's roughness coefficien (:ref:`surfaceroughnesscomptype` component type)
       | = 10, wave absorbing component
       | = 11, meshing component        

       .. note:: For :envvar:`IFOB` :math:`>` 0, components do not contribute to area and volume blockages, so the component will not be visible in component plots, except for the :envvar:`IFOB(m)` = 5 type.
     - NONE

   * - :envvar:`UTOBS(t,m)`
     - 0.0
     - Time-dependent component :envvar:`m` velocity in x-direction at time :envvar:`TOBS(t)`

       .. note:: Only used when :envvar:`IFOB(m)` = 4 or :envvar:`IMO(m)` = 2, 3, or 4.
     - [L/t]

   * - :envvar:`VTOBS(t,m)`
     - 0.0
     - Time-dependent component :envvar:`m` velocity in y-direction at time :envvar:`TOBS(t)`

       .. note:: Only used when :envvar:`IFOB(m)` = 4 or :envvar:`IMO(m)` = 2, 3, or 4.
     - [L/t]

   * - :envvar:`WTOBS(t,m)`
     - 0.0
     - Time-dependent component :envvar:`m` velocity in z-direction at time :envvar:`TOBS(t)`

       .. note:: Only used when :envvar:`IFOB(m)` = 4 or :envvar:`IMO(m)` :math:`\ne` 0.
     - [L/t]

.. index::
   single: component properties; general moving objects model

.. index::
   pair: GMO; general moving objects model

.. _ComponentPropertiesParticles:

Component Properties: Particles
=====================================================================

| *m* :math:`\leq` *500, component index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IOPMARKER_RESTIT(m)`
     - 0
     - Flag for interaction of marker particles with component :envvar:`m`

       | =0, marker particles do not stick to component :envvar:`m`
       | =-1, marker particles stick to component :envvar:`m` upon first contact

       .. note:: Marker particles do not bounce off walls.
       .. note:: The minimum of :envvar:`IOPMARKER_RESTIT(m)` and :envvar:`IPMARKER_RESTIT` is used. 
     - NONE 

   * - :envvar:`OPMASS_RESTIT(m)`
     - 1.0
     - Mass particle coefficient of restitution for component :envvar:`m`

       | :math:`<` 0, particles stick when they first come in contact with component :envvar:`m`.
       | =0.0, no particle reflection
       | =1.0, full specular particle reflection

       .. note:: The minimum of :envvar:`OPMASS_RESTIT(m)` and :envvar:`PMASS_RESTIT` is used.    
     - NON-DIM 

   * - :envvar:`OPGAS_RESTIT(m)`
     - 1.0
     - Gas particle coefficient of restitution for component :envvar:`m`

       | :math:`<` 0, particles stick when they first come in contact with component :envvar:`m`.
       | =0.0, no particle reflection
       | =1.0, full specular particle reflection

       .. note:: The minimum of :envvar:`OPGAS_RESTIT(m)` and :envvar:`PGAS_RESTIT` is used.    
     - NON-DIM

   * - :envvar:`OPLIQUID_RESTIT(m)`
     - 1.0
     - Fluid particle coefficient of restitution for component :envvar:`m` for particles in liquid state

       | :math:`<` 0, particles stick when they first come in contact with component :envvar:`m`.
       | =0.0, no particle reflection
       | =1.0, full specular particle reflection

       .. note:: The minimum of :envvar:`OPLIQUID_RESTIT(m)` and :envvar:`PLIQUID_RESTIT` is used.    
     - NON-DIM

   * - :envvar:`OPLIQUIDSD_RESTIT(m)`
     - 1.0
     - Fluid particle coefficient of restitution for component :envvar:`m` for particles in solid state. Used when :envvar:`IFSLD` = 1.

       | :math:`<` 0, particles stick when they first come in contact with component :envvar:`m`.
       | =0.0, no particle reflection
       | =1.0, full specular particle reflection

       .. note:: The minimum of :envvar:`OPLIQUIDSD_RESTIT(m)` and :envvar:`PLIQUIDSD_RESTIT` is used.    
     - NON-DIM

   * - :envvar:`OPVOID_RESTIT(m)`
     - 1.0
     - Void particle coefficient of restitution for component :envvar:`m`

       | :math:`<` 0, particles stick when they first come in contact with component :envvar:`m`.
       | =0.0, no particle reflection
       | =1.0, full specular particle reflection

       .. note:: The minimum of :envvar:`OPVOID_RESTIT(m)` and :envvar:`PVOID_RESTIT` is used.    
     - NON-DIM               

.. index::
   single: graphic output; sampling volumes

.. index:: sampling volumes

.. _OutputSamplingVolumes:

Output: Sampling Volumes
----------------------------------

.. note:: 
   * Sampling volumes add data to :file:`flsgrf` that include forces and moments on all solid surfaces within each sampling volume as well 
     as integrated, average and min/max quantities that mimic those computed for the whole domain, but calculated within the volume covered
     by the sampling volume component. Note that cells that are only partially covered by a sampling volume component are *fully* included 
     in the integrations. 
     Fluid forces on *individual* components are requested by setting :envvar:`IFRCO(m)` = 1 in namelist :envvar:`OBS`. 

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOB(m)`
     - 0
     - "Free" (or phantom) component flag

       | =-2, core gas component
       | =-1, porous component
       | = 0, regular component
       | = 1, lost foam component
       | = 2, fan/impeller component
       | = 3, sediment scour component
       | = 4, specified velocity phantom component for continuous casting
       | = 5, domain removing component
       | = 6, flow vent component
       | = 7, FEA domain removing component
       | = 8, sampling volume component
       | = 9, surface roughness component providing roughness height or Manning's roughness coefficien (:ref:`surfaceroughnesscomptype` component type)
       | = 10, wave absorbing component
       | = 11, meshing component        

       .. note:: For :envvar:`IFOB` :math:`>` 0, components do not contribute to area and volume blockages, so the component will not be visible in component plots, except for the :envvar:`IFOB(m)` = 5 type.
     - NONE


.. index::
   single: component properties; deforming components

.. index:: deforming components

.. _ComponentPropertiesDeformingComponents:

Component Properties: Deforming Components
=====================================================================

.. note:: \ :envvar:`IMEMB` = 1 must be set in namelist :envvar:`XPUT` to use the deforming component model.

.. index:: elastic membrane

.. _ElasticMembrane:

Elastic Membrane
-----------------------

.. seealso:: \  :doc:`model-reference` -->  :ref:`elasticMembraneMR`.

| *m* :math:`\leq` *500, component index*
| *t* :math:`\leq` *500, time index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IMB(m)`
     - 0
     - Type of deforming object

       | =0, not a deforming object
       | =1, rectangular elastic membrane
       | =2, circular elastic membrane
       | =3, elastic wall
     - NONE

   * - :envvar:`IMBE(m)`
     - 1
     - Type of membrane edge

       | =1, clamped edge
       | =2, simply supported edge
     - NONE

   * - :envvar:`IMBN(m)`
     - 3
     - Normal direction of membrane

       | =1, in x-direction
       | =2, in y-direction
       | =3, in z-direction
     - NONE

   * - :envvar:`IMBPR(m)`
     - 0
     - Flag for fluid pressure force on membrane

       | =0, fluid pressure force is considered
       | =1, fluid pressure force is ignored
     - NONE

   * - :envvar:`NFMBW(m)`
     - 3
     - Type of actuator force (always along the membrane's normal and positive in the positive direction of the coordinate axis)

       =1, sinusoidal force,

       .. math:: F = A\sin (\omega \,t + {\varphi _{\,0}})

       =2, tabular values of force vs. time are provided

     - NONE

   * - :envvar:`EMBW(m)`
     - ...
     - Young's modulus
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`FAMP(m)`
     - 0.0
     - Amplitude of sinusoidal actuator force

       Used when :envvar:`NFMBW(m)` = 1.
     - [M L t\ :sup:`2`]

   * - :envvar:`FMBW(t,m)`
     - 0.0
     - Actuator force at time :envvar:`TOBS(t)`. 

       .. note:: Used when :envvar:`NFMBW(m)` = 2.
     - [M L t\ :sup:`2`]

   * - :envvar:`FFMBW(m)`
     - 
     - The external filename for tabular actuator force for component :envvar:`m` as a function of time (used only if :envvar:`IPOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IFMBWC(m)`
     - 0
     - The column number for actuator force for component :envvar:`m` in the external file

       .. note:: Used when :envvar:`NFMBW(m)` = 2.
     - NONE

   * - :envvar:`FREQ(m)`
     - 0.0
     - Frequency of sinusoidal actuator force

       .. note:: Used when :envvar:`NFMBW(m)` = 1. Units are Hertz.
     - [1/t]

   * - :envvar:`FPHS(m)`
     - 0.0
     - Initial phase of sinusoidal actuator force

       .. note:: Used when :envvar:`NFMBW(m)` = 1. Units are degrees. 

     - [DEGREES]

   * - :envvar:`PREFMBW(m)`
     - :envvar:`PVOID`
     - Reference pressure

       .. seealso:: \  :envvar:`PVOID` in :ref:`InitialConditionsUniform`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`RAMBW(m)`
     - ...
     - Radius of the circular membrane

       .. note:: Used when :envvar:`IMB(m)` = 2.
     - [L]

   * - :envvar:`RFMBW(m)`
     - 0.0
     - Radius of the circular distribution area of actuator force

       .. note:: Used when :envvar:`IMB(m)` = 2.
     - [L]

   * - :envvar:`RHOMBW(m)`
     - -1.0
     - Mass density of the membrane
     - [M/L\ :sup:`3`]

   * - :envvar:`RPMBW(m)`
     - ...
     - Poisson's Ratio of the membrane
     - NON-DIM

   * - :envvar:`TOBS(m)`
     - 0.0
     - Time for time-dependent component arrays
     - [t]

   * - :envvar:`XCMBW(m)`
     - ...
     - x-coordinate of the membrane center
     - [L]

   * - :envvar:`XFMBW(m)`
     - 0.0
     - x-length of the rectangular distribution area of actuator force

       .. note:: Used when :envvar:`IMB(m)` = 1.
     - [L]

   * - :envvar:`XMBW(m)`
     - ...
     - x-length of rectangular membrane. 

       .. note:: Used when :envvar:`IMB(m)` = 1.
     - [L]

   * - :envvar:`YCMBW(m)`
     - ...
     - y-coordinate of the membrane center
     - [L]

   * - :envvar:`YFMBW(m)`
     - 0.0
     - y-length of the rectangular distribution area of actuator force

       .. note:: Used when :envvar:`IMB(m)` = 1.
     - [L]

   * - :envvar:`YMBW(m)`
     - ...
     - y-length of rectangular membrane. 

       .. note:: Used when :envvar:`IMB(m)` = 1.
     - [L]

   * - :envvar:`ZCMBW(m)`
     - ...
     - z-coordinate of the membrane center
     - [L]

   * - :envvar:`ZFMBW(m)`
     - 0.0
     - z-length of the rectangular distribution area of actuator force

       .. note:: Used when :envvar:`IMB(m)` = 1.
     - [L]

   * - :envvar:`ZMBW(m)`
     - ...
     - z-length of rectangular membrane. 

       .. note:: Used when :envvar:`IMB(m)` = 1.
     - [L]

.. index:: elastic wall

.. _ElasticWall:

Elastic Wall
----------------

.. seealso:: \  :doc:`model-reference` -->  :ref:`elasticWallMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IMB(m)`
     - 0
     - Type of deforming object

       | =0, not a deforming object
       | =1, rectangular elastic membrane
       | =2, circular elastic membrane
       | =3, elastic wall

     - NONE

   * - :envvar:`PREFMBW(m)`
     - :envvar:`PVOID`
     - Reference pressure

       .. seealso:: \  :envvar:`PVOID` in :ref:`InitialConditionsUniform`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`CSPMBW(m)`
     - 1.0\ :math:`\times`\ 10\ :sup:`35`
     - Stiffness coefficient per unit area. Deformation of elastic wall is negligible at the default value of :envvar:`CSPMBW`. 
     - [M L\ :sup:`-2` t\ :sup:`-2`]

.. index::
   single: component properties; porous components

.. index:: porous components

.. _ComponentPropertiesPorousComponents:

Component Properties: Porous Components
=====================================================================

| *m* :math:`\leq` *500, component index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`flowInPorousComponentsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOB(m)`
     - 0
     - "Free" (or phantom) component flag

       | =-2, core gas component
       | =-1, porous component
       | = 0, regular component
       | = 1, lost foam component
       | = 2, fan/impeller component
       | = 3, sediment scour component
       | = 4, specified velocity phantom component for continuous casting
       | = 5, domain removing component
       | = 6, flow vent component
       | = 7, FEA domain removing component
       | = 8, sampling volume component
       | = 9, surface roughness component providing roughness height or Manning's roughness coefficien (:ref:`surfaceroughnesscomptype` component type)
       | = 10, wave absorbing component
       | = 11, meshing component        

       .. note:: For :envvar:`IFOB` :math:`>` 0, components do not contribute to area and volume blockages, so the component will not be visible in component plots, except for the :envvar:`IFOB(m)` = 5 type.
     - NONE

   * - :envvar:`IODRG(m)`
     - 0
     - Drag function flag for porous component, :envvar:`IFOB(m)` =-1

       | =0, no drag
       | =1, Darcian saturated drag
       | =2, Permeability dependent saturated drag
       | =3, not used
       | =4, Forchheimer (quadratic) saturated drag model
       | =5, unsaturated flow in porous media

       .. seealso:: \ 

          * :envvar:`PERM` and :envvar:`PERM2` in :ref:`ComponentPropertiesPorousComponents`. 

          * :envvar:`OADRG` and :envvar:`OBDRG` in :ref:`ComponentPropertiesPorousComponents`.

          * :doc:`model-reference` -->  :ref:`flowInPorousComponentsMR`

          * Theory manual sections: :ref:`DarcianSaturatedDragTh`, :ref:`ForchheimerSaturatedDragTh`, :ref:`CapillaryPressureTh`, and :ref:`DragCalculationsInUnsaturatedFlowsTh`
     - NONE 


.. index:: capillary pressure

.. _CapillaryPressurePCAP:

Capillary Pressure
=============================

.. seealso:: \  :doc:`model-reference` -->  :ref:`UnsaturatedCapillaryEffectsinPorousComponentsMR`

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|
   
.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IOVG(m)`
     - 0
     - | =0, simplified model for capillary pressure used for component :envvar:`m`
       | =1, Van Genuchten model for capillary pressure for component :envvar:`m`
     - NONE

   * - :envvar:`IODFIT(m)`
     - 2
     - Drag function flag relationship between drag and saturation for component :envvar:`m`

       | =1, power-law
       | =2, exponential
       | =3, Mulaen's model of permeability is used

       .. note:: Only used if :envvar:`IODRG(m)` = 5.
     - NONE

   * - :envvar:`IOPCFD(m)`
     - 0
     - Capillary pressure operation mode

       | =0, use both filling and draining curves (2 pressure curves with hysteresis effects)
       | =1, drive pressures to filling curve
       | =2, drive pressures to draining curve

       .. note:: Only used if :envvar:`IODRG(m)` = 5.
     - NONE

   * - :envvar:`PERM(m)`
     - 0.0 
     - Porous component Darcian Permeability (used if :envvar:`IODRG(m)` = 2)

       .. seealso:: \  :envvar:`IODRG` in :ref:`ComponentPropertiesPorousComponents`.
     - [L\ :sup:`2`]

   * - :envvar:`PERM2(m)`
     - 0.0 
     - Porous component non-Darcian Permeability (used if :envvar:`IODRG(m)` = 2)

       .. seealso:: \  :envvar:`IODRG` in :ref:`ComponentPropertiesPorousComponents`.
     - [L]
       
   * - :envvar:`OADRG(m)`
     - 0.0 
     - For porous component, a constant used in porous component drag formulation (used if :envvar:`IODRG(m)` = 1 or :envvar:`IODRG(m)` = 4)

       .. note:: For fan component, :envvar:`IFOB(m)` = 2, the accommodation coefficient for rotational velocity.

       .. seealso:: \  :envvar:`IODRG` in :ref:`ComponentPropertiesPorousComponents`.
     - 
       | :envvar:`IODRG(m)` = 1: [1/t]
       | :envvar:`IODRG(m)` = 4: [1/L\ :sup:`2`]
       | :envvar:`IODRG(m)` = 5 and :envvar:`IODFIT(m)` = 1: [1/t]
       | :envvar:`IODRG(m)` = 5 and :envvar:`IODFIT(m)` = 2: [1/t]
       | :envvar:`IODRG(m)` = 5 and :envvar:`IODFIT(m)` = 3: [L\ :sup:`2`]

   * - :envvar:`OBDRG(m)`
     - 0.0
     - For porous component, a constant used in porous component drag formulation (used if :envvar:`IODRG(m)` = 4 or 5).

       .. note:: For fan component, :envvar:`IFOB(m)` = 2, the accommodation coefficient for axial velocity. A negative axial velocity is generated by :envvar:`OBDRG(m)` :math:`<` 0.

       .. seealso:: \  :envvar:`IODRG` in :ref:`ComponentPropertiesPorousComponents`.
     - 
       | :envvar:`IODRG(m)` = 4: [1/L]
       | :envvar:`IODRG(m)` = 5: NON-DIM.

   * - :envvar:`OPCAP(m)`
     - 0.0 
     - Capillary pressure for component :envvar:`m`

       | :envvar:`OPCAP` :math:`>` 0 indicates a wetting condition.
       | :envvar:`OPCAP` :math:`<` 0 indicates a non-wetting condition.

       .. note:: Used only for saturated porous media, 0 :math:`>` :envvar:`IODRG(m)` :math:`<` 5.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`OPOR(m)`
     - ...
     - Component porosity (open volume fraction)

       .. note:: Defaults to the maximum of :envvar:`OPORX(m)`, :envvar:`OPORY(m)`, or :envvar:`OPORZ(m)` if they have been set; otherwise defaults to 0.0.
     - NON-DIM

   * - :envvar:`OPORX(m)`
     - ...
     - Open area per unit area in x-direction

       .. note:: Defaults to :envvar:`OPOR(m)` if no area porosities (:envvar:`OPORY(m)`, :envvar:`OPORZ(m)`) are specified; otherwise defaults to 0.0.
     - NON-DIM

   * - :envvar:`OPORY(m)`
     - ...
     - Open area per unit area in y-direction

       .. note:: Defaults to :envvar:`OPOR(m)` if no area porosities (:envvar:`OPORX(m)`, :envvar:`OPORZ(m)`) are specified; otherwise defaults to 0.0.
     - NON-DIM

   * - :envvar:`OPORZ(m)`
     - ...
     - Open area per unit area in z-direction

       .. note:: Defaults to :envvar:`OPOR(m)` if no area porosities (:envvar:`OPORX(m)`, :envvar:`OPORY(m)`) are specified; otherwise defaults to 0.0.
     - NON-DIM

   * - :envvar:`OSPOR(m)`
     - 1.0
     - Surface area per unit bulk volume for porous component :envvar:`m` (used for heat transfer only). 
     - [1/L]

   * - :envvar:`OFCMN(m)`
     - 0.0
     - Irreducible saturation for component m (value must be less than :envvar:`OFPCMX(m)`).

       .. note:: Only used if :envvar:`IODRG(m)` = 5 in :ref:`ComponentPropertiesPorousComponents`.
     - NON-DIM

   * - :envvar:`OFCMX(m)`
     - 1.0
     - Fully saturated F value for component :envvar:`m`

       .. note:: Only used if :envvar:`IODRG(m)` = 5 in :ref:`ComponentPropertiesPorousComponents`.
     - NON-DIM

   * - :envvar:`OFPCMX(m)`
     - -1.0
     - F value corresponding to end of capillary pressure curve at lowest saturation for component :envvar:`m`. For F values less than :envvar:`OFPCMX`, capillary pressure assumed constant. 

       .. note:: 
          * Only used if :envvar:`IODRG(m)` = 5 in :ref:`ComponentPropertiesPorousComponents`.
          * Used only for simplified capillary pressure model :envvar:`IOVG(m)` = 0.

     - NON-DIM

   * - :envvar:`OPCMX(m)`
     - -1.0
     - Maximum capillary pressure at F = :envvar:`FPCMX`

       .. note:: 
          * Only used if :envvar:`IODRG(m)` = 5 in :ref:`ComponentPropertiesPorousComponents`.
          * Used only for simplified capillary pressure model :envvar:`IOVG(m)` = 0.

     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`OPEXP(m)`
     - -1.0
     - Exponent for capillary pressure-saturation relationship

       .. note:: 
          * Only used if :envvar:`IODRG(m)` = 5 in :ref:`ComponentPropertiesPorousComponents` and :envvar:`IODFIT(m)` = 2.
          * Used only for simplified capillary pressure model :envvar:`IOVG(m)` = 0.

     - NON-DIM

   * - :envvar:`XNWOBS(m)`
     - 1.0
     - Outer exponent for wetting (filling) capillary pressure curve used in Van Genuchten unsaturated porous media model (dimensionless)

       Used only for Van Genuchten capillary pressure model (\ :envvar:`IOVG(m)` = 1).
     - NON-DIM

   * - :envvar:`XNDOBS(m)`
     - 1.0
     - Outer exponent for draining capillary pressure curve used in Van Genuchten unsaturated porous media model (dimensionless).

       Used only for Van Genuchten capillary pressure model (\ :envvar:`IOVG(m)` = 1).
     - NON-DIM

   * - :envvar:`XMWOBS(m)`
     - 1.0
     - Inner exponent for wetting (filling) capillary pressure curve used in Van Genuchten unsaturated porous media model (dimensionless).

       Used only for Van Genuchten capillary pressure model (\ :envvar:`IOVG(m)` = 1).
     - NON-DIM

   * - :envvar:`XMDOBS(m)`
     - 1.0
     - Inner exponent for draining capillary pressure curve used in Van Genuchten unsaturated porous media model (dimensionless).

       Used only for Van Genuchten capillary pressure model (\ :envvar:`IOVG(m)` = 1).
     - NON-DIM

   * - :envvar:`ALPHWOBS(m)`
     - 0.0
     - Coefficient for Van Genuchten wetting (filling) capillary pressure curve (units are in units of pressure)

       Used only for Van Genuchten capillary pressure model (\ :envvar:`IOVG(m)` = 1).
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`ALPHDOBS(m)`
     - 0.0
     - Coefficient for Van Genuchten draining capillary pressure curve (units are in units of pressure)

       Used only for Van Genuchten capillary pressure model (\ :envvar:`IOVG(m)` = 1).
     - [M L\ :sup:`-1` t\ :sup:`-2`]

.. index::
   single: component properties; temperature and power

.. index:: temperature and power

.. _ComponentPropertiesTemperatureandPower:

Component Properties: Temperature and Power
=====================================================================

| *t* :math:`\leq` *500, time index*
| *m* :math:`\leq` *500, component index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`heatTransferAndConductionsInComponentsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS
     
   * - :envvar:`IHTOBS(m)`
     - 0
     - Heat transfer mode flag for component :envvar:`m`

       | =0,  full heat transfer
       | =1,  dynamic uniform temperature
       | =2,  prescribed uniform temperature
       | =3,  static temperature
       | =-1, no heat transfer to component

       .. note:: Requires activation of the heat transfer model :envvar:`IHTC` = 1.

       .. seealso:: \  :envvar:`IHTC` in :ref:`HeatTransferOptionsIVS`.

     - NONE

   * - :envvar:`ITPOBS(m)`
     - 0
     - Power source flag for component :envvar:`m`

       | =0, no power source
       | =1, power source is distributed over component volume and is defined by the total amount :envvar:`POBS(t,m)`
       | =2, power source is distributed over component volume and is defined per unit volume by :envvar:`SPOBS(t,m)`
       | =3, power source is distributed over component surface and is defined by the total amount :envvar:`POBS(t,m)`
       | =4, power source is distributed over component surface and is defined per unit area by :envvar:`SPOBS(t,m)`       

     - NONE

   * - :envvar:`ITPOBS_CONTROL(m)`
     - 1
     - Control mode for power source component :envvar:`m`

       | =0, always off
       | =1, always on
       | =2, controlled by status table :envvar:`ITPOBS_TIME(t,m)`
       | =3, controlled by thermocouple, source mode
       | =4, controlled by thermocouple, sink mode       

     - NONE

   * - :envvar:`ITPOBS_TIME(t,m)`
     - 1
     - on/off status table for power component :envvar:`m`

       | =0, off between time :envvar:`TOBS(t)` and :envvar:`TOBS(t+1)`
       | =1, on between time :envvar:`TOBS(t)` and :envvar:`TOBS(t+1)`

     - NONE

   * - :envvar:`IITPOBS_TIMEC(m)`
     - 0
     - The column number of on/off status for power component :envvar:`m` in the external file
     - NONE

   * - :envvar:`FITPOBS_TIME(m)`
     - 
     - The external filename for tabular on/off status for power component :envvar:`m` as a function of time (used only if :envvar:`IITPOBS_TIMEC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ITPOBS_PRB(m)`
     - 0
     - Probe number controlling the on/off status for power component :envvar:`m` (used only if :envvar:`ITPOBS_CONTROL(m)` :math:`=` 3 or 4)
     - NONE

   * - :envvar:`TPOBS_TC1(m)`
     - 
     - Turn on temperature at probe :envvar:`ITPOBS_PRB(m)` for power component :envvar:`m` (used only if :envvar:`ITPOBS_CONTROL(m)` :math:`=` 3 or 4)

       | :envvar:`TPOBS_TC1(m)` :math:`<` :envvar:`TPOBS_TC2(m)` when :envvar:`ITPOBS_CONTROL(m)` :math:`=` 3
       | :envvar:`TPOBS_TC1(m)` :math:`>` :envvar:`TPOBS_TC2(m)` when :envvar:`ITPOBS_CONTROL(m)` :math:`=` 4

     - [T]

   * - :envvar:`TPOBS_TC2(m)`
     - 
     - Turn off temperature at probe :envvar:`ITPOBS_PRB(m)` for power component :envvar:`m` (used only if :envvar:`ITPOBS_CONTROL(m)` :math:`=` 3 or 4)

       | :envvar:`TPOBS_TC1(m)` :math:`<` :envvar:`TPOBS_TC2(m)` when :envvar:`ITPOBS_CONTROL(m)` :math:`=` 3
       | :envvar:`TPOBS_TC1(m)` :math:`>` :envvar:`TPOBS_TC2(m)` when :envvar:`ITPOBS_CONTROL(m)` :math:`=` 4

     - [T]

   * - :envvar:`POBS(t,m)`
     - 0.0
     - Total power for component :envvar:`m` (energy/time) at time :envvar:`TOBS(t)`

       .. note:: Used when :envvar:`ITPOBS(m)` = 1 or 3.
     - [M L\ :sup:`2` t\ :sup:`-3`]

   * - :envvar:`FPOBS(m)`
     - 
     - The external filename for tabular total power for component :envvar:`m` (energy/time) as a function of time (used only if :envvar:`IPOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IPOBSC(m)`
     - 0
     - The column number for total power for component :envvar:`m` (energy/time) in the external file

       .. note:: The table is converted to heat flow per unit surface area for component :envvar:`m` if :envvar:`RCOBS(m)` = 0.0 and to heat source per unit volume inside the component otherwise.
     - NONE

   * - :envvar:`SPOBS(t,m)`
     - 0.0
     - Heat flow per unit surface area (energy/time/area) or heat source per unit volume (energy/time/volume) for component :envvar:`m` at time :envvar:`TOBS(t)`; see :envvar:`ITPOBS(m)` above.

       .. note:: Used when :envvar:`ITPOBS(m)` = 2 or 4.
     - [M t\ :sup:`-3`] or [M L\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`FSPOBS(m)`
     - 
     - The external filename for tabular Heat flow per unit surface area (energy/time/area) or heat source per unit volume (energy/time/volume) for component :envvar:`m` (energy/time) as a function of time (used only if :envvar:`ISPOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ISPOBSC(m)`
     - 0
     - The column number for Heat flow per unit surface area (energy/time/area) or heat source per unit volume (energy/time/volume) for component :envvar:`m` (energy/time) in the external file

       .. note:: The table defines the heat flow per unit surface area of component :envvar:`m` if :envvar:`RCOBS(m)` = 0.0 and the heat source per unit volume inside the component otherwise.
     - NONE

   * - :envvar:`TOBI(m)`
     - -1.0e+19 
     - Override temperature for restart calculations. If :envvar:`TOBI(m)` :math:`>` 0, :file:`HYDR3D` will initialize the cell temperatures in conducting component :envvar:`m` to :envvar:`TOBI(m)` upon restart.
     - [T]

   * - :envvar:`TOBS(t)`
     - 0.0 
     - Times for time-dependent component arrays
     - [t]

   * - :envvar:`TWOBS(t,m)`
     - :envvar:`TBCD`
     - Uniform temperature for component :envvar:`m`

       If :envvar:`RCOBS(m)` :math:`>` 0, then :envvar:`TWOBS(1,m)` is used as the initial temperature. Otherwise, :envvar:`TWOBS(t,m)` defines the uniform, time-dependent, prescribed temperature of component :envvar:`m`.

       :envvar:`TWOBS(t,m)` cannot be negative.

       .. note:: For a GMO component :envvar:`TWOBS(t,m)` also defines the temperature of the parts of the component that move into the mesh from outside during the calculation. If :envvar:`TWOBS(t,m)` defines a time-dependent temperature, then its value is taken at the appropriate time.
     - [T]

   * - :envvar:`FTWOBS(m)`
     - 
     - The external filename for tabular uniform temperature for component :envvar:`m` as a function of time (used only if :envvar:`ITWOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ITWOBSC(m)`
     - 0
     - The column number for uniform temperature for component :envvar:`m` in the external file

       If :envvar:`RCOBS(m)` :math:`>` 0, then the first value is used as the initial temperature. Otherwise, the table defines the uniform, time-dependent, prescribed temperature of component :envvar:`m`.

       :envvar:`TWOBS(t,m)` cannot be negative.

       .. note:: For a GMO component the table also defines the temperature of the parts of the component that move into the mesh from outside during the calculation. If the table  defines a time-dependent temperature, then its value is taken at the appropriate time.
     - NONE

.. index:: tabular property input

.. _TabularPropertyInputIVS:

Tabular Property Input
=====================================================================

| *m* :math:`\leq` *500, component index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`temperatureDependentPropertiesMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IRHOBS(m)`
     - 0
     - Flag for the definition of density of component :envvar:`m`

       | =0, constant
       | =1, tabular function of temperature
     - NONE

   * - :envvar:`FRHOBS(m)`
     - 
     - The external filename for tabular density of component :envvar:`m` as a function of temperature (used only if :envvar:`IRHOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IRHOBSC(m)`
     - 0
     - The column number for density of component :envvar:`m` in the external file
     - NONE

   * - :envvar:`IBLKMOD(m)`
     - 0
     - Flag for the definition of bulk modulus of component :envvar:`m`

       | =0, constant
       | =1, tabular function of temperature
     - NONE

   * - :envvar:`FBLKMOD(m)`
     - 
     - The external filename for tabular bulk modulus of component :envvar:`m` as a function of temperature (used only if :envvar:`IBLKMODC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IBLKMODC(m)`
     - 0
     - The column number for bulk modulus of component :envvar:`m` in the external file
     - NONE

   * - :envvar:`IELASTMOD(m)`
     - 0
     - Flag for the definition of elastic modulus of component :envvar:`m`

       | =0, constant
       | =1, tabular function of temperature
     - NONE

   * - :envvar:`FELASTMOD(m)`
     - 
     - The external filename for tabular elastic modulus of component :envvar:`m` as a function of temperature (used only if :envvar:`IELASTMODC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IELASTMODC(m)`
     - 0
     - The column number for elastic modulus of component :envvar:`m` in the external file
     - NONE

   * - :envvar:`IPOISSONR(m)`
     - 0
     - Flag for the definition of Poisson ratio of component :envvar:`m`

       | =0, constant
       | =1, tabular function of temperature
     - NONE

   * - :envvar:`FPOISSONR(m)`
     - 
     - The external filename for tabular Poisson ratio of component :envvar:`m` as a function of temperature (used only if :envvar:`IPOISSONRC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IPOISSONRC(m)`
     - 0
     - The column number for Poisson ratio of component :envvar:`m` in the external file
     - NONE

   * - :envvar:`IYLDSTR(m)`
     - 0
     - Flag for the definition of yield stress limit of component :envvar:`m`

       | =0, constant
       | =1, tabular function of temperature
     - NONE

   * - :envvar:`FYLDSTR(m)`
     - 
     - The external filename for tabular yield stress limit of component :envvar:`m` as a function of temperature (used only if :envvar:`IYLDSTRC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IYLDSTRC(m)`
     - 0
     - The column number for yield stress limit of component :envvar:`m` in the external file
     - NONE

   * - :envvar:`ISHRMOD(m)`
     - 0
     - Flag for the definition of shear modulus of component :envvar:`m`

       | =0, constant
       | =1, tabular function of temperature
     - NONE

   * - :envvar:`FSHRMOD(m)`
     - 
     - The external filename for tabular shear modulus of component :envvar:`m` as a function of temperature (used only if :envvar:`ISHRMODC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ISHRMODC(m)`
     - 0
     - The column number for shear modulus of component :envvar:`m` in the external file
     - NONE 

   * - :envvar:`IRCOBS(m)`
     - 0
     - Flag for the definition of density times specific heat product of component :envvar:`m`

       | =0, constant
       | =1, tabular function of temperature
     - NONE

   * - :envvar:`FRCOBS(m)`
     - 
     - The external filename for tabular density times specific heat product of component :envvar:`m` as a function of temperature (used only if :envvar:`IRCOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IRCOBSC(m)`
     - 0
     - The column number for density times specific heat product of component :envvar:`m` in the external file
     - NONE

   * - :envvar:`IKOBS(m)`
     - 0
     - Flag for the definition of thermal conductivity of component :envvar:`m`

       | =0, constant
       | =1, tabular function of temperature
     - NONE

   * - :envvar:`FKOBS(m)`
     - 
     - The external filename for tabular thermal conductivity of component :envvar:`m` as a function of temperature (used only if :envvar:`IKOBSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IKOBSC(m)`
     - 0
     - The column number for thermal conductivity of component :envvar:`m` in the external file
     - NONE

   * - :envvar:`IHOBS1(m)`
     - 0
     - Flag for the definition of heat-transfer coefficient to fluid #1 of component :envvar:`m`

       | =0, constant or linear function of solid fraction
       | =1, tabular function of temperature
     - NONE

   * - :envvar:`FHOBS1(m)`
     - 
     - The external filename for tabular heat-transfer coefficient to fluid #1 of component :envvar:`m` as a function of temperature (used only if :envvar:`IHOBS1C(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IHOBS1C(m)`
     - 0
     - The column number for heat-transfer coefficient to fluid #1 of component :envvar:`m` in the external file
     - NONE

   * - :envvar:`IHOBS2(m)`
     - 0
     - Flag for the definition of heat-transfer coefficient to fluid #2 of component :envvar:`m`

       | =0, constant
       | =1, tabular function of temperature
     - NONE

   * - :envvar:`FHOBS2(m)`
     - 
     - The external filename for tabular heat-transfer coefficient to fluid #2 of component :envvar:`m` as a function of temperature (used only if :envvar:`IHOBS2C(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IHOBS2C(m)`
     - 0
     - The column number for heat-transfer coefficient to fluid #2 of component :envvar:`m` in the external file
     - NONE

.. index::
   single: component properties; thermal and heat transfer

.. index:: thermal and heat transfer

.. _ComponentPropertiesThermalandHeatTransfer:

Component Properties: Thermal and Heat Transfer
=====================================================================

| *m* :math:`\leq` *500, component index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`heatTransferAndConductionsInComponentsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`KOBS(m)`
     - 0.0
     - Thermal conductivity of component :envvar:`m`
     - [M L t\ :sup:`-3` T\ :sup:`-1`]

   * - :envvar:`XKOBS(m)`
     - 1.0
     - Multiplier for x-direction thermal conductivity of component :envvar:`m`
     - NON-DIM

   * - :envvar:`YKOBS(m)`
     - 1.0
     - Multiplier for y-direction thermal conductivity of component :envvar:`m`
     - NON-DIM

   * - :envvar:`ZKOBS(m)`
     - 1.0
     - Multiplier for z-direction thermal conductivity of component :envvar:`m`
     - NON-DIM

   * - :envvar:`MOBS(m)`
     - 0.0
     - Mass times specific heat product for component :envvar:`m`

       If :envvar:`MOBS(m)` is greater than 0.0, a dynamic equation is solved for the heat transfer surface temperature.

       Alternate: :envvar:`RCOBS(m)`, the value of :envvar:`MOBS(m)` is ignored if :envvar:`RCOBS(m)` :math:`>` 0.

       .. note:: For GMO components use :envvar:`RCOBS(m)`.
     - [M L\ :sup:`2` T\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`OBSL(m)`
     - 0.0
     - Length scale of component :envvar:`m`

       If :envvar:`HOBS` :math:`<` 0 or :envvar:`NMAT` = 2 and :envvar:`HOBS2` :math:`<` 0, then the default is the square root of the surface area of the component.
     - [L]

   * - :envvar:`OSPOR(m)`
     - 1.0
     - Surface area per unit bulk volume for porous component :envvar:`m` (used for heat transfer and mass sources). 
     - [1/L]

   * - :envvar:`RCOBS(m)`
     - 0.0
     - Density times specific heat product for component :envvar:`m`

       If :envvar:`RCOBS(m)` :math:`>` 0.0, a dynamic equation is solved for the heat transfer surface temperature.

       Alternate: :envvar:`MOBS(m)`

       .. note:: \ :envvar:`RCOBS(m)` is required input for lost foam components. For GMO components, :envvar:`RCOBS(m)` should be used in place of :envvar:`MOBS(m)`.
     - [M L\ :sup:`-1` T\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`ROBS(m)`
     - 1.0
     - Surface area multiplier to account for roughness of component :envvar:`m`

       This multiplies the cell-face area to give the effective heat transfer area for each cell. No heat transfer at component :envvar:`m` if :envvar:`ROBS(m)` = 0.0.

       .. note:: No mass sources are applied for component :envvar:`m` if :envvar:`ROBS(m)` = 0.0.
     - NON-DIM

   * - :envvar:`SAOBS(m)`
     - 0.0
     - Total surface area for heat transfer for component :envvar:`m`, including roughness effects defined by the area multiplier :envvar:`ROBS(m)`.

       If :envvar:`SAOBS(m)` :math:`>` 0, the surface area in each cell associated with component :envvar:`m` is adjusted to make the component's total surface area equal to :envvar:`SAOBS(m)`.

       .. note:: Not used for GMO components.
     - [L\ :sup:`2`]
   
   * - :envvar:`ILTHOBS(m)`
     - 0
     - Activates the thermal penetration depth of the component.
     - NON-DIM

   * - :envvar:`LTHOBS(m)`
     - -1 
     - The thickness of the thermally active layer along the surface of geometry component :envvar:`m`

       Conductive heat transfer is calculated only in computational cells within this layer. Component volume outside this layer is replaced by an adiabatic boundary condition. :envvar:`LTHOBS(m)` can be estimated from the maximum thermal penetration depth based on the properties of the thermal component and the heat transfer coefficient at the mold-metal interface.

       .. note:: By default (:envvar:`LTHOBS(m)` = -1), the entire component is included in the thermally active layer. If :envvar:`LTHOBS(m)` = 0.0, only the component surface elements are included in heat transfer with fluid.
     - [L]

.. index::
   single: components; sand core gas

.. index:: sand core gas

.. _ComponentSandCoreGas:

Component Properties: Sand Core Gas
=====================================================================

| *m* :math:`\leq` *500, component index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`coreGasMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOB(m)`
     - 0
     - "Free" (or phantom) component flag

       | =-2, core gas component
       | =-1, porous component
       | = 0, regular component
       | = 1, lost foam component
       | = 2, fan/impeller component
       | = 3, sediment scour component
       | = 4, specified velocity phantom component for continuous casting
       | = 5, domain removing component
       | = 6, flow vent component
       | = 7, FEA domain removing component
       | = 8, sampling volume component
       | = 9, surface roughness component providing roughness height or Manning's roughness coefficien (:ref:`surfaceroughnesscomptype` component type)
       | = 10, wave absorbing component
       | = 11, meshing component        

       .. note:: For :envvar:`IFOB` :math:`>` 0, components do not contribute to area and volume blockages, so the component will not be visible in component plots, except for the :envvar:`IFOB(m)` = 5 type.
     - NONE

   * - :envvar:`PORCG(m)`
     - 0.0
     - Core porosity

       .. note:: Requires full heat transfer within the component, :envvar:`IHTOBS(m)` = 0

       Must be between 0.0 and 1.0.
     - NON-DIM

   * - :envvar:`IDRGKCG(m)`
     - 0
     - Core permeability input parameter flag

       | =0, use average sand grain diameter :envvar:`GRAINDIAM`
       | =1, use sand core Darcian permeability :envvar:`PERMCG` and non-Darcian permeability :envvar:`PERMCG2`
     - NON-DIM

   * - :envvar:`GRAINDIAM(m)`
     - 0.0
     - Average sand grain diameter
       
       .. note:: Used when :envvar:`IDRGKCG(m)` = 0
     - [L]

   * - :envvar:`PERMCG(m)`
     - 0.0
     - Sand core Darcian permeability
       
       .. note:: Used when :envvar:`IDRGKCG(m)` = 1
     - [L\ :sup:`2`]

   * - :envvar:`PERMCG2(m)`
     - 0.0
     - Sand core non-Darcian permeability
       
       .. note:: Used when :envvar:`IDRGKCG(m)` = 1
     - [L]

   * - :envvar:`RHOCOR(m)`
     - 0.0
     - Core density
     - [M/L\ :sup:`3`]

   * - :envvar:`BNDRFRC(m)`
     - 0.0
     - Binder weight fraction of core total weight
     - NON-DIM

   * - :envvar:`EB1(m)`
     - 0.0
     - Binding energy, energy/mole
     - [M L\ :sup:`2` t\ :sup:`-2` mol\ :sup:`-1`]

   * - :envvar:`DCMPR1(m)`
     - 0.0
     - Decomposition rate, 1/time
     - [1/t]

   * - :envvar:`RFCOR(m)`
     - 0.0
     - Specific gas constant of binder gas
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`MUCG(m)`
     - 0.0
     - Core gas dynamic viscosity
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`FRES(m)`
     - 0.0
     - Residue mass fraction of the initial binder

       Must be between 0.0 and 1.0.
     - NON-DIM

   * - :envvar:`ISHELLM(m)`
     - 0.0
     - Shell mold flag

       =0, when thermally active layer :envvar:`LTHOBS(m)` is defined for the core component m, the component volume outside the thermal layer is treated as an impenetrable wall.

       =1, treat the thermal shell layer defined with :envvar:`LTHOBS(m)` as an actual shell mold with full core gas venting at the shell exterior boundary (for modeling gas flow in porous molds).
     - NONE

.. index::
   single: components; permeable mold

.. index:: permeable mold

.. _ComponentPermeablemold:

Component Properties: Permeable Mold
=====================================================================

| *m* :math:`\leq` *500, component index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IOBSVENT(m)`
     - 0
     - Permeable mold flag

       | =0, component :envvar:`m` is not a permeable mold
       | =1, component :envvar:`m` is a permeable mold
     - NONE

   * - :envvar:`IDRGKCG(m)`
     - 0
     - mold permeability input parameter flag

       | =0, use average sand diameter :envvar:`GRAINDIAM`
       | =1, use sand mold Darcian permeability :envvar:`PERMCG`
     - NON-DIM

   * - :envvar:`GRAINDIAM(m)`
     - 0.0
     - Average sand diameter for permeable mold component :envvar:`m`
       
       .. note:: Used when :envvar:`IDRGKCG(m)` = 0
     - [L]

   * - :envvar:`PERMCG(m)`
     - 0.0
     - Sand mold Darcian permeability for permeable mold component :envvar:`m`
       
       .. note:: Used when :envvar:`IDRGKCG(m)` = 1
     - [L\ :sup:`2`]

   * - :envvar:`LPRMOBS(m)`
     - 0.0
     - Average permeable mold thickness, which is a measure of the distance that the gas in the cavity needs to travel through the mold to escape.

       .. note:: 
          * Must be positive for the model to work for component :envvar:`m`.
          * Input variable :envvar:`PVOID` (\ :ref:`InitialConditionsUniform`) defines the ambient gas pressure.

     - [L]

   * - :envvar:`PORCG(m)`
     - 0.0
     - mold porosity for permeable mold component :envvar:`m`.

       .. note:: Must be between 0.0 and 1.0.
     - NON-DIM

.. index::
   single: component properties; thermal die cycling

.. index:: thermal die cycling

.. _ComponentPropertiesThermalDieCycling:

Component Properties: Thermal Die Cycling
=====================================================================

| *m*, *n* :math:`\leq` *500, component index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`thermalDieCyclingMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOBCYCCOR(m)`
     - 0
     - Core/liner flag for component :envvar:`m`

       | =0, component :envvar:`m` is not a core/liner component
       | =1, component :envvar:`m` is a core/liner component

       .. note:: Component :envvar:`m` must be a regular component (:envvar:`IFOB(m)` = 0).
     - NONE

   * - :envvar:`IFOBCYCCON(m,n)`
     - 0
     - Contacting die flag between components :envvar:`m` and :envvar:`n`

       | =0, die components :envvar:`m` and :envvar:`n` stay in contact during die open stages
       | =1, die components :envvar:`m` and :envvar:`n` open up during die open stages. The cooling at the parting line will be considered for components :envvar:`m` and :envvar:`n`.

       .. note:: Components :envvar:`m` and :envvar:`n` must be regular components (:envvar:`IFOB` = 0), and not core/liner components (:envvar:`IFOBCYCCOR` = 0)
     - NONE

   * - :envvar:`IFOBCYCCOV(m)`
     - 0
     - Cover/ejector flag for component :envvar:`m`

       | =0, component :envvar:`m` is not a cover component (it is an ejector component)
       | =1, component :envvar:`m` is a cover component

       .. note:: Used only when "Open before ejection" stage is defined (:envvar:`ISEG_TYPE(2)` = 2, Open before ejection). Component :envvar:`m` must be a regular component (:envvar:`IFOB(m)` = 0), but can be a core/liner component.
     - NONE

   * - :envvar:`SAOBS_C(m)`
     - 0.0
     - Total surface area for heat transfer for component :envvar:`m` without cores/liners, including surface area at parting lines and roughness effects defined by the area multiplier :envvar:`ROBS(m)`.

       If :envvar:`SAOBS_C(m)` :math:`>` 0, the surface area in each cell associated with component :envvar:`m` is adjusted to make the component's total surface area equal to :envvar:`SAOBS_C(m)`. 

       .. note:: Component :envvar:`m` must be a regular component (:envvar:`IFOB(m)` = 0), and not a core/liner component (:envvar:`IFOBCYCCOR(m)` = 0)

       .. seealso:: \  :envvar:`ROBS(m)` and :envvar:`SAOBS(m)` in :ref:`ComponentPropertiesThermalandHeatTransfer`.
     - NONE

   * - :envvar:`SAOBS_C_COV(m)`
     - 0.0
     - Total surface area for heat transfer for component :envvar:`m` without cover cores/liners, including surface area at parting lines and roughness effects defined by the area multiplier :envvar:`ROBS(m)`.

       If :envvar:`SAOBS_C_COV(m)` :math:`>` 0, the surface area in each cell associated with component :envvar:`m` is adjusted to make the component's total surface area equal to :envvar:`SAOBS_C_COV(m)`. 

       .. note:: Used only when "Open before ejection" stage is defined (:envvar:`ISEG_TYPE(2)` =2, Open before ejection). Component :envvar:`m` must be a regular component (:envvar:`IFOB(m)` = 0), and cannot be a cover core/liner components (:envvar:`IFOBCYCCOR(m)` = 0 or :envvar:`IFOBCYCCOV(m)` = 0).

       .. seealso:: \  :envvar:`ROBS(m)` and :envvar:`SAOBS(m)` in :ref:`ComponentPropertiesThermalandHeatTransfer`.
     - NONE

.. index::
   single: component properties; wave absorbing

.. index:: wave absorbing

.. _ComponentPropertiesWaveAbsorbingModelParameters:

Component Properties: Wave Absorbing
===========================================================

| *m* :math:`\leq` *500, component index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`waveAbsorbingLayerMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOB(m)`
     - 0
     - "Free" (or phantom) component flag

       | =-2, core gas component
       | =-1, porous component
       | = 0, regular component
       | = 1, lost foam component
       | = 2, fan/impeller component
       | = 3, sediment scour component
       | = 4, specified velocity phantom component for continuous casting
       | = 5, domain removing component
       | = 6, flow vent component
       | = 7, FEA domain removing component
       | = 8, sampling volume component
       | = 9, surface roughness component providing roughness height or Manning's roughness coefficien (:ref:`surfaceroughnesscomptype` component type)
       | = 10, wave absorbing component
       | = 11, meshing component        

       .. note:: For :envvar:`IFOB` :math:`>` 0, components do not contribute to area and volume blockages, so the component will not be visible in component plots, except for the :envvar:`IFOB(m)` = 5 type.
     - NONE

   * - :envvar:`IFVSPNG(m)`
     - 1
     - flag for background stream velocity

       | =0, background stream velocity is calculated automatically
       | =1, background stream velocity is user-prescribed
       
     - NONE

   * - :envvar:`C0SPNG(m)`
     - 0.0
     - damping coefficient at the starting side of the wave absorbing layer
     - [1/t]

   * - :envvar:`C1SPNG(m)`
     - 1.0
     - damping coefficient at the end side of the wave absorbing layer
     - [1/t]

   * - :envvar:`XSPNG(m)`
     - ...
     - x-coordinate of a user-selected point at the starting side of wave absorbing component
     - [L]

   * - :envvar:`YSPNG(m)`
     - ...
     - y-coordinate of a user-selected point at the starting side of wave absorbing component
     - [L]     

   * - :envvar:`ZSPNG(m)`
     - ...
     - z-coordinate of a user-selected point at the starting side of wave absorbing component
     - [L]  

   * - :envvar:`XDSPNG(m)`
     - ...
     - x-component of the downstream direction vector
     - [L]

   * - :envvar:`YDSPNG(m)`
     - ...
     - y-component of the downstream direction vector
     - [L]

   * - :envvar:`ZDSPNG(m)`
     - ...
     - z-component of the downstream direction vector
     - [L]

   * - :envvar:`USPNG(m)`
     - 0.0
     - x-component of background stream velocity
     - [L/t]
    
   * - :envvar:`VSPNG(m)`
     - 0.0
     - y-component of background stream velocity
     - [L/t]
     
   * - :envvar:`WSPNG(m)`
     - 0.0
     - z-component of background stream velocity
     - [L/t]

.. index::
   single: component properties; shell mold

.. index:: shell mold

.. _ComponentPropertiesShellMold:

Component Properties: Shell Mold
=====================================================================

| *m* :math:`\leq` *500, component index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist OBS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFOB_SHELL(m)`
     - 0
     - Shell mold flag for component :envvar:`m`

       | =0, component :envvar:`m` is not a shell mold component
       | =1, component :envvar:`m` is a shell mold component

       .. note:: Component :envvar:`m` must be a regular component (:envvar:`IFOB(m)` = 0), a core gas component (:envvar:`IFOB(m)` = -2), or a porous component (:envvar:`IFOB(m)` = -1).
     - NONE

   * - :envvar:`SHELL_THOBS(m)`
     - 0.0
     - Shell mold thickness for component :envvar:`m`

       .. note:: Must be positive for the model to work for component :envvar:`m`.
     - [L]

.. index::
   pair: initial fluid conditions; FL

.. _InitialFluidConditionsFL:

=================================
Initial Conditions Namelist - FL
=================================

.. index::
   single: initial conditions; uniform

.. _InitialConditionsUniform:

Initial Conditions: Uniform
=====================================================================

| *ns* :math:`\leq` *99, scalar species index*
| *m* :math:`\leq` *10, sediment species index*

| xx-component of elastic stress, k=1,
| yy-component of elastic stress, k=2,
| zz-component of elastic stress, k=3,
| xy-component of elastic stress, k=4,
| yz-component of elastic stress, k=5,
| xz-component of elastic stress, k=6

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist FL
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFLINITTYP`
     - 0
     - Fluid initialization flag

       | =0, use only fluid regions
       | =1, use :envvar:`FLHT` to set initial fluid #1 elevation in z-direction
       | =2, use :envvar:`VLIN` to set initial fluid #1 volume
       | =3, use a wave profile to set the initial fluid volume and free-surface shape.
     - NONE

   * - :envvar:`AIRI`
     - 0.0
     - Initial uniform volume fraction of entrained air in the fluid

       .. note:: Only used when :envvar:`IDFAIR` = 1 (\ :ref:`AirEntrainmentModelParameters`).
       
       .. note:: if used with variable-density model (\ :envvar:`IFRHO` :math:`\geq` 2), then the initial fluid mixture density will be calculated by the solver.
     - NON-DIM
       

   * - :envvar:`CHRGI`
     - 0.0
     - Initial uniform electric charge density in the fluid

       .. note:: Only used when :envvar:`IECHRG` = 1 (\ :ref:`ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters`).
     - [Q/L\ :sup:`3`]

   * - :envvar:`CNCI`
     - 0.0
     - Initial volume fraction of the non-condensable gas component in the gas phase

       .. note:: Only used with the non-condensable gas model (\ :envvar:`INCG` = 1) and relative saturation turned off (\ :envvar:`IRSAT` = 0)

       .. seealso:: \  :ref:`PhysicalModelOptions` and :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`
     - NON-DIM

   * - :envvar:`CSLDGI`
     - ...
     - Initial concentration of sludge

       .. note:: Only used when :envvar:`ISLDGE` = 1 

     - [M L\ :sup:`-3`]

   * - :envvar:`RSATI`
     - 0.0
     - Initial relative saturation of vapor in the gas phase when the non-condensable gas model is used.

       .. note:: Only used with the non-condensable gas model (\ :envvar:`INCG` = 1) and relative saturation turned on (\ :envvar:`IRSAT` = 1)

       .. seealso:: \  :ref:`PhysicalModelOptions` and :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`
     - NON-DIM

   * - :envvar:`DSIZEI`
     - :envvar:`DFDIAM_INI`
     - Initial uniform droplet size in the fluid

       .. note:: Only used when :envvar:`IDSIZE` = 1 (\ :ref:`DynamicDropletModelParameters`).
     - [L]     

   * - :envvar:`DISSI`
     - 0.0
     - Initial uniform concentration of dissolved solute in the fluid     

       .. note:: Only used when :envvar:`IDISSOLVE` = 1 (\ :ref:`DissolutionModelParameters`).
     - [M/L\ :sup:`3`]

   * - :envvar:`ELSTI(k)`
     - 0.0
     - Initial uniform value of elastic stress component :envvar:`k`

       .. note:: Only used when :envvar:`IELAST` :math:`>` 0 (\ :ref:`PhysicalModelOptions`).
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`FLHT`
     - ...
     - Initial fluid elevation in z-direction

       If :envvar:`ICMPRS` = 0 and :envvar:`ITB` = 1, defaults to empty (:envvar:`F` = 0 everywhere);

       If :envvar:`ICMPRS` = 0 and :envvar:`ITB` = 0, defaults to full (:envvar:`F` = 1 everywhere).

       If :envvar:`ICMPRS` = 1, defaults to all compressible fluid (:envvar:`F` = 0 everywhere).

       .. note:: Used only when :envvar:`IFLINITTYP` = 1 (\ :ref:`PhysicalModelOptions`).

       .. seealso:: \  

          * :envvar:`ICMPRS` in :ref:`PhysicalModelOptions`.

          * :envvar:`ITB` in :ref:`namelistXPUTFlowModeOptions`.
     - [L]

   * - :envvar:`FMDENI`
     - 0.0
     - Uniform foam density function

       .. note:: Only used when :envvar:`IFMDEN` = 1 (\ :ref:`DefectTrackingParametersforLostFoamandFreeSurfaceModels`).
     - [M/L\ :sup:`3`]


   * - :envvar:`NBCWAVE`
     - 0
     - Reference mesh boundary index (1, 2, 3 or 4) in mesh block :envvar:`NBLWAVE` specified as type 'surface wave' to be used for fluid initialization. Used only when :envvar:`IFLINITTYP` = 3.

       .. note:: Required only if there are multiple wave boundaries.
     - NONE

   * - :envvar:`NBLWAVE`
     - 0
     - Reference mesh block number containing the surface wave boundary condition (see :envvar:`NBCWAVE`) to be used for fluid initialization.

       .. note:: Required only if there are multiple wave boundaries. Used only when :envvar:`IFLINITTYP` = 3.
     - NONE

   * - :envvar:`PRESI`
     - :envvar:`PVOID`
     - Uniform initial fluid pressure

     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`PVOID`
     - ...
     - Void initial vapor pressure. Defaults to zero if gauge pressure is used, :envvar:`IPGAUGE` = 1, and to :envvar:`P_REFERENCE` otherwise.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`RPSI`
     - 0.0
     - Initial rotation rate of fluid around z-axis in radians per unit time
     - [radians/t]

   * - :envvar:`SCLRI(ns)`
     - 0.0
     - Initial uniform scalar species :envvar:`ns` magnitude
     - Typically [M/L\ :sup:`3`]

   * - :envvar:`SSSI(m)`
     - 0.0
     - Initial uniform suspended sediment mass concentration of sediment species :envvar:`m`

       .. note:: Only used when :envvar:`NSSPC` :math:`>` 1 (see :ref:`ScalarSedimentationScourParameters`).
     - [M/L\ :sup:`3`]

   * - :envvar:`SEGI`
     - 0.0
     - Initial uniform segregation solute mass concentration

       .. note:: Only used when :envvar:`ISEG` = 1 (see :ref:`BinaryAlloySegregationParameters`).
     - [M/L\ :sup:`3`]

   * - :envvar:`TKEI`
     - ...
     - Initial uniform turbulent energy (per unit mass)

       .. note:: Default turbulent energy is a very small positive number based on problem specifications.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`turbulenceSectionMR`.
     - [L\ :sup:`2`/t\ :sup:`2`]

   * - :envvar:`TEMPI`
     - :envvar:`T_REFERENCE`
     - Uniform initial fluid temperature of fluid #1.
     - [T]

   * - :envvar:`TEMPI2`
     - :envvar:`TEMPI`
     - Uniform initial fluid temperature of fluid #2.
     - [T]     

   * - :envvar:`TVOID`
     - :envvar:`TEMPI`
     - Constant uniform void-region temperature
     - [T]

   * - :envvar:`UI`
     - 0.0
     - Initial uniform fluid velocity in x-direction
     - [L/t]

   * - :envvar:`VI`
     - 0.0
     - Initial uniform fluid velocity in y-direction
     - [L/t]

   * - :envvar:`VLIN`
     - 0.0
     - Initial volume of fluid #1 in mesh

       If :envvar:`VLIN` is positive and no other fluid subcomponents are initialized in the domain (:envvar:`NFLS` = 0), fluid will be initialized with the free surface normal to the gravity vector (:envvar:`GX`, :envvar:`GY`, :envvar:`GZ` in XPUT, or :envvar:`GRAVX`, :envvar:`GRAVY`, :envvar:`GRAVZ` in MOTN for :ref:`nonInertialReferenceFrameMotionMR`). If :envvar:`VLIN` is greater than the total open volume in the mesh, then :envvar:`VLIN` will be reset to the open volume.

       .. note:: 
          * Used only when :envvar:`IFLINITTYP` = 2.
          * :envvar:`VLIN` is only for one-fluid, free-surface problems.

     - [L\ :sup:`3`]

   * - :envvar:`WI`
     - 0.0
     - Initial uniform fluid velocity in z-direction.
     - [L/t]

.. index::
   single: initial conditions; general region parameters

.. _InitialConditionsGeneralRegionParameters:

Initial Conditions: General Region Parameters
=====================================================================

| *n* :math:`\leq` *100, region index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist FL
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`FIOH(n)`
     - 1
     - Fluid region type

       | =0, hole
       | =1, fluid
     - NONE

   * - :envvar:`FFSTL(n)`
     - :file:`fstlnn.inp`
     - File name for stereolithography (STL) data file for defining initial conditions (:envvar:`IFDIS(n)` = -1), where "nn" = :envvar:`n`.
     - NONE

   * - :envvar:`IFDIS(n)`
     - 0
     - Region type

       | =-1, use stereolithography (STL) CAD data file to define a region
       | =0, use function to define a region (i.e., :envvar:`FCX2`, :envvar:`FCX`, :envvar:`FCC`, etc.)
       | =1, set :envvar:`F` equal to function
       | =2, set :envvar:`P` equal to function
       | =3, set :envvar:`TKE` equal to function
       | =4, set :envvar:`U` equal to function
       | =5, set :envvar:`V` equal to function
       | =6, set :envvar:`W` equal to function
       | =7, set :envvar:`RHO` equal to function
       | =8, set scalar species magnitude to function (see :envvar:`ISCTYP(n)`)
       | =9, set :envvar:`TN` equal to function
       | =10, set :envvar:`TW` equal to function.
       | =11, set :envvar:`TN2` equal to function.       

       .. note:: STL input file name is :file:`fstlnn.inp` where "nn" = :envvar:`n`.

       .. seealso:: \  :envvar:`ISCTYP(n)` in :ref:`InitialConditionsRegionValues`.
     - NONE

   * - :envvar:`IF_FLREG_ENABLED(n)`
     - 1
     - Activation flag for fluid region :envvar:`n`

       | =0, region disabled
       | =1, region enabled
     - NONE 

   * - :envvar:`IRESFL(n)`
     - 0
     - Restart override fluid region flag

       | =0, initial fluid region:  processed before restart data is extracted
       | =1, restart override fluid region: processed after restart data is extracted.

       .. note:: Only valid for restart simulations: :envvar:`IFREST` = 1.

       .. seealso:: \  :envvar:`IFREST` in :ref:`RestartOptions`.
     - NONE

   * - :envvar:`NFLS`
     - 0
     - Number of fluid regions
     - NONE

.. index::
   single: initial conditions; region values

.. _InitialConditionsRegionValues:

Initial Conditions: Region Values
=====================================================================

| *n* :math:`\leq` *100, region index*
| *ns* :math:`\leq` *99, scalar species index*
| *m* :math:`\leq` *10, sediment species index*

| xx-component of elastic stress, k=1,
| yy-component of elastic stress, k=2,
| zz-component of elastic stress, k=3,
| xy-component of elastic stress, k=4,
| yz-component of elastic stress, k=5,
| xz-component of elastic stress, k=6

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist FL
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`AIRREG(n)`
     - ...
     - Initial volume fraction of entrained air in region :envvar:`n`

       Defaults to 0.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.

       .. note:: Only used when :envvar:`IDFAIR` = 1 (see :ref:`AirEntrainmentModelParameters`).
     - NON-DIM

   * - :envvar:`CHRGREG(n)`
     - ...
     - Initial electric charge density in region :envvar:`n`

       Defaults to 0.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.

       .. note:: Only used when :envvar:`IECHRG` = 1 (see :ref:`ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters`).
     - [Q/L\ :sup:`3`]

   * - :envvar:`CNCREG(n)`
     - ...
     - Initial volume fraction of the non-condensable gas component in the gas phase in region :envvar:`n`

       Defaults to 0.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     

       .. note:: Only used with the non-condensable gas model (\ :envvar:`INCG` = 1) and relative saturation turned off (\ :envvar:`IRSAT` = 0)

       .. seealso:: \  \ :ref:`PhysicalModelOptions` and :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`
     - NON-DIM

   * - :envvar:`RSATREG(n)`
     - ...
     - Initial relative saturation of vapor in the gas phase in region :envvar:`n` when the non-condensable gas model is used.

       Defaults to 0.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     

       .. note:: Only used with the non-condensable gas model (\ :envvar:`INCG` = 1) and relative saturation turned on (\ :envvar:`IRSAT` = 1)

       .. seealso:: \  :ref:`PhysicalModelOptions` and :doc:`model-reference` -->  :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`
     - NON-DIM

   * - :envvar:`DSIZEREG(n)`
     - ...
     - Initial droplet size in region :envvar:`n`

       Defaults to 0.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     

       .. note:: Only used when :envvar:`IDSIZE` = 1 (see :ref:`DynamicDropletModelParameters`).
     - [L]     

   * - :envvar:`DISSREG(n)`
     - ...
     - Initial concentration of dissolved solute in region :envvar:`n`

       Defaults to 0.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     

       .. note:: Only used when :envvar:`IDISSOLVE` = 1 (see :ref:`DissolutionModelParameters`).
     - [M/L\ :sup:`3`]

   * - :envvar:`ELSTREG(n,k)`
     - ...
     - Initial value if elastic stress component :envvar:`k` in region :envvar:`n`

       Defaults to 0.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     

       Only used when :envvar:`IELAST` :math:`>` 0 (see :ref:`PhysicalModelOptions`).
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`FMDENREG(n)`
     - ...
     - Foam density function in region :envvar:`n`

       Defaults to 0.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     

       .. note:: Only used when :envvar:`IFMDEN` = 1 (see :ref:`DefectTrackingParametersforLostFoamandFreeSurfaceModels`).
     - [M/L\ :sup:`3`]

   * - :envvar:`FREG(n)`
     - ...
     - Initial fluid fraction in region :envvar:`n`

       Defaults to 1.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     

     - NON-DIM

   * - :envvar:`ISCTYP(n)`
     - 0
     - Scalar species identifier when :envvar:`IFDIS(n)` = 8
     - NONE

   * - :envvar:`PREG(n)`
     - ...
     - Initial pressure in region :envvar:`n`

       Defaults to :envvar:`PRESI` for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     

       .. seealso:: \  :envvar:`PRESI` in :ref:`InitialConditionsUniform`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`RHOREG(n)`
     - ...
     - Initial density in region :envvar:`n` (when :envvar:`IFRHO` :math:`>` 2 and :envvar:`NMAT` = 1).

       Defaults to :envvar:`RHOF` for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     

       .. seealso:: \  :envvar:`IFRHO` and :envvar:`NMAT` in :ref:`PhysicalModelOptions`.

       .. note:: if :envvar:`AIRREG` is set (only used when :envvar:`IDFAIR` = 1;see :ref:`AirEntrainmentModelParameters`), then the values of :envvar:`RHOREG` will be overwritten and calculated by the solver.
     - [M/L\ :sup:`3`]

   * - :envvar:`SCLREG(n,ns)`
     - ... 
     - Initial scalar species :envvar:`ns` magnitude in region :envvar:`n`

       Defaults to 0.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.
     - Typically [M/L\ :sup:`3`]

   * - :envvar:`SEGREG(n)`
     - ... 
     - Initial segregation solute mass concentration in region :envvar:`n`

       Defaults to 0.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     

       .. note:: Only used when :envvar:`ISEG` = 1 (see :ref:`BinaryAlloySegregationParameters`).
     - [M/L\ :sup:`3`]

   * - :envvar:`SSSREG(n,m)`
     - ... 
     - Initial suspended sediment mass concentration of sediment species :envvar:`m` in region :envvar:`n`

       Defaults to 0.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     

       .. note:: Only used when :envvar:`NSSPC` = 1 (see :ref:`ScalarSedimentationScourParameters`).
     - [M/L\ :sup:`3`]

   * - :envvar:`TKEREG(n)`
     - ...
     - Initial turbulent energy per unit mass in region :envvar:`n`

       Defaults to :envvar:`TKEI` for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.
     - [L\ :sup:`2`/t\ :sup:`2`]

   * - :envvar:`TREG(n)`
     - ...
     - Region :envvar:`n` fluid #1 temperature

       For initial fluid region, :envvar:`IRESFL(n)` = 0, not used unless defined within physical range. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     
     - [T]

   * - :envvar:`TREG2(n)`
     - :envvar:`TREG(n)`
     - Region :envvar:`n` fluid #2 temperature

       Currently, is *always* equal to :envvar:`TREG(n)`.
   
     - [T]     

   * - :envvar:`TWREG(n)`
     - ... 
     - Region :envvar:`n` solid temperature

       Defaults to -1.0 for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.      
     - [T]

   * - :envvar:`UREG(n)`
     - ...
     - Initial velocity (x-direction) in region :envvar:`n`

       Defaults to :envvar:`UI` for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.      
     - [L/t]

   * - :envvar:`VREG(n)`
     - ...
     - Initial velocity (y-direction) in region :envvar:`n`

       Defaults to :envvar:`VI` for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     
     - [L/t]

   * - :envvar:`WREG(n)`
     - ...
     - Initial velocity (z-direction) in region :envvar:`n`

       Defaults to :envvar:`WI` for initial fluid region, :envvar:`IRESFL(n)` = 0. For restart override region, :envvar:`IRESFL(n)` = 1, default values come from restart data.

       .. seealso:: \  :envvar:`IRESFL` in :ref:`InitialConditionsGeneralRegionParameters`.     
     - [L/t]

.. index::
   single: initial conditions; region limiters

.. _InitialConditionsRegionLimiters:

Initial Conditions: Region Limiters
=====================================================================

| *n* :math:`\leq` *100, region index*

.. note:: All regions and functions are defined in terms of Cartesian coordinates irrespective of the mesh coordinate system. All region limiter defaults include the entire mesh.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist FL
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`FANGLH(n)`
     - ...
     - Upper cylindrical angle limit for region :envvar:`n` (measured in the x-y plane from the x-axis, in degrees)
     - [DEGREES]

   * - :envvar:`FANGLL(n)`
     - ...
     - Lower cylindrical angle limit for region :envvar:`n` (measured in the x-y plane from the x-axis, in degrees)
     - [DEGREES]

   * - :envvar:`FCONEH(n)`
     - ...
     - Upper conical angle limit for region :envvar:`n` (measured from the z-axis in degrees)
     - [DEGREES]

   * - :envvar:`FCONEL(n)`
     - ...
     - Lower conical angle limit for region :envvar:`n` (measured from the z-axis in degrees)
     - [DEGREES]

   * - :envvar:`FLUIDREGIONNAME(n)`
     - ' '
     - Fluid region :envvar:`n` name (up to 256 characters)
     - NONE

   * - :envvar:`FRAH(n)`
     - ...
     - Upper cylindrical-radius limit for region :envvar:`n`
     - [L]

   * - :envvar:`FRAL(n)`
     - ...
     - Lower cylindrical-radius limit for region :envvar:`n`
     - [L]

   * - :envvar:`FRSH(n)`
     - ...
     - Upper spherical-radius limit for region :envvar:`n`
     - [L]

   * - :envvar:`FRSL(n)`
     - ...
     - Lower spherical-radius limit for region :envvar:`n`
     - [L]

   * - :envvar:`FXH(n)`
     - ...
     - Upper x-coordinate limit for region :envvar:`n`
     - [L]

   * - :envvar:`FXL(n)`
     - ...
     - Lower x-coordinate limit for region :envvar:`n`
     - [L]

   * - :envvar:`FYH(n)`
     - ...
     - Upper y-coordinate limit for region :envvar:`n`
     - [L]

   * - :envvar:`FYL(n)`
     - ...
     - Lower y-coordinate limit for region :envvar:`n`
     - [L]

   * - :envvar:`FZH(n)`
     - ...
     - Upper z-coordinate limit for region :envvar:`n`
     - [L]

   * - :envvar:`FZL(n)`
     - ...
     - Lower z-coordinate limit for region :envvar:`n`
     - [L]

.. index::
   single: initial conditions; sludge concentration

.. _InitialConditionSludgeConcentration:

Initial Conditions: Sludge Settling
=====================================================================

| *n* :math:`\leq` *100, region index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist FL
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CSLDGREG(n)`
     - ...
     - Initial sludge mass concentration in fluid region :envvar:`n`, only used when   :envvar:`ISLDG` =1.
     - [M L\ :sup:`-3`]

.. index::
   single: initial conditions; region function coefficients

.. _InitialConditionsRegionFunctionCoefficients:

Initial Conditions: Region Function Coefficients
=====================================================================

| *n* :math:`\leq` *100, region index*

.. note:: 

   * All subcomponents and functions are defined in terms of Cartesian coordinates irrespective of the mesh coordinate system. The function has the format:

             Parameter specified by IFDIS(n) = :envvar:`FCC(n)` + :envvar:`FCX(n)`\ :math:`x` + :envvar:`FCY(n)`\ :math:`y` + :envvar:`FCZ(n)`\ :math:`z` + :envvar:`FCXY(n)`\ :math:`xy` + :envvar:`FCXZ(n)`\ :math:`xz` + :envvar:`FCYZ(n)`\ :math:`yz` + :envvar:`FCX2(n)`\ :math:`x^2` + :envvar:`FCY2(n)`\ :math:`y^2` + :envvar:`FCZ2(n)`\ :math:`z^2` + :envvar:`FCRXY(n)`\ :math:`\sqrt{x^2 + y^2} \le` \ 0

   * All region limiter defaults include the entire mesh.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist FL
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`FCC(n)`
     - 0.0
     - Function constant coefficient for region :envvar:`n`
     - VARIES, NON-DIM WHEN IFDIS(n) = 0

   * - :envvar:`FCX(n)`
     - 0.0
     - Function coefficient of x for region :envvar:`n`
     - VARIES, [1/L] WHEN IFDIS(n) = 0

   * - :envvar:`FCY(n)`
     - 0.0
     - Function coefficient of y for region :envvar:`n`
     - VARIES, [1/L] WHEN IFDIS(n) = 0

   * - :envvar:`FCZ(n)`
     - 0.0
     - Function coefficient z for region :envvar:`n`
     - VARIES, [1/L] WHEN IFDIS(n) = 0

   * - :envvar:`FCXY(n)`
     - 0.0
     - Function coefficient of xy for region :envvar:`n`
     - VARIES, [1/L\ :sup:`2`] WHEN IFDIS(n) = 0

   * - :envvar:`FCXZ(n)`
     - 0.0
     - Function coefficient of xz for region :envvar:`n`
     - VARIES, [1/L\ :sup:`2`] WHEN IFDIS(n) = 0

   * - :envvar:`FCYZ(n)`
     - 0.0
     - Function coefficient yz for region :envvar:`n`
     - VARIES, [1/L\ :sup:`2`] WHEN IFDIS(n) = 0

   * - :envvar:`FCX2(n)`
     - 0.0
     - Function coefficient x :sup:`2` for region :envvar:`n`
     - VARIES, [1/L\ :sup:`2`] WHEN IFDIS(n) = 0

   * - :envvar:`FCY2(n)`
     - 0.0
     - Function coefficient y :sup:`2` for region :envvar:`n`
     - VARIES, [1/L\ :sup:`2`] WHEN IFDIS(n) = 0

   * - :envvar:`FCZ2(n)`
     - 0.0
     - Function coefficient z :sup:`2` for region :envvar:`n`
     - VARIES, [1/L\ :sup:`2`] WHEN IFDIS(n) = 0

   * - :envvar:`FCRXY(n)`
     - 0.0
     - Function coefficient :math:`\sqrt {{x^2} + {y^2}}` for region :envvar:`n`
     - VARIES, [1/L] WHEN IFDIS(n) = 0

   * - :envvar:`FCDUM(n)`
     - 0.0
     - Dummy function coefficient for region :envvar:`n` for customizing functions.

       .. note:: Used only for customized code, and represents coefficient of user-defined additional term in equation above. The routine :file:`fcn0.F90` is used to modify :envvar:`cdum` (subcomponent regions), :envvar:`fcdum` (fluid regions), and :envvar:`bcdum` (baffle regions). See :doc:`customization` for more information.
     - VARIES

.. index::
   single: initial conditions; region transformations

.. _InitialConditionsRegionTransformations:

Initial Conditions: Region Transformations
=====================================================================

| *n* :math:`\leq` *100, region index*

.. note:: 
   * All regions and functions are defined in terms of Cartesian coordinates irrespective of the mesh coordinate system.
   * Magnifications are performed before rotations, which are performed before reflections, which are performed before translations.
   * X-rotations are performed before y-rotations, which are performed before z-rotations.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist FL
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`FMAGN(n)`
     - 1.0
     - Magnification (scaling) factor for region :envvar:`n`
     - NON-DIM

   * - :envvar:`FMAGN(n)`
     - 1.0
     - Magnification (scaling) factor for region :envvar:`n`
     - NON-DIM

   * - :envvar:`FMAGNX(n)`
     - 1.0
     - Scaling factor in x-direction for region :envvar:`n`
     - NON-DIM

   * - :envvar:`FMAGNY(n)`
     - 1.0
     - Scaling factor in y-direction for region :envvar:`n`
     - NON-DIM

   * - :envvar:`FMAGNZ(n)`
     - 1.0
     - Scaling factor in z-direction for region :envvar:`n`
     - NON-DIM

   * - :envvar:`FROTX(n)`
     - 0°
     - Region :envvar:`n` rotation about x-axis in degrees, positive in right hand sense
     - [DEGREES]

   * - :envvar:`FROTY(n)`
     - 0°
     - Region :envvar:`n` rotation about y-axis in degrees
     - [DEGREES]

   * - :envvar:`FROTZ(n)`
     - 0°
     - Region :envvar:`n` rotation about z-axis in degrees
     - [DEGREES]

   * - :envvar:`FTRNX(n)`
     - 0.0
     - Region :envvar:`n` translation in x-direction
     - [L]

   * - :envvar:`FTRNY(n)`
     - 0.0
     - Region :envvar:`n` translation in y-direction
     - [L]

   * - :envvar:`FTRNZ(n)`
     - 0.0
     - Region :envvar:`n` translation in z-direction
     - [L]

   * - :envvar:`FXTRFC(n)`
     - 0.0
     - x-coordinate of transformation center for fluid region :envvar:`n`

       .. note:: Magnification and rotation are made about the transformation center.
     - [L]

   * - :envvar:`FYTRFC(n)`
     - 0.0
     - y-coordinate of transformation center for fluid region :envvar:`n`

       .. note:: Magnification and rotation are made about the transformation center.
     - [L]

   * - :envvar:`FZTRFC(n)`
     - 0.0
     - z-coordinate of transformation center for fluid region :envvar:`n`

       .. note:: Magnification and rotation are made about the transformation center.
     - [L]

.. index::
   single: initial conditions; pointers

.. _InitialConditionsPointers:

Initial Conditions: Pointers
=====================================================================

| *k* :math:`\leq` *100, pointer index*

.. note:: All pointer locations are defined in Cartesian coordinates irrespective of the mesh coordinate system.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist FL
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_POINTER_ENABLED(k)`
     - 1
     - Activation flag for pointer :envvar:`k`

       | =0, pointer disabled
       | =1, pointer enabled
     - NONE 

   * - :envvar:`POINTERNAME(k)`
     - ' '
     - Pointer :envvar:`k` name (up to 256 characters)
     - NONE

   * - :envvar:`XVR(k)`
     - ...
     - X location in connected region :envvar:`k`

       .. note:: Default value is outside mesh
     - [L]

   * - :envvar:`YVR(k)`
     - ...
     - Y location in connected region :envvar:`k`

       .. note:: Default value is outside mesh
     - [L]

   * - :envvar:`ZVR(k)`
     - ...
     - Z location in connected region :envvar:`k`

       .. note:: Default value is outside mesh
     - [L]

.. index:: initial conditions

.. _InitialConditions:

Initial Conditions
-------------------------

| *k* :math:`\leq` *100, pointer index*
| *t* :math:`\leq` *500, time index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFVRD(k)`
     - 0
     - Type of pointer for setting fluid initial conditions

       | =0, void pointer, sets void initial pressure, temperature and heat transfer type :envvar:`IVHT(k)`
       | =1, fluid pointer, sets initial fluid fraction, pressure and temperature

     - NONE

   * - :envvar:`FVRD(k)`
     - 1.0
     - Fluid fraction assigned to contiguous region that includes pointer :envvar:`k` (defined by :envvar:`XVR(k)`, :envvar:`YVR(k)`, :envvar:`ZVR(k)` in :ref:`InitialConditionsPointers`).

       Used when :envvar:`iFVRD(k)` = 1 in which case :envvar:`F` will be set to :envvar:`FVRD(k)` in all open cells in the contiguous non-solid region that contains the cell specified by :envvar:`XVR(k)`, :envvar:`YVR(k)`, :envvar:`ZVR(k)`.

     - NON-DIM

   * - :envvar:`CNCVRD(k)`
     - 0.0
     - Volume fraction of the non-condensable gas component in the contiguous gas region that includes pointer :envvar:`k`. 

       .. note:: Only used with non-condensable gas with phase change model, :envvar:`INCG` = 1 and relative saturation turned off, :envvar:`IRSAT` = 0 (see :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`).

       .. seealso:: \  :envvar:`INCG` and :envvar:`IRSAT` in :ref:`PhysicalModelOptions`.
     - NON-DIM

   * - :envvar:`ICVRD(k)`
     - 0
     - Flag for time-dependent prescribed void pressure and temperature :envvar:`PVRD(t,k)` and :envvar:`TVRD(t,k)`.

       | =0, use :envvar:`PVRD(1,k)` and :envvar:`TVRD(1,k)` as the initial conditions only
       | =1, use :envvar:`PVRD(t,k)` and :envvar:`TVRD(t,k)` during the simulation
     - NON-DIM     

   * - :envvar:`RSATVRD(k)`
     - 0.0
     - Initial relative saturation of vapor in the gas phase in the contiguous gas region that includes pointer :envvar:`k`. 

       .. note:: Only used with non-condensable gas with phase change model, :envvar:`INCG` = 1 and relative saturation turned on, :envvar:`IRSAT` = 1 (see :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`).

       .. seealso:: \  :envvar:`INCG` and :envvar:`IRSAT` in :ref:`PhysicalModelOptions`.
     - NON-DIM

   * - :envvar:`PVRD(t,k)`
     - :envvar:`PVOID`
     - Prescribed void pressure at time :envvar:`TIMVRD(t)` in the contiguous void region that includes pointer :envvar:`k`. 
       
       If :envvar:`ICVRD(k)` = 0, then :envvar:`PVRD(1,k)` is used as the initial pressure only. Otherwise, :envvar:`PVRD(t,k)` defines the uniform, time-dependent, prescribed pressure of any void region containing pointer :envvar:`k` during the simulation. Has no effect when covered by fluid.

       .. seealso:: \  :envvar:`PRESI` and :envvar:`PVOID` in :ref:`InitialConditionsUniform`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`FPVRD(k)`
     - 
     - The external filename for tabular prescribed void pressure in the contiguous void region that includes pointer :envvar:`k` as a function of time (used only if :envvar:`IPVRDC(k)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IPVRDC(k)`
     - 0
     - The column number for prescribed void pressure in the contiguous void region that includes pointer :envvar:`k` in the external file

       If :envvar:`ICVRD(k)` = 0, then the first value is used as the initial pressure only. Otherwise, the table defines the uniform, time-dependent, prescribed pressure of any void region containing pointer :envvar:`k` during the simulation. Has no effect when covered by fluid.

       .. seealso:: \  :envvar:`PRESI` and :envvar:`PVOID` in :ref:`InitialConditionsUniform`.
     - NONE

   * - :envvar:`TIMVRD(t)`
     - 0.0
     - Times for time-dependent prescribed void pointer pressure and temperature arrays :envvar:`PVRD(t,k)` and :envvar:`TVRD(t,k)`.
     - [t] 

   * - :envvar:`TVRD(t,k)`
     - :envvar:`TVOID`
     - Prescribed void temperature at time :envvar:`TIMVRD(t)` in the contiguous void region that includes pointer :envvar:`k`. 
       
       If :envvar:`ICVRD(k)` = 0, then :envvar:`TVRD(1,k)` is used as the initial temperature only. Otherwise, :envvar:`TVRD(t,k)` defines the uniform, time-dependent, prescribed temperature of any void region containing pointer :envvar:`k` during the simulation. Has no effect when covered by fluid.

       .. seealso:: \  :envvar:`TVOID` in :ref:`InitialConditionsUniform`.
     - [T]

   * - :envvar:`FTVRD(k)`
     - 
     - The external filename for tabular prescribed void temperature in the contiguous void region that includes pointer :envvar:`k` as a function of time (used only if :envvar:`ITVRDC(k)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ITVRDC(k)`
     - 0
     - The column number for prescribed void temperature in the contiguous void region that includes pointer :envvar:`k` in the external file

       If :envvar:`ICVRD(k)` = 0, then the first value is used as the initial temperature only. Otherwise, the table defines the uniform, time-dependent, prescribed temperature of any void region containing pointer :envvar:`k` during the simulation. Has no effect when covered by fluid.

       .. seealso:: \  :envvar:`TVOID` in :ref:`InitialConditionsUniform`.
     - NONE      

.. index:: void properties, heat transfer

.. _VoidPropertiesHeatTransfer:

Void Properties / Heat Transfer
-------------------------------------

| *k* :math:`\leq` *100, pointer index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IGIVHT`
     - 0
     - Global heat transfer void identifier; indicates which heat transfer coefficients will be used for voids. (Heat transfer coefficients are in namelists :envvar:`XPUT`, :envvar:`BCDATA`, :envvar:`OBS` and :envvar:`BF`.)

       | =0, no heat transfer to void
       | =1, heat transfer void identifier 1 (uses heat transfer coefficients that end with a 1, i.e., :envvar:`HFLV1`, etc.)
       | =2, heat transfer void identifier 2 (:envvar:`HFLV2`, etc.)
       | =3, heat transfer void identifier 3 (:envvar:`HFLV3`, etc.)

       .. seealso:: \  

          * :ref:`VoidHeatTransferCoefficients`

          * :ref:`ComponentPropertiesHeatTransferCoefficients`

          * :ref:`BafflePropertiesHeatTransferCoefficients`
     - NONE

   * - :envvar:`IVHT(k)`
     - :envvar:`IGIVHT`
     - Heat transfer void identifier for input-void region :envvar:`k`; indicates which heat transfer coefficients will be used for this void. (Heat transfer coefficients are in namelists :envvar:`XPUT`, :envvar:`BCDATA`, :envvar:`OBS` and :envvar:`BF`.)

       | =0, no heat transfer to void
       | =1, heat transfer void identifier 1 (uses heat transfer coefficients that end with a 1, i.e., :envvar:`HFLV1`, etc.)
       | =2, heat transfer void identifier 2 (:envvar:`HFLV2`, etc.)
       | =3, heat transfer void identifier 3 (:envvar:`HFLV3`, etc.)

       .. seealso:: \  

          * :ref:`VoidHeatTransferCoefficients`

          * :ref:`ComponentPropertiesHeatTransferCoefficients`

          * :ref:`BafflePropertiesHeatTransferCoefficients`
     - NONE

.. index::
   single: initial conditions; valves

.. index:: valves

.. _InitialConditionsValves:

Initial Conditions: Valves
=====================================================================

| *k* :math:`\leq` *999, valve index*
| *t* :math:`\leq` *500, time index*

.. note:: 
   * All valve locations are defined in Cartesian coordinates irrespective of the mesh coordinate system.
   * The valve model may be used to vent or charge adiabatic bubbles.

.. seealso:: \  Meshing & Geometry section :ref:`ValvesMnG`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist FL
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS
   
   * - :envvar:`FVALP(k)`
     - 
     - The external filename for tabular external pressure for valve :envvar:`k` as a function of time (used only if :envvar:`IVALPC(k)` :math:`\geq` 2)
     - NONE

   * - :envvar:`FVALT(k)`
     - 
     - The external filename for tabular external temperature for valve :envvar:`k` as a function of time (used only if :envvar:`IVALPT(k)` :math:`\geq` 2)
     - NONE      

   * - :envvar:`IF_2WAY(k)`
     - 0
     - The flag for valve flow direction

       | =0, two-way flow, both inflow and outflow are allowed
       | =1, outflow only; inflow not allowed
       | =2, inflow only; outflow not allowed
     - NONE

   * - :envvar:`IF_VALVE_ENABLED(k)`
     - 1
     - Activation flag for valve :envvar:`k`

       | =0, valve disabled
       | =1, valve enabled
     - NONE 

   * - :envvar:`IVALPC(k)`
     - 0
     - The column number for external pressure for valve :envvar:`k` in the external file
     - NONE     

   * - :envvar:`IVALTC(k)`
     - 0
     - The column number for external temperature for valve :envvar:`k` in the external file
     - NONE    

   * - :envvar:`TIMVAL(t)`
     - 0.0
     - Times for time-dependent valve arrays
     - [t]

   * - :envvar:`VALAREA(k)`
     - minimum cell size squared
     - Open area of valve :envvar:`k`
     - [L\ :sup:`2`]     

   * - :envvar:`VALC(k)`
     - 0.0
     - Valve pressure coefficient for valve :envvar:`k`

       A negative value for :envvar:`VALC` changes :envvar:`VALP` to a flow rate rather than a pressure. Rate can be positive or negative.
     - [L\ :sup:`3.5`/M\ :sup:`0.5`]

   * - :envvar:`VALCGX`
     - 0.02
     - Global vent coefficient multiplier: multiply VALCGX by the sum of all VALC to represent the global air flow through the granular material to the vents. The global valve coefficient accounts for the average flow losses through sand plus the reduction in the effective area of vents because of blockage by sand, and is experienced by all void regions regardless of whether they contain a vent.

       .. note:: Used only with the granular flow model with gas, :envvar:`IFGRN` = 1 (see :ref:`coreBlowingMR`).
     - NON-DIM

   * - :envvar:`VALP(t,k)`
     - :envvar:`PVOID`
     - External pressure for valve :envvar:`k` at time :envvar:`TIMVAL(t)`

       .. seealso:: \  :envvar:`PVOID` in :ref:`InitialConditionsUniform`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`VALT(t,k)`
     - :envvar:`TVOID`
     - External temperature for valve :envvar:`k` at time :envvar:`TIMVAL(t)`

       .. note:: Used only with compressible flow, :envvar:`ICMPRS` = 1.
       .. seealso:: \  :envvar:`TVOID` in :ref:`InitialConditionsUniform`.
     - [T]

   * - :envvar:`VALF_MIN(k)`
     - 0.0
     - Fluid fraction at valve :envvar:`k` below which fluid #1 is allowed to escape through the valve. 
       Both fluid #1 and gas escape when :math:`F` < :envvar:`VALF_MIN(k)`, and only gas escapes otherwise.

       .. note:: Used only with compressible flow, :envvar:`ICMPRS` = 1.
     - NON-DIM

   * - :envvar:`VALF_MAX(k)`
     - ...
     - Fluid fraction at valve :envvar:`k` above which the valve is considered blocked to any flow through it.
       Gas escapes when :math:`F` < :envvar:`VALF_MAX(k)`, and the valve is closed otherwise.

       .. note:: Defaults to 0.5 when the sharp interface model is on, :envvar:`ITB` = 1, and to 0.99 otherwise.
     - NON-DIM     

   * - :envvar:`VALVENAME (k)`
     - ' '
     - Valve :envvar:`k` name (up to 256 characters)
     - NONE

   * - :envvar:`VALX(k)`
     - ...
     - X location for valve :envvar:`k`

       .. note:: Default value is outside mesh.
     - [L]

   * - :envvar:`VALY(k)`
     - ...
     - Y location for valve :envvar:`k`

       .. note:: 

          * Default value is outside mesh.

          * Location is in degrees when using cylindrical coordinates.
     - [L]

   * - :envvar:`VALZ(k)`
     - ...
     - Z location for valve :envvar:`k`

       .. note:: Default value is outside mesh.
     - [L]

.. index:: active simulation control; valves

.. _EventsValves:

Active simulation control of valves
------------------------------------

.. seealso:: \  :doc:`model-reference` -->  :ref:`activeSimulationControlMR`.

| *k* :math:`\leq` *999, valve index*
| *t* :math:`\leq` *500, time index*
| *m* :math:`\leq` *10, valve event index*
| *i* :math:`\leq` *10, event action index*
| *j* :math:`\leq` *10, probe condition index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTEventsValves:

.. list-table:: Namelist XPUT
   :widths: 25 15 40 20
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NEVENTS_VAL(k)`
     - 0
     - Number of events for valve :envvar:`k`
     - NONE

   * - :envvar:`EVENT_NAME_VAL(m,k)`
     - ' '
     - Event :envvar:`m` name for valve :envvar:`k` (up to 50 characters)
     - NONE

   * - :envvar:`IF_EVENT_ENABLED_VAL(m,k)`
     - 1
     - Event :envvar:`m` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IF_GLOBAL_VAL(m,k)`
     - 0
     - Global condition flag for event :envvar:`m`

       | =0, use local conditions
       | =1, use global conditions

     - NONE

   * - :envvar:`IGLOBAL_VAL(m,k)`
     - 0
     - Global condition id for event :envvar:`m` (used if :envvar:`IF_GLOBAL_VAL(m,k)` = 1)
     - NONE

   * - :envvar:`NACTIONS_VAL(m,k)`
     - 0
     - Number of actions for event :envvar:`m`
     - NONE

   * - :envvar:`NPROBES_VAL(m,k)`
     - 0
     - Number of local probe conditions for event :envvar:`m` (used if :envvar:`IF_GLOBAL_VAL(m,k)` = 0)
     - NONE

   * - :envvar:`EVENT_CONDITION_LOGIC_VAL(m,k)`
     - ' '
     - Logical operator between probe conditions for event :envvar:`m`

       | ='ANY', event triggered when any of the enabled probe conditions satisfied
       | ='ALL', event triggered when all of the enabled probe conditions satisfied

       .. note:: Required when number of enabled probe conditions > 1
     - NONE

   * - :envvar:`EVENT_ACTION_VAL(i,m,k)`
     - ' '
     - Event action :envvar:`i` for event :envvar:`m`

       | ='VALP', change valve external pressure
       | ='VALT', change valve external temperature
       | ='OFF', close the valve

       .. note:: Actions 'VALP' and 'VALT' cannot be used together with action 'OFF' in the same event.
     - NONE

   * - :envvar:`VALP_EVENT(t,m,k)`
     - PVOID
     - Valve external pressure at time :envvar:`TIMVAL(t)` for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_VAL(i,m,k)` = 'VALP' for any action :envvar:`i`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`IVALPC_EVENT(m,k)`
     - 0
     - The column number for the valve external pressure for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_VAL(i,m,k)` = 'VALP' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FVALP_EVENT(m,k)`
     - 
     - The external filename for the tabular valve external pressure for event :envvar:`m` as a function of time

       .. note:: Used when :envvar:`IVALPC_EVENT(m,k)` :math:`\geq` 2.
     - NONE

   * - :envvar:`VALT_EVENT(t,m,k)`
     - TVOID
     - Valve external temperature at time :envvar:`TIMVAL(t)` for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_VAL(i,m,k)` = 'VALT' for any action :envvar:`i`.
     - [T]

   * - :envvar:`IVALTC_EVENT(m,k)`
     - 0
     - The column number for the valve external temperature for event :envvar:`m`

       .. note:: Used when :envvar:`EVENT_ACTION_VAL(i,m,k)` = 'VALT' for any action :envvar:`i`.
     - NONE

   * - :envvar:`FVALT_EVENT(m,k)`
     - 
     - The external filename for the valve external temperature for event :envvar:`m` as a function of time

       .. note:: Used when :envvar:`IVALTC_EVENT(m,k)` :math:`\geq` 2.
     - NONE

   * - :envvar:`IF_CONDITION_ENABLED_VAL(j,m,k)`
     - 1
     - Probe condition :envvar:`j` enable/disable flag for event :envvar:`m`

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IPRBD_VAL(j,m,k)`
     - 0
     - Probe id for probe condition :envvar:`j`
     - NONE

   * - :envvar:`IPRBSC_VAL(j,m,k)`
     - 0
     - Scalar id for probe condition :envvar:`j`

       .. note:: Used when :envvar:`PRBVNAM_VAL(j,m,k)` = 'SCSCLR'
     - NONE

   * - :envvar:`IPRBSCN_VAL(j,m,k)`
     - 0
     - Additional scalar index for probe condition :envvar:`j`

       Sediment species id, when :envvar:`PRBVNAM_VAL` = 'NSSPC', or
       Baffle flux surface id, when :envvar:`PRBVNAM_VAL` = 'TRACERN'.
     - NONE

   * - :envvar:`PRBVNAM_VAL(j,m,k)`
     - ...
     - Probe variable name for probe condition :envvar:`j`

       .. note:: Please check table :ref:`namelistXPUTTerminationControlPRBVNAM` for valid variable names and descriptions.
     - NONE

   * - :envvar:`IFPRBVABS_VAL(j,m,k)`
     - 0
     - Specify if to use the absolute probe variable value for probe condition :envvar:`j`

       | =0, use the real value
       | =1, use absolute value
     - NONE

   * - :envvar:`PRBVROP_VAL(j,m,k)`
     - ' '
     - Probe variable relational operator for probe condition :envvar:`j`

       | ='LT', probe condition satisfied when probe variable value is *less* than the critical value
       | ='LE', probe condition satisfied when probe variable value is *less* than or *equal* to the critical value
       | ='EQ', probe condition satisfied when probe variable value is *equal* to the critical value
       | ='NE', probe condition satisfied when probe variable value is *not equal* to the critical value
       | ='GE', probe condition satisfied when probe variable value is *greater* than or *equal* to the critical value
       | ='GT', probe condition satisfied when probe variable value is *greater* than the critical value
     - NONE

   * - :envvar:`PRBVAL_CRITICAL_VAL(j,m,k)`
     - 0.0
     - Critical value for probe condition :envvar:`j`
     - NONE

   * - :envvar:`PRBDT_VAL(j,m,k)`
     - 0.0
     - Duration after the critical value has reached for probe condition :envvar:`j`
     - [t]

.. index:: deep water velocity

.. _DeepWaterVelocity:

Deep Water Velocity for Mooring Line Model
=====================================================================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist FL
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`UDEEP`
     - 0.0
     - Deep water velocity in x-direction.
     - [L/t]

   * - :envvar:`VDEEP`
     - 0.0
     - Deep water velocity in y-direction.
     - [L/t]     

   * - :envvar:`WDEEP`
     - 0.0
     - Deep water velocity in z-direction.
     - [L/t]    

.. index:: wind shear

.. _WindShear:

Wind Shear
=====================================================================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist FL
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IWND`
     - 0
     - Flag for wind shear at horizontal fluid surface (wind in x-y plane only).

       | =0, no wind
       | =1, wind is constant in time and uniform over fluid surface
       | =2, wind varies with time and is uniform over fluid surface
     - NONE

   * - :envvar:`FWNDNAM`
     - ...
     - Name of wind data file

       In the file, the first, second and third columns are time, x-velocity, and y-velocity of wind at 10 meters above fluid surface, respectively. The columns are separated by white space or tabs. The maximum file size is 5000 lines.

       .. note:: Used only when :envvar:`IWND` = 2 (see above).
     - 

   * - :envvar:`UWND`
     - 0.0
     - x-velocity of wind at 10 meters above fluid surface
     - [L/t]

   * - :envvar:`VWND`
     - 0.0
     - y-velocity of wind at 10 meters above fluid surface
     - [L/t]

   * - :envvar:`WNDSHR`
     - 0.003
     - Drag coefficient for quadratic wind shear stress
     - NON-DIM

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist XPUT
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`RHOAIR`
     - ...
     - Air density for calculation of wind shear stress on horizontal fluid surfaces. 

       | Defaults to air density in simulation units, which is 1.225 kg/m\ :sup:`3` in SI system.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`windShearStressMR`.

     - [M/L\ :sup:`3`]


.. index::
   pair: fluid droplet; bubble sources

.. _FluidDropletBubbleSources:

Fluid Droplet/Bubble Sources
=====================================================================

| *n* :math:`\leq` *2000, source index*
| *ns* :math:`\leq` *99, scalar species index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`dropletSourceMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist FL
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_DROPLET_ENABLED(n)`
     - 1
     - Activation flag for droplet source :envvar:`n`

       | =0, droplet source disabled
       | =1, droplet source enabled
     - NONE 

   * - :envvar:`NDROP`
     - 0
     - Number of droplet sources
     - NONE

   * - :envvar:`XDROP(n)`
     - 0.0
     - Initial x-coordinate of droplet's center at source # :envvar:`n`
     - [L]

   * - :envvar:`YDROP(n)`
     - 0.0
     - Initial y-coordinate of droplet's center at source # :envvar:`n`
     - [L]

   * - :envvar:`ZDROP(n)`
     - 0.0
     - Initial z-coordinate of droplet's center at source # :envvar:`n`
     - [L]

   * - :envvar:`UDROP(n)`
     - 0.0
     - Initial x-velocity of droplet at source # :envvar:`n`

       .. note:: Does not apply to bubbles
     - [L/t]

   * - :envvar:`VDROP(n)`
     - 0.0
     - Initial y-velocity of droplet at source # :envvar:`n`

       .. note:: Does not apply to bubbles
     - [L/t]

   * - :envvar:`WDROP(n)`
     - 0.0
     - Initial z-velocity of droplet at source # :envvar:`n`

       .. note:: Does not apply to bubbles
     - [L/t]

   * - :envvar:`IFDROP(n)`
     - 1
     - Type of fluid at source # :envvar:`n`

       | =1 - fluid #1
       | =2 - fluid #2 or void
     - NONE

   * - :envvar:`RHODROP(n)`
     - ...
     - Fluid density in the droplet at source # :envvar:`n`. Can only be set for one-fluid, variable-density problems, :envvar:`NMAT` = 1 and :envvar:`IFRHO` :math:`>` 1.

       .. note:: Defaults to :envvar:`RHOF` for :envvar:`IFDROP(n)` = 1, and to :envvar:`RHOF2` for :envvar:`IFDROP(n)` = 2. 

       .. seealso:: \  

          * :envvar:`NMAT` and :envvar:`IFRHO` in :ref:`PhysicalModelOptions`.

          * :envvar:`RHOF` and :envvar:`RHOF2` in :ref:`DensityProperties`.
     - [M/L\ :sup:`3`]

   * - :envvar:`SCLRDROP(n,ns)`
     - 0.0
     - Initial scalar :envvar:`ns` concentration in the droplet at source # :envvar:`n`.
     - [M/L\ :sup:`3`]     

   * - :envvar:`TIMDROP(n)`
     - 1.0
     - Time interval between droplets at source # :envvar:`n`
     - [t]

   * - :envvar:`SDROP(n)`
     - 0.0
     - Starting time for droplet generation at source # :envvar:`n`
     - [t]

   * - :envvar:`EDROP(n)`
     - 2 x :envvar:`TWFIN`
     - Ending time for droplet generation at source # :envvar:`n`
     - [t]

   * - :envvar:`RDROP(n)`
     - 1.0
     - Initial droplet radius at source # :envvar:`n`
     - [L]

   * - :envvar:`PDROP(n)`
     - ...
     - Initial droplet pressure at source # :envvar:`n`

       .. note:: Defaults to :envvar:`PRESI` for :envvar:`IFDROP(n)` = 1 or :envvar:`NMAT` = 2, and to :envvar:`PVOID` for :envvar:`IFDROP(n)` = 2 and :envvar:`NMAT` = 1.

       .. seealso:: \  

          * :envvar:`PRESI` and :envvar:`PVOID` in :ref:`InitialConditionsUniform`.

          * :envvar:`NMAT` in :ref:`PhysicalModelOptions`.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`TDROP(n)`
     - ...
     - Initial droplet temperature at source # :envvar:`n`

       .. note:: Defaults to :envvar:`TEMPI` for :envvar:`IFDROP(n)` = 1, to :envvar:`TEMPI2` for :envvar:`IFDROP(n)` = 2 and :envvar:`NMAT` = 2, and to :envvar:`TVOID` for :envvar:`IFDROP(n)` = 2 and :envvar:`NMAT` = 1.

       .. seealso:: \  

          * :envvar:`TEMPI`, :envvar:`TEMPI2` and :envvar:`TVOID` in :ref:`InitialConditionsUniform`.

          * :envvar:`NMAT` in :ref:`PhysicalModelOptions`.
     - [T]

.. index::
   pair: baffle namelist; BF

.. _BaffleNamelistBF:

========================
Baffle Namelist - BF
========================

.. index:: baffle setup

.. _BaffleSetupBF:

Baffle Setup
======================

.. index::
   single: baffle properties; heat transfer coefficients

.. index:: heat transfer coefficients

.. _BafflePropertiesHeatTransferCoefficients:

Baffle Properties: Heat Transfer Coefficients
=====================================================================

| *m* :math:`\leq` *500, baffle index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`heatTransferAcrossBafflesMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BF
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`HBAF1(m)`
     - 0.0
     - Effective heat-transfer coefficient for fluid #1
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`HBAF2(m)`
     - 0.0
     - Effective heat-transfer coefficient for fluid #2
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`HBFV1(m)`
     - 0.0
     - Cross-baffle heat transfer coefficient to type 1 void

       .. note:: \ :envvar:`HBAF1` must also be specified.

       .. seealso:: \  :envvar:`IVHT` in :ref:`VoidPropertiesHeatTransfer`.
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`HBFV2(m)`
     - 0.0
     - Cross-baffle heat transfer coefficient to type 2 void

       .. note:: \ :envvar:`HBAF1` must also be specified.

       .. seealso:: \  :envvar:`IVHT` in :ref:`VoidPropertiesHeatTransfer`.
     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`HBFV3(m)`
     - 0.0
     - Cross-baffle heat transfer coefficient to type 3 void

       .. note:: \ :envvar:`HBAF1` must also be specified.

       .. seealso:: \  :envvar:`IVHT` in :ref:`VoidPropertiesHeatTransfer`.
     - [M T\ :sup:`-1` t\ :sup:`-3`]

.. index::
   single: baffle properties; porous properties

.. index:: porous properties

.. _BafflePropertiesPorousProperties:

Baffle Properties: Porous Properties
=====================================================================

| *m* :math:`\leq` *500, baffle index*
| *ns* :math:`\leq` *99, scalar index*

.. seealso:: \  :doc:`model-reference` -->  :ref:`flowLossesInPorousBafflesMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BF
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`KBAF1(m)`
     - 0.0
     - Linear coefficient for baffle pressure drop
     - [L/t]

   * - :envvar:`KBAF2(m)`
     - 0.0
     - Quadratic coefficient for baffle pressure drop
     - NON-DIM

   * - :envvar:`PBAF(m)`
     - ...
     - Baffle porosity (open area fraction)

       .. note:: Defaults to 0.0 for regular baffles, :envvar:`IFBAF(m)` = 0, defaults to 1.0 for flux-surface baffles, :envvar:`IFBAF(m)` = 1. or baffles used to create mass momentum sources, :envvar:`IFMMSRC(m)` = 1.

       .. seealso:: \  :envvar:`IFBAF(m)` in :ref:`BafflePropertiesFluxSurfaces`
     - NON-DIM

   * - :envvar:`IF_SCRST(ns,m)`
     - 0
     - Flag for resetting advectable scalar :envvar:`ns` at a porous or flux-surface baffle :envvar:`m`

       | = 0, do not reset scalar
       | = 1, reset scalar :envvar:`ns` to zero when fluid passes through the baffle.
     - NONE     

   * - :envvar:`IF_DFCT_RST(m)`
     - 0
     - Flag for resetting free surface defect concentration at a porous or flux-surface baffle :envvar:`m`

       | = 0, do not reset defect concentration
       | = 1, reset defect concentration to zero when fluid passes through the baffle.
     - NONE

   * - :envvar:`IF_RESDT_RST(m)`
     - 0
     - Flag for resetting fluid residence time at a porous or flux-surface baffle :envvar:`m`

       | = 0, do not reset fluid residence time
       | = 1, reset fluid residence time to zero when fluid passes through the baffle.
     - NONE

   * - :envvar:`IF_DFAIR_RST(m)`
     - 0
     - Flag for resetting entrained air concentration at a porous or flux-surface baffle :envvar:`m`

       | = 0, do not reset entrained air
       | = 1, reset entrained air to zero when fluid passes through the baffle.
     - NONE

   * - :envvar:`IF_DFCT_LF_RST(m)`
     - 0
     - Flag for resetting foam residue concentration at a porous or flux-surface baffle :envvar:`m`

       | = 0, do not reset foam residue concentration
       | = 1, reset foam residue concentration to zero when fluid passes through the baffle.
     - NONE

   * - :envvar:`IF_CONTACT_RST(m)`
     - 0
     - Flag for resetting wall/fluid contact time at a porous or flux-surface baffle :envvar:`m`

       | = 0, do not reset wall/fluid contact time
       | = 1, reset wall/fluid contact time to zero when fluid passes through the baffle.
     - NONE

   * - :envvar:`IF_PATH_RST(m)`
     - 0
     - Flag for resetting distance traveled by fluid at a porous or flux-surface baffle :envvar:`m`

       | = 0, do not reset distance traveled by fluid 
       | = 1, reset distance traveled by fluid to zero when fluid passes through the baffle.
     - NONE               

.. index::
   single: baffle properties; flux surfaces

.. index:: flux surfaces

.. _BafflePropertiesFluxSurfaces:

Baffle Properties: Flux Surfaces
=====================================================================

| *m* :math:`\leq` *500, baffle index*

.. seealso:: \  :ref:`BafflesMnG`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BF
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IFBAF(m)`
     - 0
     - Flux surface flag

       | = 0, regular baffle
       | = 1, use this baffle as flux surface
     - NONE

   * - :envvar:`IFTRC(m)`
     - 0
     - Tracer flag

       | =0, no tracer is introduced at flux surface :envvar:`m`
       | =1, tracers are introduced at flux surface :envvar:`m`
     - NONE

   * - :envvar:`CMSC_TR(m)`
     - 0.0
     - Molecular diffusion coefficient of tracer *m*
     - [M L\ :sup:`-1` t\ :sup:`-1`]

   * - :envvar:`RMSC_TR(m)`
     - 0.0
     - Turbulent diffusion coefficient multiplier for tracer *m*

     - NON-DIM

   * - :envvar:`FPTITL(m)`
     - "flux surfc m"
     - Flux surface title (up to 30 characters)
     - NONE

.. index::
   single: baffle regions; baffle location

.. index:: baffle location

.. _BaffleRegionsBaffleLocation:

Baffle Regions: Baffle Location
=====================================================================

| *n* :math:`\leq` *500, baffle region index*

.. note:: 
   * All regions and functions are defined in terms of Cartesian coordinates irrespective of the mesh coordinate system.
   * All baffle location parameters default outside of the mesh.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BF
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`BAFFLEREGIONNAME(n)`
     - ' '
     - Baffle region :envvar:`n` name (up to 256 characters)
     - NONE

   * - :envvar:`ISTLBF(n)`
     - 0
     - Flag for STL input for baffle region :envvar:`n`

       | =0, region :envvar:`n` is defined using quadratic function method
       | =1, region :envvar:`n` is defined using STL file
       | =2, region :envvar:`n` is defined using :envvar:`BX(n)`
       | =3, region :envvar:`n` is defined using :envvar:`BY(n)`
       | =4, region :envvar:`n` is defined using :envvar:`BZ(n)`
       | =5, region :envvar:`n` is defined using :envvar:`BANGL(n)`
       | =6, region :envvar:`n` is defined using :envvar:`BRA(n)`
       | =7, region :envvar:`n` is defined using :envvar:`BRS(n)`
       | =8, region :envvar:`n` is defined using :envvar:`BCONE(n)`                                          
     - NONE

   * - :envvar:`BANGL(n)`
     - ...
     - Baffle cylindrical angle for region :envvar:`n` (measured in the x-y plane from the x-axis, in degrees). Used when :envvar:`ISTLBF(n)` = 5.
     - DEGREES

   * - :envvar:`BCONE(n)`
     - ...
     - Baffle cone angle for region :envvar:`n` (measured from the z-axis in degrees). Used when :envvar:`ISTLBF(n)` = 8.
     - DEGREES

   * - :envvar:`BRA(n)`
     - ...
     - Baffle cylindrical radius for region :envvar:`n`. Used when :envvar:`ISTLBF(n)` = 6.
     - [L]

   * - :envvar:`BRS(n)`
     - ...
     - Baffle spherical radius for region :envvar:`n`. Used when :envvar:`ISTLBF(n)` = 7.
     - [L]

   * - :envvar:`BX(n)`
     - ...
     - X-coordinate for region :envvar:`n`. Used when :envvar:`ISTLBF(n)` = 2.
     - [L]

   * - :envvar:`BY(n)`
     - ...
     - y-coordinate for region :envvar:`n`. Used when :envvar:`ISTLBF(n)` = 3.
     - [L]

   * - :envvar:`BZ(n)`
     - ...
     - Z-coordinate for region :envvar:`n`. Used when :envvar:`ISTLBF(n)` = 4.
     - [L]

.. index::
   single: baffle regions; function coefficients

.. index:: function coefficients

.. _BaffleRegionsFunctionCoefficients:

Baffle Regions: Function Coefficients
=====================================================================

| *n* :math:`\leq` *500, baffle region index*

.. note:: All regions and functions are defined in terms of Cartesian coordinates irrespective of the mesh coordinate system. Used when :envvar:`ISTLBF(n)` = 0.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BF
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ISTLBF(n)`
     - 0
     - Flag for STL input for baffle region :envvar:`n`

       | =0, region :envvar:`n` is defined using quadratic function method
       | =1, region :envvar:`n` is defined using STL file
       | =2, region :envvar:`n` is defined using :envvar:`BX(n)`
       | =3, region :envvar:`n` is defined using :envvar:`BY(n)`
       | =4, region :envvar:`n` is defined using :envvar:`BZ(n)`
       | =5, region :envvar:`n` is defined using :envvar:`BANGL(n)`
       | =6, region :envvar:`n` is defined using :envvar:`BRA(n)`
       | =7, region :envvar:`n` is defined using :envvar:`BRS(n)`
       | =8, region :envvar:`n` is defined using :envvar:`BCONE(n)`                                          
     - NONE

   * - :envvar:`BCC(n)`
     - 0.0
     - Function constant coefficient for region :envvar:`n`
     - NON-DIM

   * - :envvar:`BCX(n)`
     - 0.0
     - Function coefficient of x for region :envvar:`n`
     - [1/L]

   * - :envvar:`BCY(n)`
     - 0.0
     - Function coefficient of y for region :envvar:`n`
     - [1/L]

   * - :envvar:`BCZ(n)`
     - 0.0
     - Function coefficient of z for region :envvar:`n`
     - [1/L]

   * - :envvar:`BCXY(n)`
     - 0.0
     - Function coefficient of xy for region :envvar:`n`
     - [1/L\ :sup:`2`]

   * - :envvar:`BCXZ(n)`
     - 0.0
     - Function coefficient of xz for region :envvar:`n`
     - [1/L\ :sup:`2`]

   * - :envvar:`BCYZ(n)`
     - 0.0
     - Function coefficient of yz for region :envvar:`n`
     - [1/L\ :sup:`2`]

   * - :envvar:`BCX2(n)`
     - 0.0
     - Function coefficient of x :sup:`2` for region :envvar:`n`
     - [1/L\ :sup:`2`]

   * - :envvar:`BCY2(n)`
     - 0.0
     - Function coefficient of y :sup:`2` for region :envvar:`n`
     - [1/L\ :sup:`2`]

   * - :envvar:`BCZ2(n)`
     - 0.0
     - Function coefficient of z :sup:`2` for region :envvar:`n`
     - [1/L\ :sup:`2`]

   * - :envvar:`BCRXY(n)`
     - 0.0
     - Function coefficient of :math:`\sqrt {{x^2} + {y^2}}` for region :envvar:`n`
     - [1/L]

   * - :envvar:`BCDUM(n)`
     - 0.0
     - Dummy function coefficient for region :envvar:`n` for customizing functions.

       .. note:: Used only for customized code, and represents coefficient of user-defined additional term in equation above. The routine :file:`fcn0.F90` is used to modify :envvar:`cdum` (subcomponent regions), :envvar:`fcdum` (fluid regions), and :envvar:`bcdum` (baffle regions). See :doc:`customization` for more information.
     - VARIES

.. index::
   single: baffle regions; general parameters

.. index:: general parameters

.. _BaffleRegionsGeneralParameters:

Baffle Regions: General Parameters
=====================================================================

| *k* :math:`\leq` *500, baffle region index*
| *m* :math:`\leq` *500, baffle index*
| *n* :math:`\leq` *500, baffle region index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BF
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`BIOH(n)`
     - 1
     - Baffle region type

       | =0, hole
       | =1, baffle
     - NONE

   * - :envvar:`FSTLBF(n)`
     - ...
     - Name of STL file for baffle region :envvar:`n`. Used when :envvar:`ISTLBF(n)` = 1. The file can be either in ASCII or in binary format.
     - 

   * - :envvar:`IBAF(n)`
     - 0
     - Associates region :envvar:`n` with  baffle :envvar:`IBAF(n)`.

       Use: :envvar:`IBAF(n)` = :envvar:`m`; region :envvar:`n` is part of baffle :envvar:`m`.

     - NONE

   * - :envvar:`IF_BFREG_ENABLED(n)`
     - 1
     - Activation flag for region :envvar:`n`

       | =0, region disabled
       | =1, region enabled
     - NONE     

   * - :envvar:`ISTLBF(n)`
     - 0
     - Flag for STL input for baffle region :envvar:`n`

       | =0, region :envvar:`n` is defined using quadratic function method
       | =1, region :envvar:`n` is defined using STL file
       | =2, region :envvar:`n` is defined using :envvar:`BX(n)`
       | =3, region :envvar:`n` is defined using :envvar:`BY(n)`
       | =4, region :envvar:`n` is defined using :envvar:`BZ(n)`
       | =5, region :envvar:`n` is defined using :envvar:`BANGL(n)`
       | =6, region :envvar:`n` is defined using :envvar:`BRA(n)`
       | =7, region :envvar:`n` is defined using :envvar:`BRS(n)`
       | =8, region :envvar:`n` is defined using :envvar:`BCONE(n)`                                          
     - NONE

   * - :envvar:`IFMMSRC(n)`
     - 
     - Associates baffle :envvar:`n` with a mass momentum source. The baffle is used to specify the shape of a mass momentum source using STL files or primitives available for baffles. For example, if we want to associate a mass momentum source :envvar:`m` with baffle :envvar:`n`, then we set :envvar:`IFMMSRC(n)` = :envvar:`m`.

       .. note:: Used only when :envvar:`NVTYP(m)` = 6.

       .. note:: Currently, this variable is not available in the GUI and can be specified only in the :file:`prepin.*` file.
     - NONE

.. index::
   single: baffle regions; limiters

.. index:: limiters

.. _BaffleRegionsLimiters:

Baffle Regions: Limiters
=====================================================================

| *n* :math:`\leq` *500, baffle region index*

.. note:: 
   * All regions and functions are defined in terms of Cartesian coordinates irrespective of the mesh coordinate system.
   * All region limiter defaults include the entire mesh.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BF
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`BANGLH(n)`
     - ...
     - Upper cylindrical angle limit for region :envvar:`n` (measured in the x-y plane from the x-axis, in degrees).
     - DEGREES

   * - :envvar:`BANGLL(n)`
     - ...
     - Lower cylindrical angle limit for region :envvar:`n` (measured in the x-y plane from the x-axis, in degrees).
     - DEGREES

   * - :envvar:`BCONEH(n)`
     - ...
     - Upper conical angle limit for region :envvar:`n` (measured from the z-axis in degrees).
     - DEGREES

   * - :envvar:`BCONEL(n)`
     - ...
     - Lower conical angle limit for region :envvar:`n` (measured from the z-axis in degrees).
     - DEGREES

   * - :envvar:`BRAH(n)`
     - ...
     - Upper cylindrical-radius limit for region :envvar:`n`
     - [L]

   * - :envvar:`BRAL(n)`
     - ...
     - Lower cylindrical-radius limit for region :envvar:`n`
     - [L]

   * - :envvar:`BRSH(n)`
     - ...
     - Upper spherical-radius limit for region :envvar:`n`
     - [L]

   * - :envvar:`BRSL(n)`
     - ...
     - Lower spherical-radius limit for region :envvar:`n`
     - [L]

   * - :envvar:`BXH(n)`
     - ...
     - Upper x-coordinate limit for region :envvar:`n`
     - [L]

   * - :envvar:`BXL(n)`
     - ...
     - Lower x-coordinate limit for region :envvar:`n`
     - [L]

   * - :envvar:`BYH(n)`
     - ...
     - Upper y-coordinate limit for region :envvar:`n`
     - [L]

   * - :envvar:`BYL(n)`
     - ...
     - Lower y-coordinate limit for region :envvar:`n`
     - [L]

   * - :envvar:`BZH(n)`
     - ...
     - Upper z-coordinate limit for region :envvar:`n`
     - [L]

   * - :envvar:`BZL(n)`
     - ...
     - Lower z-coordinate limit for region :envvar:`n`
     - [L]

.. index::
   single: baffle regions; transformations

.. index:: transformations

.. _BaffleRegionsTransformations:

Baffle Regions: Transformations
=====================================================================

| *n* :math:`\leq` *500, baffle region index*

.. note:: 
   * All regions and functions are defined in terms of Cartesian coordinates irrespective of the mesh coordinate system.
   * Magnifications are performed before rotations, which are performed before reflections, which are performed before translations.
   * X-rotations are performed before y-rotations, which are performed before z-rotations.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BF
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`BMAGN(n)`
     - 1.0
     - Magnification (scaling) factor for region :envvar:`n`
     - NON-DIM


   * - :envvar:`BMAGNX(n)`
     - 1.0
     - Scaling factor in x-direction for region :envvar:`n`
     - NON-DIM

   * - :envvar:`BMAGNY(n)`
     - 1.0
     - Scaling factor in y-direction for region :envvar:`n`
     - NON-DIM

   * - :envvar:`BMAGNZ(n)`
     - 1.0
     - Scaling factor in z-direction for region :envvar:`n`
     - NON-DIM

   * - :envvar:`BROTX(n)`
     - 0°
     - Region :envvar:`n` rotation about x-axis in degrees, positive in right-hand sense.
     - DEGREES

   * - :envvar:`BROTY(n)`
     - 0°
     - Region :envvar:`n` rotation about y-axis in degrees
     - DEGREES

   * - :envvar:`BROTZ(n)`
     - 0°
     - Region :envvar:`n` rotation about z-axis in degrees
     - DEGREES

   * - :envvar:`BTRNX(n)`
     - 0.0
     - Region :envvar:`n` translation in x-direction
     - [L]

   * - :envvar:`BTRNY(n)`
     - 0.0
     - Region :envvar:`n` translation in y-direction
     - [L]

   * - :envvar:`BTRNZ(n)`
     - 0.0
     - Region :envvar:`n` translation in z-direction
     - [L]

   * - :envvar:`BXTRFC(n)`
     - 0.0
     - x-coordinate of transformation center for baffle region :envvar:`n`

       .. note:: Magnification and rotation are made about the transformation center.
     - [L]

   * - :envvar:`BYTRFC(n)`
     - 0.0
     - y-coordinate of transformation center for baffle region :envvar:`n`

       .. note:: Magnification and rotation are made about the transformation center.
     - [L]

   * - :envvar:`BZTRFC(n)`
     - 0.0
     - z-coordinate of transformation center for baffle region :envvar:`n`

       .. note:: Magnification and rotation are made about the transformation center.
     - [L]

.. index::
   single: baffles; general parameters

.. index:: general parameters

.. _BafflesGeneralParameters:

Baffles: General Parameters
=====================================================================

| *m* :math:`\leq` *500, baffle index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist BF
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NBAFS`
     - 0
     - Number of baffles
     - NONE

   * - :envvar:`IF_BAFFLE_ENABLED(m)`
     - 1
     - Activation flag for baffle :envvar:`m`

       | =0, baffle disabled
       | =1, baffle enabled
     - NONE     

   * - :envvar:`IFRCBF`
     - 0
     - Baffle force calculation flag

       | =0, do not calculate forces on baffles
       | =1, calculate forces on baffles
     - NONE

.. index:: non-inertial reference frame

.. _NonInertialReferenceFrameMOTN:

=============================================
Non-Inertial Reference Frame Namelist - MOTN
=============================================

.. seealso:: \  :doc:`model-reference` -->  :ref:`nonInertialReferenceFrameMotionMR`.

.. _NonInertialReferenceFrameGeneralParameters:

Non-Inertial Reference Frame: General Parameters
=====================================================================

.. index:: center of rotation

.. _CenterofRotation:

Center of Rotation
-------------------------

.. note:: 
   * This namelist is only read if :envvar:`IACCF` :math:`>` 0 in :ref:`GravityAndNIRFOptions`.
   * Magnifications are performed before rotations, which are performed before reflections, which are performed before translations.
   * X-rotations are performed before y-rotations, which are performed before z-rotations.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist MOTN
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`RCX`
     - 0.0
     - X-coordinate point about which angular velocities are given
     - [L]

   * - :envvar:`RCY`
     - 0.0
     - Y-coordinate point about which angular velocities are given
     - [L]

   * - :envvar:`RCZ`
     - 0.0
     - Z-coordinate point about which angular velocities are given
     - [L]

   * - :envvar:`ICGINP`
     - 0
     - Flag to specify an external file to input center of rotation as a function of time
     - NONE

   * - :envvar:`FCGINP`
     - :file:`cg.inp`
     - The name of the tabular data input file for center of rotation coordinates as a function of time

       .. note:: Used only if :envvar:`IACCF` = 1 (\ :ref:`GravityAndNIRFOptions`) and :envvar:`IATYPE` = 2, 3, 4 or 5.
     - NONE

.. _NonInertialReferenceFrameType:

Non-Inertial Reference Frame Type
------------------------------------------

.. note:: Only if :envvar:`IACCF` = 1 in :ref:`GravityAndNIRFOptions`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IATYPE`
     - 0
     - Reference frame motion specification flag

       | =0, sinusoidal acceleration in x-direction plus rotation about x and z
       | =1, sinusoidal six degree of freedom model
       | =2, table-driven motion, evaluate angular velocity from acceleration by numerical integration, smooth variation only
       | =3, table-driven motion, evaluate angular acceleration from velocity by numerical differentiation, smooth variation only
       | =4, same as 2, but impulsive intervals are permitted
       | =5, same as 3, but impulsive intervals are permitted
       | =6, geophysical fluid flow

       .. note:: Control of time-step size is possible through tabular input (see :ref:`NonInertialReferenceFrameTabularData`).

     - NONE

.. index::
   single: rigid body dynamics; force flag

.. _RigidBodyDynamicsForceFlag:

Rigid Body Dynamics Force Flag
------------------------------------------

.. note:: Only if :envvar:`IACCF` = 2 in :ref:`GravityAndNIRFOptions`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IATYPE`
     - 0
     - Rigid body dynamics control force flag

       | =0, no control forces or torques
       | =1, radial oscillator control force
       | =2, angular oscillator control torque
       | =3, table driven control torques and forces

       .. note:: Control of time-step size is possible through tabular input (see :ref:`NonInertialReferenceFrameTabularData`).

     - NONE

.. index::
   single: non-inertial reference frame; simple spin and shake model

.. index:: simple spin and shake model

.. _NonInertialReferenceFrameSimpleSpinandShakeModel:

Non-Inertial Reference Frame: Simple Spin and Shake Model
==================================================================

.. note:: Relevant only if :envvar:`IACCF` = 1 in :ref:`GravityAndNIRFOptions` and :envvar:`IATYPE` = 0 (\ :ref:`NonInertialReferenceFrameType`).

.. seealso:: \  :doc:`model-reference` -->  :ref:`nonInertialReferenceFrameMotionMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist MOTN
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`A0`
     - 0.0
     - Acceleration magnitude of sinusoidal shake in x-direction
     - [L/t\ :sup:`2`]

   * - :envvar:`OMG0`
     - 0.0
     - Acceleration frequency for sinusoidal shake in x-direction (rad/s)
     - [1/t]

   * - :envvar:`RPS`
     - 0.0
     - Rotation rate of mesh about z-axis (rad/s)
     - [1/t]

   * - :envvar:`SPIN`
     - 0.0
     - Spin rate about x-axis for acceleration calculation (rad/s)
     - [1/t]

.. index::
   single: non-inertial reference frame; gravity field

.. index:: gravity field

.. _NonInertialReferenceFrameGravityField:

Non-Inertial Reference Frame: Gravity Field
==================================================================

.. note:: This namelist is only read if :envvar:`IACCF` :math:`>` 0 in :ref:`GravityAndNIRFOptions`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist MOTN
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`GRAVX`
     - 0.0
     - Initial x-direction component of gravity
     - [L/t\ :sup:`2`]

   * - :envvar:`GRAVY`
     - 0.0
     - Initial y-direction component of gravity
     - [L/t\ :sup:`2`]

   * - :envvar:`GRAVZ`
     - 0.0
     - Initial z-direction component of gravity
     - [L/t\ :sup:`2`]

.. index::
   single: non-inertial reference frame; sinusoidal 6 degree-of-freedom model

.. index:: sinusoidal 6 degree-of-freedom model

.. _NonInertialReferenceFrameSinusoidal6DegreeofFreedomModel:

Non-Inertial Reference Frame: Sinusoidal 6 Degree-of-Freedom Model
====================================================================

.. note:: 
   * This namelist is only read if :envvar:`IACCF` :math:`>` 0 in :ref:`GravityAndNIRFOptions`.
   * This model is used if :envvar:`IACCF` = 1 and :envvar:`IATYPE` = 1.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist MOTN
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`RFREQX`
     - 0.0
     - Angular frequency of angular displacement in the x-direction (rad/s)
     - [1/t]

   * - :envvar:`RFREQY`
     - 0.0
     - Angular frequency of angular displacement in the y-direction (rad/s)
     - [1/t]

   * - :envvar:`RFREQZ`
     - 0.0
     - Angular frequency of angular displacement in the z-direction (rad/s)
     - [1/t]

   * - :envvar:`RMAGX`
     - 0.0
     - Magnitude of angular displacement in the x-direction
     - NON-DIM (RADIANS)

   * - :envvar:`RMAGY`
     - 0.0
     - Magnitude of angular displacement in the y-direction
     - NON-DIM (RADIANS)

   * - :envvar:`RMAGZ`
     - 0.0
     - Magnitude of angular displacement in the z-direction
     - NON-DIM (RADIANS)

   * - :envvar:`RPHIX`
     - 0.0
     - Phase angle of angular displacement in the x-direction
     - NON-DIM (RADIANS)

   * - :envvar:`RPHIY`
     - 0.0
     - Phase angle of angular displacement in the y-direction
     - NON-DIM (RADIANS)

   * - :envvar:`RPHIZ`
     - 0.0
     - Phase angle of angular displacement in the z-direction
     - NON-DIM (RADIANS)

   * - :envvar:`TFREQX`
     - 0.0
     - Angular frequency of linear displacement in the x-direction (rad/s)
     - [1/t]

   * - :envvar:`TFREQY`
     - 0.0
     - Angular frequency of linear displacement in the y-direction (rad/s)
     - [1/t]

   * - :envvar:`TFREQZ`
     - 0.0
     - Angular frequency of linear displacement in the z-direction (rad/s)
     - [1/t]

   * - :envvar:`TMAGX`
     - 0.0
     - Magnitude of linear displacement in the x-direction
     - [L]

   * - :envvar:`TMAGY`
     - 0.0
     - Magnitude of linear displacement in the y-direction
     - [L]

   * - :envvar:`TMAGZ`
     - 0.0
     - Magnitude of linear displacement in the z-direction
     - [L]

   * - :envvar:`TPHIX`
     - 0.0
     - Phase angle of linear displacement in the x-direction
     - NON-DIM (RADIANS)

   * - :envvar:`TPHIY`
     - 0.0
     - Phase angle of linear displacement in the y-direction
     - NON-DIM (RADIANS)

   * - :envvar:`TPHIZ`
     - 0.0
     - Phase angle of linear displacement in the z-direction
     - NON-DIM (RADIANS)

.. index::
   single: non-inertial reference frame; tabular data

.. index:: tabular data

.. _NonInertialReferenceFrameTabularData:

Non-Inertial Reference Frame: Tabular Data
====================================================================

.. note:: 
   * This namelist is only read if :envvar:`IACCF` :math:`>` 0 in :ref:`GravityAndNIRFOptions`.
   * Tabular data is used if :envvar:`IATYPE` :math:`>` 2 for :envvar:`IACCF` = 1 (non-inertial reference frame) or :envvar:`IATYPE` = 3 for :envvar:`IACCF` = 2 (rigid body dynamics).

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist MOTN
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IMOTRD`
     - 2
     - Format indicator for acceleration input file (:file:`movin.inp`) or force input file (:file:`thrust.inp` for :envvar:`IACCF` = 2).

       Values of :envvar:`IMOTRD` other than 2 can be used for user-customized formats.
     - NONE

   * - :envvar:`FMOVIN`
     - :file:`movin.inp`
     - The name of the tabular data input file for linear and angular velocities and accelerations of the non-inertial reference frame.

       .. note:: Used only for :envvar:`IACCF` = 1 (\ :ref:`GravityAndNIRFOptions`).
     - NONE

.. index:: tabular data

.. _Tabular Data Conversion Factors:

Tabular Data Conversion Factors
----------------------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ACONV`
     - 1.0
     - Conversion factor for linear acceleration data or force data in tabular input
     - NON-DIM

   * - :envvar:`OMCONV`
     - 1.0
     - Conversion factor for angular velocity and acceleration or torque data in tabular input
     - NON-DIM

.. index::
   single: non-inertial reference frame; rigid body control forces

.. index:: rigid body control forces

.. _NonInertialReferenceFrameRigidBodyControlForces:

Non-Inertial Reference Frame: Rigid Body Control Forces
====================================================================

.. index:: radial oscillator control forces

.. _RadialOscillatorControlForces:

Radial Oscillator Control Forces (IATYPE = 1)
----------------------------------------------

.. note:: 
   * This namelist is only read if :envvar:`IACCF` = 2 in :ref:`GravityAndNIRFOptions`.
   * Tabular data is used if :envvar:`IATYPE` :math:`>` 2 for :envvar:`IACCF` = 1 (non-inertial reference frame) or :envvar:`IATYPE` = 3 for :envvar:`IACCF` = 2 (rigid body dynamics).

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist MOTN
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`RADKRB`
     - 0.0
     - Spring constant for radial oscillator model
     - [M/t\ :sup:`2`]

   * - :envvar:`RDMPRB`
     - 0.0
     - Damping constant for radial oscillator model
     - [M/t]

   * - :envvar:`REQRB`
     - 0.0
     - Equilibrium radial distance for radial oscillator model
     - [L]

.. index:: angular oscillator control forces

.. _AngularOscillatorControlForces:

Angular Oscillator Control Forces (IATYPE = 2)
----------------------------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist MOTN
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`TDMPRB`
     - 0.0
     - Damping constant for angular oscillator model
     - [M L\ :sup:`2` t\ :sup:`-1` rad\ :sup:`-1`]

   * - :envvar:`THEKRB`
     - 0.0
     - Spring constant for angular oscillator model
     - [M L\ :sup:`2` t\ :sup:`-2` rad\ :sup:`-1`]

.. index::
   single: non-inertial reference frame; geophysical fluid flow

.. index:: geophysical fluid flow

.. _NonInertialReferenceFrameGeophysicalFluidFlow:

Non-Inertial Reference Frame: Geophysical Fluid Flow
=========================================================

.. seealso:: \  :doc:`model-reference` -->  :ref:`shallowWaterFlowsMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist MOTN
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ANGLAT`
     - 0.0
     - Latitude (in degrees) between -90° and 90°. Positive in the northern hemisphere and negative in the southern hemisphere.

       .. note:: Used only when :envvar:`IACCF` = 1 (see :ref:`GravityAndNIRFOptions`) and :envvar:`IATYPE` = 6 (see :ref:`NonInertialReferenceFrameType`).
     - DEGREES

.. index::
   pair: graphic output; GRAFIC

.. _GraphicOutputGRAFIC:

=================================
Graphic Output Namelist - GRAFIC
=================================

.. _GraphicOutputDefaultColorFlagandSymmetryReflections:

Graphic Output: Default Color Flag and Symmetry Reflections
==============================================================

.. note:: Index locations are not applicable when using the multi-block model. All locations must be specified as coordinates.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist GRAFIC
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ICOLOR`
     - 1
     - Default color plot indicator

       | =0, no color plots unless specified
       | =1, 2-D spatial plots and 3-D plots will be generated as color plots
       | =2, all plots will be generated as color plots
     - NONE

   * - :envvar:`ISYMX`
     - 0
     - Symmetry reflection flag

       | =0, do not reflect plots
       | =1, show symmetry reflections across x = 0 for all 2-D spatial plots

       .. note:: For this option, :envvar:`IBCT(1)` = 1 (symmetry boundary on left), and the left edge of the mesh must be at x = 0. 

       .. seealso:: \  :envvar:`IBCT(n)` in :ref:`BoundaryConditionTypes`.
     - NONE

   * - :envvar:`ISYMY`
     - 0
     - Symmetry reflection flag

       | =0, do not reflect plots
       | =1, show symmetry reflections across y = 0 for all 2-D spatial plots

       .. note:: For this option, :envvar:`IBCT(3)` = 1 (symmetry boundary on front), and the front edge of the mesh must be at y = 0. 
     - NONE

   * - :envvar:`ISYMZ`
     - 0
     - Symmetry reflection flag

       | =0, do not reflect plots
       | =1, show symmetry reflections across z = 0 for all 2-D spatial plots

       .. note:: For this option, :envvar:`IBCT(5)` = 1 (symmetry boundary on bottom), and the bottom edge of the mesh must be at z = 0. 
     - NONE

.. index::
   single: graphic output; selected data

.. index:: selected data

.. _GraphicOutputSelectedData:

Graphic Output: Selected Data
==============================================================

| *n* :math:`\leq` *100, selected data index*

.. note:: Selected data increase the size of the :file:`flsgrf` file. The entire mesh is always included for selected data.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist GRAFIC
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ANMTYP(n)`
     - " "
     - Quantity to be stored as selected data

       | ='dfair' - volume fraction of entrained air
       | ='dfesp' - escaping gas flux at free surface       
       | ='dfct' - surface defect concentration, including free surface and foam residue defects
       | ='disslv' - dissolved solute concentration
       | ='dpth' - hydraulics data: free-surface elevation, fluid depth and the Froude Number
       | ='dsize' - droplet diameter in drift-flux model
       | ='drg' - drag function
       | ='echrg' - electric charge density
       | ='elast' - elastic stresses and deformations
       | ='eof2' - Zeta potential
       | ='epot' - electric potential and electric field magnitude
       | ='f' - fluid fraction
       | ='fill1' - filling times
       | ='fsi' - FSI/TSE model output
       | ='gaspr' - last gas pressure in cell
       | ='sldg' - sludge mass concentration       
       | ='veffcy' - venting efficiency       
     - NONE

   * - :envvar:`ANMTYP(n)`
     - " "
     - Quantity to be stored as selected data (continued)

       | ='mapor' - percent macroporosity
       | ='memb' - deflection of membranes and flexing walls
       | ='mupor' - percent microporosity
       | ='mu' - dynamic viscosity
       | ='ncg' - non-condensable gas density
       | ='p' - pressure
       | ='part' - particle locations, and velocities and sizes (mass particles)
       | ='path' - distance traveled by fluid
       | ='pcav' - cavitation potential
       | ='phchm' - phase change mass flux
       | ='qsr' - mass source rate per unit volume
       | ='qw' - heat flux
       | ='resdt' - fluid residence time
       | ='resid' - solid residue concentration
       | ='rho' - macroscopic density
       | ='rhoe' - macroscopic internal energy
       | ='rhosir' - iron solidification model output
     - NONE

   * - :envvar:`ANMTYP(n)`
     - " "
     - Quantity to be stored as selected data (continued)

       | ='sclr1', 'sclr2', etc. - scalar species magnitude
       | ='scour' - sediment scour model output
       | ='scrpot' - shear stress
       | ='seg' - solute concentration
       | ='sldfrc' - solidified fraction
       | ='stnr' - fluid strain rate
       | ='thead' - total hydraulic head
       | ='tn' - fluid temperature
       | ='tracer' - tracers
       | ='turb' - turbulence model quantities       
       | ='tw' - wall temperature
       | ='vel' - fluid velocities
       | ='vfob' - foam or phantom component volume fraction
       | ='vmobs' - component moisture content
       | ='vort' - vorticity vector
     - NONE

.. index::
   single: graphic output; contour plots

.. index:: contour plots

.. _GraphicOutputContourPlots:

Graphic Output: Contour Plots
==============================================================

Variable Specification
------------------------

| *n* :math:`\leq` *21, contour plot index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist GRAFIC
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CONTYP(n)`
     - "p"
     - Quantity to be contoured

       | ='drg' - Drag-related function
       | ='dtke' - Turbulence dissipation rate
       | ='f' - Fluid fraction
       | ='mu' - Dynamic viscosity
       | ='p' - Pressure
       | ='qsr' - Mass source rate
       | ='qw' - Heat flux
       | ='rho' - Macroscopic density
       | ='rhoe' - Macroscopic internal energy
       | ='sclr1', 'sclr2', etc. - Scalar species magnitude
       | ='sldcf1' - Niyama defect criterion
       | ='sldcf2' - Feeding efficiency index
       | ='sldcf3' - LCC porosity criterion
       | ='sldcf4' - Primary dendrite arm spacing
       | ='sldcf5' - Secondary dendrite arm spacing
       | ='sldcfn' - User defined functions (see :ref:`criterionfunctionsMR`)
       | ='sldclr' - Cooling rate at solidification
       | ='sldeut' - Eutectic mass fraction
       | ='sldfrc' - Solidified fraction
       | ='sldgrd' - Temperature gradient at solidification
       | ='sldlst' - Local solidification time
       | ='sldtim' - Solidification time
       | ='sldvel' - Solidus velocity
       | ='stnr' - Fluid strain rate
       | ='tke' - Specific turbulent energy
       | ='tn' - Fluid temperature
       | ='tw' - Wall temperature
       | ='vel' - Fluid velocity magnitude
       | ='vfob' - Foam or phantom component volume fraction
       | ='vmobs' - Component moisture content

     - NONE

   * - :envvar:`IDATYP(n)`
     - 0
     - Data source flag for contour plots

       | =0, use standard spatial data
       | =1, use selected data
     - NONE

.. index:: plot specification

.. _PlotSpecification:

Plot Specification
-------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ICTYP(n)`
     - ...
     - Contour type:

       | =0, standard black and white (B/W) plot
       | =1, color-shaded contour plot
       | =2, color-shaded plot with black contour lines
       | =3, both color-shaded and B/W plots
       | =4, both color-shaded with contour lines and B/W plots
       | =5, color contour lines

       .. note:: Default=0 if :envvar:`ICOLOR` = 0; default = 2 if :envvar:`ICOLOR` :math:`>` 0.

       .. seealso:: \  :envvar:`ICOLOR` in :ref:`GraphicOutputDefaultColorFlagandSymmetryReflections`.
     - NONE

   * - :envvar:`IPERC(n)`
     - ...
     - Indicator for type of plot:

       | =1, for 2-D x-y slice
       | =2, for 2-D y-z slice
       | =3, for 2-D x-z slice

       .. note:: Default determined by spatial limits specified for the plot.
     - NONE

   * - :envvar:`NC(n)`
     - 10
     - Number of contours to be plotted for line contour plots
     - NONE

   * - :envvar:`NCC(n)`
     - 5
     - Number of contour lines laid over color-shaded plots
     - NONE

   * - :envvar:`NCPLTS`
     - 0
     - Number of contour plots
     - NONE

   * - :envvar:`QMN(n)`
     - ...
     - If specified, :envvar:`QMN(n)` is the minimum contour value for all plots generated for contour plot :envvar:`n`. If :envvar:`QMN(n)` is not specified, the minimum contour for each plot will be the minimum data value for that individual plot.

       If both :envvar:`QMN(n)` and :envvar:`QMX(n)` are specified, all plots generated will have the same contour scale. However, if both :envvar:`QMN(n)` and :envvar:`QMX(n)` are specified as zero, all plots generated for contour plot n will use the same contour scale, with the minimum and maximum determined by the minimum and maximum of the accumulated data. 
     - Depends on quantity plotted.

   * - :envvar:`QMX(n)`
     - ...
     - If specified, :envvar:`QMX(n)` is the maximum contour value for all plots generated for contour plot :envvar:`n`. If :envvar:`QMX(n)` is not specified, the maximum contour for each plot will be the maximum data value for that individual plot.

       If both :envvar:`QMN(n)` and :envvar:`QMX(n)` are specified, all plots generated will have the same contour scale. However, if both :envvar:`QMN(n)` and :envvar:`QMX(n)` are specified as zero, all plots generated for contour plot :envvar:`n` will use the same contour scale, with the minimum and maximum determined by the minimum and maximum of the accumulated data.
     - Depends on quantity plotted.

.. index:: data limits

.. _DataLimits:

Data Limits
-------------------------

.. note:: Index locations are not applicable when using the multi-block model. All locations must be specified as coordinates.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IPERC(n)`
     - ...
     - Indicator for type of plot:

       | =1, for 2-D x-y slice
       | =2, for 2-D y-z slice
       | =3, for 2-D x-z slice

       .. note:: Default determined by spatial limits specified for the plot (see below). 
     - NONE

   * - :envvar:`IC1(n)`
     - ...
     - Minimum I index for plot :envvar:`n`.

       Alternate: :envvar:`XC1`

       .. note:: Default is first real cell.
     - NONE

   * - :envvar:`IC2(n)`
     - ...
     - Maximum I index for plot :envvar:`n`.

       Alternate: :envvar:`XC2`

       .. note:: Default is last real cell.
     - NONE

   * - :envvar:`JC1(n)`
     - ...
     - Minimum J index for plot :envvar:`n`.

       Alternate: :envvar:`YC1`

       .. note:: Default is first real cell.
     - NONE

   * - :envvar:`JC2(n)`
     - ...
     - Maximum J index for plot :envvar:`n`.

       Alternate: :envvar:`YC2`

       .. note:: Default is last real cell.
     - NONE

   * - :envvar:`KC1(n)`
     - ...
     - Minimum K index for plot :envvar:`n`.

       Alternate: :envvar:`ZC1`

       .. note:: Default is first real cell.
     - NONE

   * - :envvar:`KC2(n)`
     - ...
     - Maximum K index for plot :envvar:`n`.

       Alternate: :envvar:`ZC2`

       .. note:: Default is last real cell.
     - NONE

   * - :envvar:`XC1(n)`
     - ...
     - Minimum x-coordinate for plot :envvar:`n`.

       Alternate: :envvar:`IC1`
     - [L]

   * - :envvar:`XC2(n)`
     - ...
     - Maximum x-coordinate for plot :envvar:`n`.

       Alternate: :envvar:`IC2`
     - [L]

   * - :envvar:`YC1(n)`
     - ...
     - Minimum Y-coordinate for plot :envvar:`n`.

       Alternate: :envvar:`JC1`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`YC2(n)`
     - ...
     - Maximum x-coordinate for plot :envvar:`n`.

       Alternate: :envvar:`IC2`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`ZC1(n)`
     - ...
     - Minimum z-coordinate for plot :envvar:`n`.

       Alternate: :envvar:`KC1`
     - [L]

   * - :envvar:`ZC2(n)`
     - ...
     - Maximum z-coordinate for plot :envvar:`n`.

       Alternate: :envvar:`KC2`
     - [L]

.. index::
   single: graphic output; export data

.. index:: export data

.. _GraphicOutputExportData:

Graphic Output: Export Data 
============================

Variable Specification
-------------------------

| *n* :math:`\leq` *26, export data index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist GRAFIC
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`EXPTYP(n)`
     - ...
     - Quantity specified to be written to export data files:

       | ='drg' -rag-related function
       | = 'dtke' - Turbulence dissipation rate
       | ='f' - Fluid fraction
       | ='momen' - Fluid momentum
       | ='mu' - Dynamic viscosity
       | ='p' - Pressure
       | ='qsr' - Mass source rate
       | ='qw' - Heat flux
       | ='rho' - Macroscopic density
       | ='rhoe' - Macroscopic internal energy
       | ='sclr1', 'sclr2', etc. - Scalar species magnitude
       | ='sldcf1' - Niyama defect criterion
       | ='sldcf2' - Feeding efficiency index
       | ='sldcf3' - LCC porosity criterion
       | ='sldcf4' - Primary dendrite arm spacing
       | ='sldcf5' - Secondary dendrite arm spacing
       | ='sldcfn' - User defined functions (see :ref:`criterionfunctionsMR`)
       | ='sldclr' - Cooling rate at solidification
       | ='sldeut' - Eutectic mass fraction
       | ='sldfrc' - Solidified fraction
       | ='sldgrd' - Temperature gradient at solidification
       | ='sldlst' - Local solidification time
       | ='sldtim' - Solidification time
       | ='sldvel' - Solidus velocity
       | ='stnr' - Fluid strain rate
       | ='tke' - Specific turbulent energy
       | ='tn' - Fluid temperature
       | ='tw' - Wall temperature
       | ='vel' - Fluid velocity magnitude
       | ='vf' - Component volume fraction
       | ='vfob' - Foam or phantom component volume fraction

       .. note:: Default is no export data.

     - NONE

   * - :envvar:`IDATEX`
     - 0
     - Data source flag for export data

       | =0, use standard spatial data
       | =1, use selected data

     - NONE

.. index:: format specification

.. _FormatSpecification:

Format Specification
-------------------------

.. note:: FIELDVIEW\ |reg|, EnSight\ |reg| and Tecplot360\ |reg| can interface with the :file:`flsgrf` file directly, so using export data is not necessary for using these programs.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IBIN`
     - 0
     - Binary data flag for EnSight\ |reg| data

       | =0, ASCII data files
       | =1, binary data files
     - NONE

   * - :envvar:`IPLT3D`
     - 0
     - Data export flag

       | =0, no export data; or data specified by :envvar:`EXPTYP(n)`
       | =1, export 'f', 'vel', 'vf'
       | =2, export 'f ', 'vel', 'vf', and 'f', 'p', 'tn', 'rho', 'vf'
       | =3, export 'rho', 'momen', 'rhoe', (standard PLOT3D file)

       .. note:: If 'rhoe' not available, export 'vf'.

     - NONE

   * - :envvar:`ITRANP`
     - 1
     - Indicates format of export data for visualization programs

       | =0, :file:`PLOT3D Q` files. Only used when :envvar:`IPLT3D` :math:`>` 0.
       | =1, :file:`PLOT3D` Function Files / FIELDVIEW\ |reg| Function Files
       | =2, EnSight\ |reg| data files
     - NONE

.. index:: data limits

Data Limits
-------------------------

.. note:: 
   * The default for export data includes the entire mesh.
   * Index locations are not applicable when using the multi-block model. All locations must be specified as coordinates.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IEXH`
     - ...
     - Maximum I index for graphics export data

       Alternate: :envvar:`XEXH`
     - NONE

   * - :envvar:`IEXL`
     - ...
     - Minimum I index for graphics export data

       Alternate: :envvar:`XEXL`
     - NONE

   * - :envvar:`JEXH`
     - ...
     - Maximum J index for export data

       Alternate: :envvar:`YEXH`
     - NONE

   * - :envvar:`JEXL`
     - ...
     - Minimum J index for export data

       Alternate: :envvar:`YEXL`
     - NONE

   * - :envvar:`KEXH`
     - ...
     - Maximum K index for export data

       Alternate: :envvar:`ZEXH`
     - NONE

   * - :envvar:`KEXL`
     - ...
     - Minimum K index for export data

       Alternate: :envvar:`ZEXL`
     - NONE

   * - :envvar:`XEXH`
     - ...
     - Maximum x-coordinate for export data

       Alternate: :envvar:`IEXH`
     - [L]

   * - :envvar:`XEXL`
     - ...
     - Minimum x-coordinate for export data

       Alternate: :envvar:`IEXL`
     - [L]

   * - :envvar:`YEXH`
     - ...
     - Maximum y-coordinate for export data

       Alternate: :envvar:`JEXH`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`YEXL`
     - ...
     - Minimum y-coordinate for export data

       Alternate: :envvar:`JEXL`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`ZEXH`
     - ...
     - Maximum z-coordinate for export data

       Alternate: :envvar:`KEXH`
     - [L]

   * - :envvar:`ZEXL`
     - ...
     - Minimum z-coordinate for export data

       Alternate: :envvar:`KEXL`
     - [L]
  
.. index::
   single: graphic output; history probes

.. index:: history probes

.. _GraphicOutputHistoryProbes:

Graphic Output: History Probes
======================================

| *n* :math:`\leq` *999, history probe index*

.. note:: 
   * History probe requests add data to :file:`flsgrf`.
   * Indexes locations are not applicable when using the Multi-Block model.  All locations must be specified as coordinates.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist GRAFIC
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_PROBE_ENABLED(n)`
     - 1
     - Activation flag for history probe :envvar:`n`

       | =0, probe disabled
       | =1, probe enabled
     - NONE 

   * - :envvar:`IHPROBE_RESTART(n)`
     - 0
     - Flag for history probe :envvar:`n` initialization during restarts, :envvar:`IFREST` = 1.

       | =0, use probe definition from restart source file :file:`flsgrf`.
       | =1, use probe definition from :file:`prepin.*`, ignoring the probe data from restart source file :file:`flsgrf`.

       .. seealso:: \  :envvar:`IFREST` in :ref:`RestartOptions`.
     - NONE                            

   * - :envvar:`NPMOV(n)`
     - ...
     - Flag for type of fluid history probe :envvar:`n`

       | =0, fluid probe: stationary interpolated
       | =1, fluid probe: moving interpolated (moves with fluid like a marker particle)
       | =-1, FSI/TSE probe: stationary interpolated

       .. seealso:: \  See History Particles in :ref:`ParticleSetupHistoryParticles`.
     - NONE

   * - :envvar:`LOCOBS(n)`
     - 0
     - Index of the moving component to which the history probe :envvar:`n` is attached.
     - NONE

   * - :envvar:`LOCOPT(n)`
     - 0
     - Option flag for probe :envvar:`n` moving with a GMO component defined by :envvar:`LOCOBS(n)`

       =0, use the full velocity of the GMO component to move the probe, as if the probe is rigidly attached to it, irrespective of the probe's proximity to the component.

       =1, use only the translational velocity of the GMO component to move the probe.
     - NONE

   * - :envvar:`WINTL(n)`
     - ...
     - Title for history probe :envvar:`n` (up to 30 characters)

       Default title identifies history probe number.
     - 

   * - :envvar:`XLOC(n)`
     - ...
     - X-coordinate for history probe :envvar:`n`

     - [L]

   * - :envvar:`YLOC(n)`
     - ...
     - Y-coordinate for history probe :envvar:`n`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`ZLOC(n)`
     - ...
     - Z-coordinate for history probe :envvar:`n`

     - [L]

.. index::
   single: graphic output; iso-surface plots

.. index:: iso-surface plots

.. _GraphicOutputIsoSurfacePlots:

Graphic Output: Iso-Surface Plots
========================================

Variable Specification
--------------------------

| *n* :math:`<` *21, surface plot index*

.. note:: By default, iso-surface plots include the entire mesh.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CONTPS(n)`
     - "f"
     - Quantity to be contoured for iso-surface :envvar:`n`

       | ='cf' - Complement of fluid fraction
       | ='cvf' - Complement of volume fraction
       | ='drg' - Drag-related function
       | ='dtke' - Turbulence dissipation rate
       | ='f' - Fluid fraction
       | ='mu' - Dynamic viscosity
       | ='p' - Pressure
       | ='rho' - Macroscopic density
       | ='rhoe' - Macroscopic internal energy
       | ='sclr1' - 'sclr2',etc., Scalar species magnitude
       | ='sldcf1' - Niyama defect criterion
       | ='sldcf2' - Feeding efficiency index
       | ='sldcf3' - LCC porosity criterion
       | ='sldcf4' - Primary dendrite arm spacing
       | ='sldcf5' - Secondary dendrite arm spacing
       | ='sldcfn' - User defined functions (see :ref:`criterionfunctionsMR`)
       | ='sldclr' - Cooling rate at solidification
       | ='sldeut' - Eutectic mass fraction
       | ='sldfrc' - Solidified fraction
       | ='sldgrd' - Temperature gradient at solidification
       | ='sldlst' - Local solidification time
       | ='sldtim' - Solidification time
       | ='sldvel' - Solidus velocity
       | ='stnr' - Fluid strain rate
       | ='tke' - Specific turbulent energy
       | ='tn' - Fluid temperature
       | ='vel' - Fluid velocity magnitude
       | ='vf' - Component volume fraction
       | ='vfob' - Foam or phantom component volume fraction

     - NONE

   * - :envvar:`CLRTPS(n)`
     - ...
     - If specified, this quantity is used to color the iso-surface

       | ='drg' - Drag-related function
       | ='dtke' - Turbulence dissipation rate
       | ='f' - Fluid fraction
       | ='mu' - Dynamic viscosity
       | ='p' - Pressure
       | ='qsr' - Mass source rate
       | ='qw' - Heat flux
       | ='rho' - Macroscopic density
       | ='rhoe' - Macroscopic internal energy
       | ='sclr1', 'sclr2',etc. - Scalar species magnitude
       | ='sldcf1' - Niyama defect criterion
       | ='sldcf2' - Feeding efficiency index
       | ='sldcf3' - LCC porosity criterion
       | ='sldcf4' - Primary dendrite arm spacing
       | ='sldcf5' - Secondary dendrite arm spacing
       | ='sldcfn' - User defined functions (see :ref:`criterionfunctionsMR`)
       | ='sldclr' - Cooling rate at solidification
       | ='sldeut' - Eutectic mass fraction
       | ='sldfrc' - Solidified fraction
       | ='sldgrd' - Temperature gradient at solidification
       | ='sldlst' - Local solidification time
       | ='sldtim' - Solidification time
       | ='sldvel' - Solidus velocity
       | ='stnr' - Fluid strain rate
       | ='tke' - Specific turbulent energy
       | ='tn' - Fluid temperature
       | ='tw' - Wall temperature
       | ='vel' - Fluid velocity magnitude
       | ='vfob' - Foam or phantom component volume fraction
       | ='vmobs' - Component moisture content
     - NONE

   * - :envvar:`IDATPS(n)`
     - 0
     - Data source flag for iso-surface plot :envvar:`n`

       | =0, use standard spatial data
       | =1, use selected data
     - NONE

   * - :envvar:`QVAL(n)`
     - ...
     - Iso-surface value

       .. note:: Default is the average of the minimum and maximum values in the data.
     - Varies

Plot Specification
--------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`ICTPS(n)`
     - ...
     - Iso-surface type flag

       | =0, show wireframe
       | =1, show solid iso-surface
       | =2, show solid iso-surface and transparent component
       | =3, show solid iso-surface and transparent component complement
       | =4, show solid iso-surface and solid component
       | =5, show solid iso-surface and solid component complement

       .. note:: Defaults to type 2, unless :envvar:`ISWATLOC` = 1 (mesh block with shallow water model) then :envvar:`ICTPS` defaults to type 5.

       .. seealso:: \  :envvar:`ISWATLOC` in :ref:`MeshGeneratorMESH`.
     - NONE

   * - :envvar:`IHIDE(n)`
     - ...
     - Hidden surface indicator for wireframe plots

       | =-1, remove hidden surfaces using orientation test and blockage and taking into account blanking
       | =0, plot all surfaces
       | =1, remove hidden surfaces using orientation test and blockage
       | =2, remove hidden surfaces using only surface orientation test

       .. note:: Defaults to 0 for plots of fluid fraction and its complement, to 1 for plots of volume fraction and its complement, and to -1 for all other plots. 
     - NONE

   * - :envvar:`IPASN(n)`
     - 1
     - Iso-surface contour flag for wireframe plots

       | =0, use three-dimensional shifted points for surface contours
       | =1, surface in all coordinate planes
       | =2, plot contours in x planes
       | =3, plot contours in y planes
       | =4, plot contours in z planes
       | =5, use 4-sided surface elements but only plot edges
     - NONE

   * - :envvar:`ISVEW(n)`
     - 1
     - Viewpoint for iso-surface plot :envvar:`n`
     - NONE

   * - :envvar:`NSPLTS`
     - 0
     - Number of iso-surface plots
     - NONE

   * - :envvar:`SQMN(n)`
     - ...
     - If specified, :envvar:`SQMN(n)` is the minimum contour value for the coloring variable :envvar:`CLRTPS` for all plots generated for iso-surface plot :envvar:`n`. If :envvar:`SQMN(n)` is not specified, the minimum contour for each plot will be the minimum data value for that individual plot.

       If both :envvar:`SQMN(n)` and :envvar:`SQMX(n)` are specified, all plots generated will have the same contour scale. However, if both :envvar:`SQMN(n)` and :envvar:`SQMX(n)` are specified as zero, all plots generated for iso-surface plot :envvar:`n` will use the same contour scale, with the minimum and maximum determined by the minimum and maximum of the accumulated data.
     - Varies

   * - :envvar:`SQMX(n)`
     - ...
     - If specified, :envvar:`SQMX(n)` is the maximum contour value for the coloring variable CLRTPS for all plots generated for iso-surface plot :envvar:`n`. If :envvar:`SQMX(n)` is not specified, the maximum contour for each plot will be the maximum data value for that individual plot.

       If both :envvar:`SQMN(n)` and :envvar:`SQMX(n)` are specified, all plots generated will have the same contour scale. However, if both :envvar:`SQMN(n)` and :envvar:`SQMX(n)` are specified as zero, all plots generated for iso-surface plot :envvar:`n` will use the same contour scale, with the minimum and maximum determined by the minimum and maximum of the accumulated data.
     - Varies

Data Limits
--------------------------

.. note:: Index locations are not applicable when using the multi-block model. All locations must be specified as coordinates.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IS1(n)`
     - ...
     - Minimum I index for plot :envvar:`n`

       Alternate: :envvar:`XS1`
     - NONE

   * - :envvar:`IS2(n)`
     - ...
     - Maximum I index for plot :envvar:`n`

       Alternate: :envvar:`XS2`
     - NONE

   * - :envvar:`JS1(n)`
     - ...
     - Minimum J index for plot :envvar:`n`

       Alternate: :envvar:`YS2`
     - NONE

   * - :envvar:`JS2(n)`
     - ...
     - Maximum J index for plot :envvar:`n`

       Alternate: :envvar:`YS2`
     - NONE

   * - :envvar:`KS1(n)`
     - ...
     - Minimum K index for plot :envvar:`n`

       Alternate: :envvar:`ZS1`
     - NONE

   * - :envvar:`KS2(n)`
     - ...
     - Maximum K index for plot :envvar:`n`

       Alternate: :envvar:`ZS1`
     - NONE

   * - :envvar:`XS1(n)`
     - ...
     - Minimum x-coordinate for plot :envvar:`n`

       Alternate: :envvar:`IS1`
     - [L]

   * - :envvar:`XS2(n)`
     - ...
     - Maximum x-coordinate for plot :envvar:`n`

       Alternate: :envvar:`IS2`
     - [L]

   * - :envvar:`YS1(n)`
     - ...
     - Minimum y-coordinate for plot :envvar:`n`

       Alternate: :envvar:`JS1`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`YS2(n)`
     - ...
     - Maximum y-coordinate for plot :envvar:`n`

       Alternate: :envvar:`JS2`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`ZS1(n)`
     - ...
     - Minimum z-coordinate for plot :envvar:`n`

       Alternate: :envvar:`KS1`
     - [L]

   * - :envvar:`ZS2(n)`
     - ...
     - Maximum z-coordinate for plot :envvar:`n`

       Alternate: :envvar:`KS2`
     - [L]

.. index::
   single: graphic output; particle plots

.. index:: particle plots

.. _GraphicOutputParticlePlots:

Graphic Output: Particle Plots
========================================

Variable Specification
--------------------------

| *n* :math:`\leq` *21, particle plot index*

.. note:: By default, iso-surface plots include the entire mesh.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CONTPP(n)`
     - "f"
     - Quantity for color contours under particles (for 2-D plots)

       | ='drg' - Drag-related function
       | ='dtke' - Turbulence dissipation rate
       | ='f' - Fluid fraction
       | ='mu' - Dynamic viscosity
       | ='p' - Pressure
       | ='qsr' - Mass source rate
       | ='qw' - Heat flux
       | ='rho' - Macroscopic density
       | ='rhoe' - Macroscopic internal energy
       | ='sclr1', 'sclr2', etc. - Scalar species magnitude
       | ='sldcf1' - Niyama defect criterion
       | ='sldcf2' - Feeding efficiency index
       | =' sldcf3' - LCC porosity criterion
       | ='sldcf4' - Primary dendrite arm spacing
       | ='sldcf5' - Secondary dendrite arm spacing
       | ='sldcfn' - User defined functions (see :ref:`criterionfunctionsMR`)
       | ='sldclr' - Cooling rate at solidification
       | ='sldeut' - Eutectic mass fraction
       | ='sldfrc' - Solidified fraction
       | ='sldgrd' - Temperature gradient at solidification
       | ='sldlst' - Local solidification time
       | ='sldtim' - Solidification time
       | ='sldvel' - Solidus velocity
       | ='stnr' - Fluid strain rate
       | ='tke' - Specific turbulent energy
       | ='tn' - Fluid temperature
       | ='tw' - Wall temperature
       | ='vel' - Fluid velocity magnitude
       | ='vfob' - Foam or phantom component volume fraction
       | ='vmobs' - Component moisture content

       .. note:: Default is no contours.
     - NONE

   * - :envvar:`IDATPP(n)`
     - 0
     - Data source flag for particle plots
 
       | =0, use standard spatial data
       | =1, use selected data

     - NONE

Plot Specification
--------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IPERP(n)`
     - ...
     - Indicator of type of plot 

       | =1, 2-D x-y slice
       | =2, 2-D y-z slice
       | =3, 2-D x-z slice
       | =4, for perspective 3-D

       .. note:: Default determined by spatial limits specified for the plot.
     - NONE

   * - :envvar:`IPTYP(n)`
     - 0
     - Particle plot type:

       | =0, standard black and white plot
       | =1, 2-D plot where particle color denotes position in the third direction. (All particles are projected onto a 2-D plane.)
       | =2, color particles according to diameter
       | =3, color particles according to particle u-velocity
       | =4, color particles according to particle v-velocity
       | =5, color particles according to particle w-velocity
       | =6, color particles according to particle velocity magnitude

     - NONE

   * - :envvar:`IPVEW(n)`
     - 1
     - Viewpoint for 3-D perspective particle plot :envvar:`n`
     - NONE

   * - :envvar:`NPPLTS`
     - 0
     - Number of particle plots
     - NONE

Data Limits
--------------------------

.. note:: Index locations are not applicable when using the multi-block model. All locations must be specified as coordinates.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table::
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IPERP(n)`
     - ...
     - Indicator of type of plot 

       | =1, 2-D x-y slice
       | =2, 2-D y-z slice
       | =3, 2-D x-z slice
       | =4, for perspective 3-D

       .. note:: Default determined by spatial limits specified for the plot.
     - NONE

   * - :envvar:`IP1(n)`
     - ...
     - Minimum I index for plot :envvar:`n`

       Alternate: :envvar:`XP1`

       .. note:: Default is first real cell.
     - NONE

   * - :envvar:`IP2(n)`
     - ...
     - Maximum I index for plot :envvar:`n`

       Alternate: :envvar:`XP2`

       .. note:: Default is last real cell.
     - NONE

   * - :envvar:`JP1(n)`
     - ...
     - Minimum J index for plot :envvar:`n`

       Alternate: :envvar:`YP1`

       .. note:: Default is first real cell.
     - NONE

   * - :envvar:`JP2(n)`
     - ...
     - Maximum J index for plot :envvar:`n`

       Alternate: :envvar:`YP2`

       .. note:: Default is last real cell.
     - NONE

   * - :envvar:`KP1(n)`
     - ...
     - Minimum K index for plot :envvar:`n`

       Alternate: :envvar:`ZP1`

       .. note:: Default is first real cell.
     - NONE

   * - :envvar:`KP2(n)`
     - ...
     - Maximum K index for plot :envvar:`n`

       Alternate: :envvar:`ZP2`

       .. note:: Default is last real cell.
     - NONE

   * - :envvar:`XP1(n)`
     - ...
     - Minimum x-coordinate for plot :envvar:`n`

       Alternate: :envvar:`IP1`
     - [L]

   * - :envvar:`XP2(n)`
     - ...
     - Maximum x-coordinate for plot :envvar:`n`

       Alternate: :envvar:`IP2`
     - [L]

   * - :envvar:`YP1(n)`
     - ...
     - Minimum y-coordinate for plot :envvar:`n`

       Alternate: :envvar:`JP1`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`YP2(n)`
     - ...
     - Maximum y-coordinate for plot :envvar:`n`

       Alternate: :envvar:`JP2`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`ZP1(n)`
     - ...
     - Minimum z-coordinate for plot :envvar:`n`

       Alternate: :envvar:`KP1`

     - [L]

   * - :envvar:`ZP2(n)`
     - ...
     - Maximum z-coordinate for plot :envvar:`n`

       Alternate: :envvar:`KP2`
     - [L]

.. index::
   single: graphic output; pre-processor geometry plots

.. index:: pre-processor geometry plots

.. _GraphicOutputPreprocessorGeometryPlots:

Graphic Output: Pre-processor Geometry Plots
==========================================================

.. note:: Default pre-processor plots are single slice in each plane at center of mesh. Index locations are not applicable when using the Multi-Block model. All locations must be specified coordinates.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist GRAFIC
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IOBSL`
     - ...
     - Minimum x cell for pre-processor plots

       Alternate: :envvar:`XOBSL`
     - NONE

   * - :envvar:`IOBSR`
     - ...
     - Maximum x cell for pre-processor plots

       Alternate: :envvar:`XOBSR`
     - NONE

   * - :envvar:`JOBSBK`
     - ...
     - Maximum y cell for pre-processor plots

       Alternate: :envvar:`YOBSBK`
     - NONE

   * - :envvar:`JOBSF`
     - ...
     - Minimum y cell for pre-processor plots

       Alternate: :envvar:`YOBSF`
     - NONE

   * - :envvar:`KOBSB`
     - ...
     - Minimum z cell for pre-processor plots

       Alternate: :envvar:`ZOBSB`
     - NONE

   * - :envvar:`KOBST`
     - ...
     - Maximum z cell for pre-processor plots 

       Alternate: :envvar:`ZOBST`
     - NONE

   * - :envvar:`XOBSL`
     - ...
     - Minimum x-coordinate for pre-processor plots

       Alternate: :envvar:`IOBSL`
     - [L]

   * - :envvar:`XOBSR`
     - ...
     - Maximum x-coordinate for pre-processor plots

       Alternate: :envvar:`IOBSR`
     - [L]

   * - :envvar:`YOBSBK`
     - ...
     - Maximum y-coordinate for pre-processor plots

       Alternate: :envvar:`JOBSBK`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`YOBSF`
     - ...
     - Minimum y-coordinate for pre-processor plots 
       
       Alternate: :envvar:`JOBSF`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`ZOBSB`
     - ...
     - Minimum z-coordinate for pre-processor plots 

       Alternate: :envvar:`KOBSB`
     - [L]

   * - :envvar:`ZOBST`
     - ...
     - Maximum z-coordinate for pre-processor plots 

       Alternate: :envvar:`KOBST`
     - [L]

.. index::
   single: graphic output; velocity vector plots

.. index:: 
   single: velocity; vector plots

.. _GraphicOutputVelocityVectorPlots:

Graphic Output: Velocity Vector Plots
==========================================

Variable Specification
-----------------------------

| *n* :math:`\leq` *21, vector plot index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist GRAFIC
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CONTPV(n)`
     - ...
     - Quantity to be contoured under the vectors (cannot be used with :envvar:`CLRTPV`)

       Default = no contours if ICOLOR=0; default ='f ' if ICOLOR :math:`>` 0.

       | =' ' - no contour shading
       | ='drg' - Drag-related function
       | ='dtke' - Turbulence dissipation rate
       | ='f ' - Fluid fraction
       | ='mu' - Dynamic viscosity
       | ='p' - Pressure
       | ='qsr' - Mass source rate
       | ='qw' - Heat flux
       | ='rho' - Macroscopic density
       | ='rhoe' - Macroscopic internal energy
       | ='sclr1','sclr2',etc. - Scalar species magnitude
       | ='sldcf1' - Niyama defect criterion
       | ='sldcf2' - Feeding efficiency index
       | ='sldcf3' - LCC porosity criterion
       | ='sldcf4' - Primary dendrite arm spacing
       | ='sldcf5' - Secondary dendrite arm spacing
       | ='sldcfn' - User defined functions (see :ref:`criterionfunctionsMR`)
       | ='sldclr' - Cooling rate at solidification
       | ='sldeut' - Eutectic mass fraction
       | ='sldfrc' - Solidified fraction
       | ='sldgrd' - Temperature gradient at solidification
       | ='sldlst' - Local solidification time
       | ='sldtim' - Solidification time
       | ='sldvel' - Solidus velocity
       | ='stnr' - Fluid strain rate
       | ='tke' - Specific turbulent energy
       | ='tn' - Fluid temperature
       | ='tw' - Wall temperature
       | ='vel' - Fluid velocity magnitude
       | ='vfob' - Foam or phantom component volume fraction
       | ='vmobs' - Component moisture content

     - NONE

   * - :envvar:`CLRTPV(n)`
     - ...
     - If specified, this quantity is used to color the vectors in both 2-D and 3-D vector plots. The color used for each vector is determined by the value of this quantity at the vector location. The quantities that can be specified are the same as those for :envvar:`CONTPV(n)`. (Cannot be used with :envvar:`CONTPV`.)
     - NONE

   * - :envvar:`IDATPV(n)`
     - 0
     - Data source flag for vector plots

       | =0, use standard spatial data
       | =1, use selected data
     - NONE


Plot Specification
-------------------------

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist GRAFIC
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IPERV(n)`
     - ...
     - Indicator for type of plot

       | =1 for 2-D x-y slice
       | =2 for 2-D y-z slice
       | =3 for 2-D x-z slice
       | =4 for perspective 3-D

       .. note:: Default determined by spatial limits specified for the plot.
     - NONE

   * - :envvar:`IV3OPT(n)`
     - 1
     - 3-D vector option

       | =0, plot all vectors in the specified region
       | =1, only plot vectors on the front faces of the specified region
       | =2, only plot vectors on the back faces of the specified region
       | =3, only use the vector components that lie on the back faces to draw the vectors on those faces
       | =4, only use the vector components that lie on the front faces to draw the vectors on those faces
     - NONE

   * - :envvar:`IVTYP(n)`
     - 0
     - Vector plot type

       | =0, do not color vectors
       | =1, 2-D plots where the vector is colored by 2-D velocity magnitude
       | =2, 2-D plots where the vector is colored by the third component of velocity
       | =3, color vectors where the color of the vector is determined by :envvar:`CLRTPV`

     - NONE

   * - :envvar:`IVVEW(n)`
     - 1
     - Viewpoint for 3-D perspective velocity vector plot :envvar:`n`
     - NONE

   * - :envvar:`NVPLTS`
     - 0
     - Number of velocity vector plots
     - NONE

   * - :envvar:`VELMX`
     - 1.0
     - Scaling multiplier for velocity vectors
     - NON-DIM

   * - :envvar:`VMAX(n)`
     - ...
     - If specified as a positive value, :envvar:`VMAX(n)` is the maximum velocity for scaling vector lengths for all plots generated for vector plot :envvar:`n` (all plots would use the same vector length scale making comparison between plots easier). However, if :envvar:`VMAX(n)` is a negative value, all plot n vector plots would use the same vector length scale, determined by the maximum velocity in the accumulated data. 

       If :envvar:`VMAX(n)` is not specified, the vectors for each plot are scaled independently based on the maximum velocity for each plot.
     - [L/t]

   * - :envvar:`VQMN(n)`
     - ...
     - If specified, :envvar:`VQMN(n)` is the minimum contour or coloring value for all plots generated for vector plot :envvar:`n`. If :envvar:`VQMN(n)` is not specified, the minimum value for each plot will be the minimum data value for that individual plot.

       If both :envvar:`VQMN(n)` and :envvar:`VQMX(n)` are specified, all plots generated will have the same contour or coloring scale. However, if both :envvar:`VQMN(n)` and :envvar:`VQMX(n)` are specified as zero, all plots generated for vector plot :envvar:`n` will use the same contour or coloring scale, with the minimum and maximum determined by the minimum and maximum of the accumulated data.
     - Varies

   * - :envvar:`VQMX(n)`
     - ...
     - If specified, :envvar:`VQMX(n)` is the maximum contour or coloring value for all plots generated for vector plot :envvar:`n`. If :envvar:`VQMX(n)` is not specified, the maximum value for each plot will be the maximum data value for that individual plot. 

       If both :envvar:`VQMN(n)` and :envvar:`VQMX(n)` are specified, all plots generated will have the same contour or coloring scale. However, if both :envvar:`VQMN(n)` and :envvar:`VQMX(n)` are specified as zero, all plots generated for vector plot :envvar:`n` will use the same contour or coloring scale, with the minimum and maximum determined by the minimum and maximum of the accumulated data.
     - Varies

   * - :envvar:`VSCALE(n)`
     - 1.0
     - Scaling multiplier for velocity vectors
     - NON-DIM


Data Limits
-------------------------

.. note:: Index locations are not applicable when using the multi-block model. All locations must be specified as coordinates.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist GRAFIC
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IPERV(n)`
     - ...
     - Indicator for type of plot

       | =1 for 2-D x-y slice
       | =2 for 2-D y-z slice
       | =3 for 2-D x-z slice
       | =4 for perspective 3-D

       .. note:: Default determined by spatial limits specified for the plot.
     - NONE

   * - :envvar:`IV1(n)`
     - ...
     - Minimum I index for plot :envvar:`n`

       Alternate: :envvar:`XP1`

       Default is first real cell.
     - NONE

   * - :envvar:`IV2(n)`
     - ...
     - Maximum I index for plot :envvar:`n`

       Alternate: :envvar:`XP2`

       Default is first real cell.
     - NONE

   * - :envvar:`JV1(n)`
     - ...
     - Minimum J index for plot :envvar:`n`

       Alternate: :envvar:`YP1`

       Default is first real cell.
     - NONE

   * - :envvar:`JV2(n)`
     - ...
     - Maximum J index for plot :envvar:`n`

       Alternate: :envvar:`YP2`

       Default is first real cell.
     - NONE

   * - :envvar:`KV1(n)`
     - ...
     - Minimum K index for plot :envvar:`n`

       Alternate: :envvar:`ZP1`

       Default is first real cell.
     - NONE

   * - :envvar:`KV2(n)`
     - ...
     - Maximum K index for plot :envvar:`n`

       Alternate: :envvar:`ZP2`

       Default is first real cell.
     - NONE

   * - :envvar:`XV1(n)`
     - ...
     - Minimum x-coordinate for plot :envvar:`n`

       Alternate: :envvar:`IP1`
     - [L]

   * - :envvar:`XV2(n)`
     - ...
     - Maximum x-coordinate for plot :envvar:`n`

       Alternate: :envvar:`IP2`
     - [L]

   * - :envvar:`YV1(n)`
     - ...
     - Minimum y-coordinate for plot :envvar:`n`

       Alternate: :envvar:`JP1`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`YV2(n)`
     - ...
     - Maximum y-coordinate for plot :envvar:`n`

       Alternate: :envvar:`JP2`

       .. note:: Location is in degrees when using cylindrical coordinates.
     - [L] or DEGREES

   * - :envvar:`ZV1(n)`
     - ...
     - Minimum z-coordinate for plot :envvar:`n`

       Alternate: :envvar:`KP1`
     - [L]

   * - :envvar:`ZV2(n)`
     - ...
     - Maximum z-coordinate for plot :envvar:`n`

       Alternate: :envvar:`KP2`
     - [L]


.. index::
   single: graphic output; viewpoint specification

.. index:: viewpoint specification

.. _GraphicOutputViewpoint Specification:

Graphic Output: Viewpoint Specification
==========================================

Variable Specification
-----------------------------

| *n* :math:`<` *21, viewpoint index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist GRAFIC
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NVEWS`
     - 1
     - Number of viewpoints
     - NONE

   * - :envvar:`XEA(n)`
     - ...
     - X-coordinate eye point for viewpoint :envvar:`n`

       .. note:: Default viewpoint is chosen to present a pleasing perspective.
     - [L]

   * - :envvar:`YEA(n)`
     - ...
     - Y-coordinate eye point for viewpoint :envvar:`n`

       .. note:: Default viewpoint is chosen to present a pleasing perspective.
     - [L]

   * - :envvar:`ZEA(n)`
     - ...
     - Z-coordinate eye point for viewpoint :envvar:`n`

       .. note:: Default viewpoint is chosen to present a pleasing perspective.
     - [L]

=========================================
Renderspace Namelist - RENDERSPACE
=========================================

.. note::  The contents of the :envvar:`RENDERSPACE` namelist are 
   controlled by the FAVORizer.  They are not intended to be modified
   by the user but are included here for completeness.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist RENDERSPACE
   :widths: 10 20 55
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION

   * - :envvar:`RSXMIN`
     - ...
     - X-min coordinate of the renderspace

   * - :envvar:`RSXMAX`
     - ...
     - X-max coordinate of the renderspace

   * - :envvar:`RSYMIN`
     - ...
     - Y-min coordinate of the renderspace

   * - :envvar:`RSYMAX`
     - ...
     - Y-max coordinate of the renderspace

   * - :envvar:`RSZMIN`
     - ...
     - Z-min coordinate of the renderspace

   * - :envvar:`RSZMAX`
     - ...
     - Z-max coordinate of the renderspace

   * - :envvar:`RSCSIZE`
     - ...
     - cell size

   * - :envvar:`IFRS`
     - 0
     - | = 0, use user-defined mesh to FAVORize geometry
       | = 1, use renderspace to FAVORize geometry 

   * - :envvar:`IFCOMP`
     - 0
     - | = 0, display solid volume
       | = 1, display open volume

   * - :envvar:`IFCOMPF`
     - -1
     - | = -1, do not display fluid
       | = 1, display fluid #1
       | = 0, display complement of fluid #1, i.e., fluid #2 or void 

   * - :envvar:`QVAL_FAVOR`
     - 0.5
     - iso-surface value for displaying geometry and fluid

.. index:: HEADER

.. _HeaderIVS:

=================================
Header Namelist - HEADER
=================================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist RENDERSPACE
   :widths: 10 20 55
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION

   * - :envvar:`PROJECT`
     - ...
     - Project name

   * - :envvar:`FFORMAT`
     - ...
     - Not used

   * - :envvar:`VERSION`
     - ...
     - debug version or release version

   * - :envvar:`NPROCS`
     - ...
     - Number of processors

   * - :envvar:`RUNSER`
     - 0
     - Indicates if serial fall back  is on or off (DEPRECATED). If an input file from
       a prior version has RUNSER set to 1, then RUN_WITH_AVIALABLE is set to 1.

   * - :envvar:`USE_PARALLEL_TOKEN`
     - 0
     - Flag indicating if a parallel token is to be used (DEPRECATED)

   * - :envvar:`RUN_WITH_AVAILABLE`
     - 0
     - Flag indicating the solver has permission to run with less core/license resources
       than requested.

   * - :envvar:`MPISCHED`
     - 0
     - MPI scheduler type

   * - :envvar:`MPIPROCS`
     - 1
     - Number of MPI processors requested

   * - :envvar:`MPIPPN`
     - 0
     - Number of processors per node

   * - :envvar:`MPIMMEM`
     - 0
     - Maximum memory for each rank

   * - :envvar:`MPIMMEMU`
     - 0
     - Units for maximum memory

   * - :envvar:`MPIMTIME`
     - 20160
     - Maximum wall-clock time in minutes (default is 2 weeks defined in minutes)

   * - :envvar:`MPIMACHN`
     - 50
     - Not used

   * - :envvar:`MIPARGS`
     - 50
     - Additional arguments that override other settings

   * - :envvar:`MPIPARADIGM`
     - 0
     - MPI paradigm

.. index::
   pair: particle setup; PARTS

.. _ParticleSetupPARTS:

====================================
Particle Setup Namelist - PARTS
====================================

.. _ParticleSetupGeneralParticleData:

Particle Setup: General Particle Data
==========================================

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist PARTS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IACDEP`
     - 0
     - Dielectrophoresis model flag

       | = 0, DC particle dielectrophoresis model
       | = 1, AC particle dielectrophoresis model

       .. seealso:: \  :doc:`model-reference` -->  :ref:`dielectrophoresisRefMR`.
     - NONE

.. index::
   single: particle setup; block initialized particles

.. index:: block initialized particles

.. _ParticleSetupBlockInitializedParticles:

Particle Setup: Block Initialized Particles
====================================================

.. note:: Block sizes default to entire mesh

| *n* :math:`\leq` *500, particle block index*
| *m* :math:`\leq` *3, index of user-defined free attribute for user class particles*
| *l* :math:`\leq` *10, particle species index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist PARTS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_PBLOCK_ENABLED(n)`
     - 1
     - Activation flag for initial particle block :envvar:`n`

       | =0, particle block disabled
       | =1, particle block enabled
     - NONE 

   * - :envvar:`NPXYZ`
     - 0
     - Total number of initial particle blocks
     - NONE

   * - :envvar:`NBLK_TOTAL(n)`
     - 0
     - Total number of particles generated in initial particle block :envvar:`n`. :envvar:`NBLK_TOTAL(n)` is used for directions for which extents have been specified by :envvar:`XPL(n)`, :envvar:`XPR(n)`, :envvar:`YPF(n)`, :envvar:`YPBK(n)`, :envvar:`ZPB(n)` and :envvar:`ZPT(n)`, but not the number of particles :envvar:`NPX(n)`, :envvar:`NPY(n)`, or :envvar:`NPZ(n)`, see below.
     - NONE

   * - :envvar:`NPX(n)`
     - 0
     - Number of particles in x-direction in initial particle block :envvar:`n`
     - NONE

   * - :envvar:`NPY(n)`
     - 0
     - Number of particles in y-direction in initial particle block :envvar:`n`
     - NONE

   * - :envvar:`NPZ(n)`
     - 0
     - Number of particles in z-direction in initial particle block :envvar:`n`
     - NONE

   * - :envvar:`IBLK_SET(n)`
     - 0
     - Particle generation flag at initial particle block :envvar:`n`

       | =0, particles are initialized randomly in space within the initial block volume
       | =1, particles are initialized in a regular manner in space within the initial block volume

     - NONE     

   * - :envvar:`XPL(n)`
     - ...
     - Minimum x-coordinate of initial rectangular particle block :envvar:`n`
     - [L]

   * - :envvar:`XPR(n)`
     - ...
     - Maximum x-coordinate of initial rectangular particle block :envvar:`n`
     - [L]

   * - :envvar:`YPBK(n)`
     - ...
     - Maximum y-coordinate of initial rectangular particle block :envvar:`n`

       For a cylindrical mesh (:envvar:`ICYL` = 1 in :ref:`MeshGeneratorMESH`), :envvar:`YPBK(n)` is in degrees.
     - [L] or DEGREES

   * - :envvar:`YPF(n)`
     - ...
     - Minimum y-coordinate of initial rectangular particle block :envvar:`n`

       For a cylindrical mesh (:envvar:`ICYL` = 1 in in :ref:`MeshGeneratorMESH`), :envvar:`YPF(n)` is in degrees.
     - [L] or DEGREES

   * - :envvar:`ZPB(n)`
     - ...
     - Minimum z-coordinate of initial rectangular particle block :envvar:`n`
     - [L]

   * - :envvar:`ZPT(n)`
     - ...
     - Maximum z-coordinate of initial rectangular particle block :envvar:`n`
     - [L]

   * - :envvar:`UPI(n)`
     - 0.0
     - Initial particle x-direction velocity at initial particle block :envvar:`n`
     - [L/t]

   * - :envvar:`VPI(n)`
     - 0.0
     - Initial particle y-direction velocity at initial particle block :envvar:`n`
     - [L/t]

   * - :envvar:`WPI(n)`
     - 0.0
     - Initial particle z-direction velocity at initial particle block :envvar:`n`
     - [L/t]

   * - :envvar:`IBLK_CLASS(n)`
     - 0
     - Particle class generated at initial particle block :envvar:`n`

       | =11, marker particle class; requires :envvar:`NP_MARKER` = 1.
       | =12, mass paticle class; requires :envvar:`NP_MASS` = 1.
       | =13, fluid particle class; requires :envvar:`NP_LIQUID` = 1.
       | =16, gas particle class; requires :envvar:`NP_GAS` = 1.
       | =1 to :envvar:`NSC_PART`, user particle class ; requires :envvar:`NSC_PART` > 0.
     - NONE

   * - :envvar:`BLK_SPECIES(l,n)`
     - 1.0
     - Concentration factor for species :envvar:`l` of class :envvar:`IBLK_CLASS(n)` at initial particle block :envvar:`n`. The scale is relative and is automatically normalized in the solver to sum up to 1.0.
     
     - NON-DIM     

   * - :envvar:`BLK_TEMPERATURE(n)`
     - :envvar:`T_REFERENCE`
     - Initial temperature of particles at initial particle block :envvar:`n`. Used when :envvar:`IF_BLK_TEMPERATURE(n)` = 0, :envvar:`IFENRG` = 2 or 3 and :envvar:`IBLK_CLASS(n)` points to a material particle class, for example, the mass particles.
     - [T] 

   * - :envvar:`IF_BLK_TEMPERATURE(n)`
     - 0
     - Flag for setting the initial temperature of particles at initial particle block :envvar:`n`. Used when :envvar:`IFENRG` = 2 or 3 and :envvar:`IBLK_CLASS(n)` points to a material particle class, for example, the mass particles.

       | =0, use :envvar:`BLK_TEMPERATURE(n)`.
       | =1, use local *fluid* temperature.
     - NONE 

   * - :envvar:`BLK_PRESSURE(n)`
     - 0.0
     - Initial pressure of particles at initial particle block :envvar:`n`. Used when :envvar:`IBLK_CLASS(n)` = 16, i.e., generates gas particles.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`IF_BLK_PRESSURE(n)`
     - 0
     - Flag for setting the initial pressure of particles at initial particle block :envvar:`n`. Used when :envvar:`IF_BLK_PRESSURE(n)` = 0 and :envvar:`IPBLK_CLASS(n)` = 16, i.e., generates gas particles.

       | =0, use :envvar:`BLK_PRESSURE(n)`.
       | =1, use local *fluid* pressure.
     - NONE      

   * - :envvar:`BLK_CHARGE(n)`
     - 0.0
     - Electric charge of particles at initial particle block :envvar:`n`. Used when :envvar:`IECHRG` = 1 and :envvar:`IBLK_CLASS(n)` points to a material particle class, for example, the mass particles.
     - [Q]   

   * - :envvar:`BLK_ATTRIBUTE(m,n)`
     - 0.0
     - Initial value of user-defined particle attribute :envvar:`m` at initial particle block :envvar:`n`. Used when a user-defined particle class is generated, :envvar:`IBLK_CLASS(n)` = 1 to :envvar:`NSC_PART`.
     - NON-DIM       

.. index::
   single: particle setup; source initialized particles

.. index:: source initialized particles

.. _ParticleSetupSourceInitializedParticles:

Particle Setup: Source Initialized Particles
====================================================

| *n* :math:`\leq` *500, particle source index*
| *m* :math:`\leq` *3, index of user-defined free attribute for user class particles*
| *l* :math:`\leq` *10, particle species index*
| *t* :math:`\leq` *500, time index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist PARTS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_PSOURCE_ENABLED(n)`
     - 1
     - Activation flag for particle source :envvar:`n`

       | =0, source disabled
       | =1, source enabled
     - NONE 

   * - :envvar:`IPPKT`
     - 0
     - Number of particle sources
     - NONE

   * - :envvar:`PARTICLESOURCENAME(n)`
     - ' '
     - Particle source :envvar:`n` name (up to 256 characters)
     - NONE

   * - :envvar:`RATET(t,n)`
     - 0.0
     - Time-dependent rate of particle creation at source :envvar:`n` at time :envvar:`TMS(t)`.

       .. note:: The actual particle generation rate may differ from the specified if a part of the source is blocked by geometry; the resulting rate will be reduced in proportion to the fraction of the source volume open to flow.
     - [1/t]

   * - :envvar:`FRATET(n)`
     - 
     - The external filename for tabular rate of particle creation at source :envvar:`n` as a function of time (used only if :envvar:`IRATETC(n)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IRATETC(n)`
     - 0
     - The column number for rate of particle creation at source :envvar:`n` in the external file

       .. note:: The actual particle generation rate may differ from the specified if a part of the source is blocked by geometry; the resulting rate will be reduced in proportion to the fraction of the source volume open to flow.
     - NONE

   * - :envvar:`TMS(t)`
     - 0.0
     - Time table for time-dependent particle source parameters
     - [t]     

   * - :envvar:`UPP(n)`
     - 0.0
     - Particle initial x-direction velocity at particle source :envvar:`n`
     - [L/t]

   * - :envvar:`VPP(n)`
     - 0.0
     - Particle initial y-direction velocity at particle source :envvar:`n`
     - [L/t]

   * - :envvar:`WPP(n)`
     - 0.0
     - Particle initial z-direction velocity at particle source :envvar:`n`
     - [L/t]

   * - :envvar:`XPPL(n)`
     - ...
     - Lower x-coordinate limit for volumetric particle source :envvar:`n`

       .. note:: Default value includes whole mesh.
     - [L]

   * - :envvar:`XPPR(n)`
     - ...
     - Upper x-coordinate limit for volumetric particle :envvar:`n`

       .. note:: Default value includes whole mesh.
     - [L] or DEGREES

   * - :envvar:`YPPF(n)`
     - ...
     - Lower y-coordinate limit for volumetric particle source :envvar:`n`. For a cylindrical mesh (:envvar:`ICYL` = 1 in MESH), :envvar:`YPPF` is in degrees.

       .. note::Default value includes whole mesh.
     - [L] or DEGREES

   * - :envvar:`YPPBK(n)`
     - ...
     - Upper y-coordinate limit for volumetric particle source :envvar:`n`. For a cylindrical mesh (:envvar:`ICYL` = 1 in MESH), :envvar:`YPPBK` is in degrees.

       .. note::Default value includes whole mesh.
     - [L] or DEGREES

   * - :envvar:`ZPPB(n)`
     - ...
     - Lower z-coordinate limit for volumetric particle source :envvar:`n`

       .. note::Default value includes whole mesh,.
     - [L]

   * - :envvar:`ZPPT(n)`
     - ...
     - Upper z-coordinate limit for particle source :envvar:`n`

       .. note::Default value includes whole mesh.
     - [L]

   * - :envvar:`XPSOU0(m)`
     - 0.0
     - Initial x-coordinate of particle source reference point in space system. 
     - [L]

   * - :envvar:`YPSOU0(m)`
     - 0.0
     - Initial y-coordinate of particle source reference point in space system. 
     - [L]

   * - :envvar:`ZPSOU0(m)`
     - 0.0
     - Initial z-coordinate of particle source reference point in space system. 
     - [L]

   * - :envvar:`UTPSOU(t,m)`
     - 0.0
     - Time-dependent velocity component of particle source :envvar:`m` in x-direction at time :envvar:`TMS(t)`
     - [L/t]

   * - :envvar:`VTPSOU(t,m)`
     - 0.0
     - Time-dependent velocity component of particle source :envvar:`m` in y-direction at time :envvar:`TMS(t)`
     - [L/t]

   * - :envvar:`WTPSOU(t,m)`
     - 0.0
     - Time-dependent velocity component of particle source :envvar:`m` in z-direction at time :envvar:`TMS(t)`
     - [L/t]

   * - :envvar:`OMXTPSOU(t,m)`
     - 0.0
     - Time-dependent angular velocity component of particle source :envvar:`m` in x-direction at time :envvar:`TMS(t)`
     - [L/t]

   * - :envvar:`OMYTPSOU(t,m)`
     - 0.0
     - Time-dependent angular velocity component of particle source :envvar:`m` in y-direction at time :envvar:`TMS(t)`
     - [L/t]

   * - :envvar:`OMZTPSOU(t,m)`
     - 0.0
     - Time-dependent angular velocity component of particle source :envvar:`m` in z-direction at time :envvar:`TMS(t)`
     - [L/t]

   * - :envvar:`IUTOBSC(m)`
     - 0
     - The column number for velocity component in x-direction for particle source :envvar:`m` in the external file
     - NONE

   * - :envvar:`IVTOBSC(m)`
     - 0
     - The column number for velocity component in y-direction for particle source :envvar:`m` in the external file
     - NONE

   * - :envvar:`IWTOBSC(m)`
     - 0
     - The column number for velocity component in z-direction for particle source :envvar:`m` in the external file
     - NONE

   * - :envvar:`FUTPSOU(m)`
     - 
     - The external filename for tabular velocity component in x-direction for particle source :envvar:`m` as a function of time (used only if :envvar:`IUTPSOUC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`FVTPSOU(m)`
     - 
     - The external filename for tabular velocity component in y-direction for particle source :envvar:`m` as a function of time (used only if :envvar:`IVTPSOUC(m)` :math:`\geq` 2)
     - NONE
 
   * - :envvar:`FWTPSOU(m)`
     - 
     - The external filename for tabular velocity component in z-direction for particle source :envvar:`m` as a function of time (used only if :envvar:`IWTPSOUC(m)` :math:`\geq` 2)
     - NONE
 
   * - :envvar:`IOMXTPSOUC(m)`
     - 0
     - The column number for angular velocity component in x'-direction of body system for particle source :envvar:`m` in the external file
     - NONE
 
   * - :envvar:`IOMYTPSOUC(m)`
     - 0
     - The column number for angular velocity component in y'-direction of body system for particle source :envvar:`m` in the external file
     - NONE
 
   * - :envvar:`IOMZTPSOUC(m)`
     - 0
     - The column number for angular velocity component in z'-direction of body system for particle source :envvar:`m` in the external file
     - NONE

   * - :envvar:`FOMXTPSOU(m)`
     - 
     - The external filename for tabular angular velocity component in x'-direction of body system for particle source :envvar:`m` as a function of time (used only if :envvar:`IOMXTPSOUC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`FOMYTPSOU(m)`
     - 
     - The external filename for tabular angular velocity component in y'-direction of body system for particle source :envvar:`m` as a function of time (used only if :envvar:`IOMYTPSOUC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`FOMZTPSOU(m)`
     - 
     - The external filename for tabular angular velocity component in z'-direction of body system for particle source :envvar:`m` as a function of time (used only if :envvar:`IOMZTPSOUC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ISRC_SET(n)`
     - 0
     - Particle generation flag at particle source :envvar:`n`

       | =0, particles are initialized randomly in time at the particle source
       | =1, particles are initialized in a regular manner in time at the particle source (requires the particle generation rate to be larger than the reciprocal time-step size)

     - NONE  

   * - :envvar:`ISRC_CLASS(n)`
     - 0
     - Particle class generated at particle source :envvar:`n`

       | =11, marker particle class; requires :envvar:`NP_MARKER` = 1.
       | =12, mass paticle class; requires :envvar:`NP_MASS` = 1.
       | =13, fluid particle class; requires :envvar:`NP_LIQUID` = 1.
       | =16, gas particle class; requires :envvar:`NP_GAS` = 1.
       | =1 to :envvar:`NSC_PART`, user particle class ; requires :envvar:`NSC_PART` > 0.
     - NONE

   * - :envvar:`SRC_SPECIES(l,n)`
     - 1.0
     - Concentration factor for species :envvar:`l` of class :envvar:`ISRC_CLASS(n)` at particle source :envvar:`n`. The scale is relative and is automatically normalized in the solver to sum up to 1.0.
  
     - NON-DIM     

   * - :envvar:`SRC_TEMPERATURE(n)`
     - :envvar:`T_REFERENCE`
     - Initial temperature of particles at particle source :envvar:`n`. Used when :envvar:`IF_SRC_TEMPERATURE(n)` = 0, :envvar:`IFENRG` = 2 or 3 and :envvar:`ISRC_CLASS(n)` points to a material particle class, for example, the mass particles.
     - [T] 

   * - :envvar:`IF_SRC_TEMPERATURE(n)`
     - 0
     - Flag for setting the initial temperature of particles at particle source :envvar:`n`. Used when :envvar:`IFENRG` = 2 or 3 and :envvar:`ISRC_CLASS(n)` points to a material particle class, for example, the mass particles.

       | =0, use :envvar:`SRC_TEMPERATURE(n)`.
       | =1, use local *fluid* temperature.
     - NONE 

   * - :envvar:`SRC_PRESSURE(n)`
     - 0.0
     - Initial pressure of particles at particle source :envvar:`n`. Used when :envvar:`ISRC_CLASS(n)` = 16, i.e., generates gas particles.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`IF_SRC_PRESSURE(n)`
     - 0
     - Flag for setting the initial pressure of particles at particle source :envvar:`n`. Used when :envvar:`IF_SRC_PRESSURE(n)` = 0 and :envvar:`IPSRC_CLASS(n)` = 16, i.e., generates gas particles.

       | =0, use :envvar:`SRC_PRESSURE(n)`.
       | =1, use local *fluid* pressure.
     - NONE      

   * - :envvar:`SRC_CHARGE(n)`
     - 0.0
     - Electric charge of particles at particle source :envvar:`n`. Used when :envvar:`IECHRG` = 1 and :envvar:`ISRC_CLASS(n)` points to a material particle class, for example, the mass particles.
     - [Q] 

   * - :envvar:`SRC_ATTRIBUTE(m,n)`
     - 0.0
     - Initial value of user-defined particle attribute :envvar:`m` at particle source :envvar:`n`. Used when a user-defined particle class is generated, :envvar:`ISRC_CLASS(n)` = 1 to :envvar:`NSC_PART`.
     - NON-DIM          

   * - :envvar:`NPSOUR(m)`
     - :envvar:`m`
     - Particle source identifier for restarts; used to identify the old particle source number if particle sources have been changed for restart runs.

       =0, for a newly added component

       .. note:: Defaults to the current particle source number.
     - NONE

.. index::
   single: particle setup; history particles

.. index:: history particles

.. _ParticleSetupHistoryParticles:

Particle Setup: History Particles
====================================================

| *n* :math:`\leq` *999, history particle index*
| *m* :math:`\leq` *3, index of user-defined free attribute for user class particles*

.. note:: Default location is outside of mesh.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist PARTS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IF_PHIST_ENABLED(n)`
     - 1
     - Activation flag for history particle :envvar:`n`

       | =0, history particle disabled
       | =1, history particle enabled
     - NONE 

   * - :envvar:`PLOCTL(n)`
     - 'Particle probe #n'
     - Title for history particle :envvar:`n` (30 characters maximum)

       .. note:: Default title identifies history particle number.
     - NONE

   * - :envvar:`ULOCP(n)`
     - 0.0
     - Initial u-velocity for history particle :envvar:`n` 
     - [L/t]

   * - :envvar:`VLOCP(n)`
     - 0.0
     - Initial v-velocity for history particle :envvar:`n` 
     - [L/t]

   * - :envvar:`WLOCP(n)`
     - 0.0
     - Initial w-velocity for history particle :envvar:`n` 
     - [L/t]

   * - :envvar:`XLOCP(n)`
     - ...
     - Initial x-coordinate for history particle :envvar:`n` 
     - [L]

   * - :envvar:`YLOCP(n)`
     - ...
     - Initial y-coordinate for history particle :envvar:`n`

       For a cylindrical mesh (:envvar:`ICYL` = 1 in :ref:`MeshGeneratorMESH`), :envvar:`YLOCP(n)` is in degrees.
     - [L] or DEGREES

   * - :envvar:`ZLOCP(n)`
     - ...
     - Initial z-coordinate for history particle :envvar:`n` 
     - [L]

   * - :envvar:`IPROBE_CLASS(n)`
     - 0
     - Particle class represented by probe :envvar:`n`.  The properties of the probe are taken from those defined for particle species :envvar:`IPROBE_SPECIES(n)` of class :envvar:`IPROBE_CLASS(n)`.

       | =11, marker particle class; requires :envvar:`NP_MARKER` = 1.
       | =12, mass paticle class; requires :envvar:`NP_MASS` = 1.
       | =13, fluid particle class; requires :envvar:`NP_LIQUID` = 1.
       | =16, gas particle class; requires :envvar:`NP_GAS` = 1.
       | =1 to :envvar:`NSC_PART`, user particle class ; requires :envvar:`NSC_PART` > 0.

       .. note:: The default value of 0 makes the probe behave like a marker.
       .. note:: If the specied particle class is not defined, then probe :envvar:`n` is disabled.
       .. seealso:: \  :envvar:`IPROBE_SPECIES(n)` below.       
     - NONE

   * - :envvar:`IPROBE_SPECIES(n)`
     - 0
     - Particle species of class :envvar:`IPROBE_CLASS(n)` represented by probe :envvar:`n`. The properties of the probe are taken from those defined for particle species :envvar:`IPROBE_SPECIES(n)` of class :envvar:`IPROBE_CLASS(n)`.

       .. note:: If the specied particle species is not defined, then probe :envvar:`n` is disabled.
     - NONE        

   * - :envvar:`PROBE_TEMPERATURE(n)`
     - :envvar:`T_REFERENCE`
     - Initial temperature of probe :envvar:`n`. Used when :envvar:`IFENRG` = 2 or 3 and :envvar:`IPROBE_CLASS(n)` points to a material particle class, for example, the mass particles.
     - [T] 

   * - :envvar:`PROBE_CHARGE(n)`
     - 0.0
     - Initial electric charge of probe :envvar:`n`. Used when :envvar:`IECHRG` = 1 and :envvar:`IPROBE_CLASS(n)` points to a material particle class, for example, the mass particles.
     - [Q] 

   * - :envvar:`PROBE_PRESSURE(n)`
     - 0.0
     - Initial pressure of probe :envvar:`n`. Used when :envvar:`IPROBE_CLASS(n)` = 16, i.e., points to the gas particle class.
     - [M L\ :sup:`-1` t\ :sup:`-2`]

   * - :envvar:`PROBE_ATTRIBUTE(m,n)`
     - 0.0
     - Initial value of user-defined particle attribute :envvar:`m` of probe :envvar:`n`. Used when :envvar:`IPROBE_CLASS(n)` i.e., points to a user-defined particle class, :envvar:`IPROBE_CLASS(n)` = 1 to :envvar:`NSC_PART`.
     - NON-DIM

   * - :envvar:`IPROBE_RESTART(n)`
     - 0
     - Flag for history particle :envvar:`n` initialization during restarts, :envvar:`IFREST` = 1.

       | =0, use particle definition from restart source file :file:`flsgrf`.
       | =1, use particle definition from :file:`prepin.*`, ignoring the particle data from restart source file :file:`flsgrf`.

       .. seealso:: \  :envvar:`IFREST` in :ref:`RestartOptions`.
     - NONE                            

.. index::
   single: particle setup; mass-momentum sources

.. index:: mass-momentum sources

.. _ParticleSetupMassMomentumSources:

Particle Setup: Mass-Momentum Sources
=========================================================

| *m* :math:`\leq` *500, index of mass-momentum source*
| *t* :math:`\leq` *500, time index*
| *ns* :math:`\leq` *99, scalar species index*
| *k* :math:`\leq` *10, sediment species index*

.. note:: 
   * A mass-momentum source is initialized in the x-y plane and centered at the origin, 
     with the flow direction vector pointing along the positive z-axis. The final location 
     is then defined by transformation including translations and rotations. Rotations are 
     done in the order of x-axis, y-axis and z-axis and are performed before the translations.
   * A spray bar source is initially oriented vertically with its mid-point located at the 
     origin of the coordinate system. The final location is then defined by transformation 
     including translations and rotations. Rotations are done in the order of x-axis, 
     y-axis and z-axis and are performed before the translations.
   * All time-dependent variables default to zero for time index :math:`t = 1`. For the time index :math:`t>1`, 
     the variable value defaults to the value at the previous time index. For a constant value of a time-dependent 
     variable, set the variable for time index :math:`t=1`.

.. seealso:: \  :doc:`model-reference` -->  :ref:`massMomentumSourcesMR`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist PARTS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`IAQSRP(m)`
     - 1
     - Activation flag for mass-momentum source :envvar:`m`

       | =0, deactivated
       | =1, activated
     - NONE

   * - :envvar:`DHOLE(m)`
     - 0.0
     - Diameter of holes in spray bar source :envvar:`m`

       .. note:: Used only when :envvar:`NVTYP(m)` = 5.
     - [L]

   * - :envvar:`IFLOWDIR(m)`
     - 1
     - Direction of fluid released by source m (when flow rate is positive)

       | =1, fluid emerges in positive z-direction (before rotations and transformations are applied)
       | =-1, fluid emerges in negative z-direction (before rotations and transformations are applied)

       .. note:: Currently, this variable is not available in the GUI and can be specified only in the :file:`prepin.*` file.
     - NONE

   * - :envvar:`IFQSRP(m)`
     - 1
     - Index of fluid released by source m (when flow rate is positive)

       | =1, fluid #1
       | =2, fluid #2 (or void)
     - NONE

   * - :envvar:`IFSNKP(m)`
     - 1
     - Index of fluid removed by mass source :envvar:`m` (when flow rate is negative)

       | =1, fluid #1
       | =2, fluid #2 (or void)
       | =3, mixture of fluids #1 and #2 (or void) in proportion to their volume fractions in the mesh cells adjacent to source.
     - NONE

   * - :envvar:`IVQSRP(m)`
     - 2
     - Indicator of volume or mass flow rate for source :envvar:`m`

       | =1, volume flow rate is defined (i.e., :envvar:`TVFR(t,m)` is volume flow rate).
       | =2, mass flow rate is defined (i.e., :envvar:`TVFR(t,m)` is mass flow rate).
       | =3, velocity based flow rate is defined (i.e., :envvar:`TVFR(t,m)` is computed using normal velocity :envvar:`WV(m)` and surface area).
     - NONE

   * - :envvar:`MASSMOMENTUMNAME(m)`
     - ' '
     - Mass/momentum source :envvar:`m` name (up to 256 characters)
     - 
   * - :envvar:`NAZ(m)`
     - 0
     - Number of holes at each axial location spaced uniformly around the circumference of spray bar source :envvar:`m`

       .. note:: Used only when :envvar:`NVTYP(m)` = 5.

       .. seealso:: \   :envvar:`NZL(m)` in this section.
     - NONE

   * - :envvar:`NVNTS`
     - 0
     - Total number of mass/momentum sources
     - NONE

   * - :envvar:`NVTYP(m)`
     - 1
     - Shape of source surface

       | = 1, square
       | = 2, rectangular
       | = 3, circular
       | = 4, elliptical
       | = 5, spray bar
       | = 6, shape based on baffle (usually an STL baffle)

     - NONE

   * - :envvar:`NZL(m)`
     - 0
     - Number of axial locations of holes of spray bar source :envvar:`m`

       .. note:: Used only when :envvar:`NVTYP(m)` = 5.

       .. seealso:: \   :envvar:`NAZ(m)` in this section.
     - NONE

   * - :envvar:`RHOQSRP(m)`
     - ...
     - Density of fluid released from source :envvar:`m`

       .. note:: For variable density problems only. Used when flow rate from source is positive. For a one-fluid problem with fluid #1 released, defaults to :envvar:`RHOF2`.

       .. seealso:: \   :envvar:`RHOF2` in :ref:`DensityProperties`.
     - [M/L\ :sup:`3`]

   * - :envvar:`RHOSNKP(m)`
     - ...
     - Density of gas in voids

       .. note:: Used to convert mass flow rate to volume flow rate at void sinks in one-fluid problems, :envvar:`IVQSRP(m)` = 2, :envvar:`IFSNKP(m)` = 2 or 3, and :envvar:`NMAT` = 1.
     - [M/L\ :sup:`3`]

   * - :envvar:`SBANGLE(m)`
     - 0.0
     - Spray angle with respect to the horizontal plane at the initial spray location of spray bar :envvar:`m`. 
     - DEGREES

   * - :envvar:`TQSRP(t,m)`
     - 0.0
     - Temperature of fluid (:envvar:`NVTYP(m)` = 1-4 and 6) or particles (:envvar:`NVTYP(m)` = 5) released from source :envvar:`m` at time :envvar:`TMS(t)`, where :envvar:`t` is the index for time.
     - [T]

   * - :envvar:`FTQSRP(m)`
     - 
     - The external filename for tabular temperature of source :envvar:`m` as a function of time (used only if :envvar:`ITQSRPC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ITQSRPC(m)`
     - 0
     - The column number for temperature of source :envvar:`m` in the external file
     - NONE

   * - :envvar:`EQSRP(n)`
     - 0.0
     - Electric charge of fluid particles at mass-momentum source :envvar:`n` of type *spray bar*, :envvar:`NVTYP(n)` = 5. Used when :envvar:`IECHRG` = 1.
     - [Q]        

   * - :envvar:`TVFR(t,m)`
     - 0.0
     - Total flow rate from source :envvar:`m` at time :envvar:`TMS(t)`, where :envvar:`t` is the index for time

       .. note:: If :envvar:`IVQSRP(m)` = 1, it is volume flow rate. If :envvar:`IVQSRP(m)` = 2, it is mass flow rate. If :envvar:`IVQSRP(m)` = 3, then :envvar:`TVFR(t,m)` need not be specified and is automatically computed from the specified normal velocity :envvar:`WV(m)` and surface area. :envvar:`TVFR(t,m)` is positive if fluid is released, and negative if fluid is removed. Can change sign with time.
     - [L\ :sup:`3`/t] or [M/t]

   * - :envvar:`XV(m)`
     - 0.0
     - Translation along the x-coordinate of the center of source :envvar:`m`
     - [L]

   * - :envvar:`YV(m)`
     - 0.0
     - Translation along the y-coordinate of the center of source :envvar:`m`
     - [L]

   * - :envvar:`ZV(m)`
     - 0.0
     - Translation along the z-coordinate of the center of source :envvar:`m`
     - [L]

   * - :envvar:`XSIZE(m)`
     - 0.0
     - Size of source :envvar:`m` along the x-direction. For spray bar source, :envvar:`NVTYP(m)` = 5, is the outer diameter of the spray bar.

       .. note:: For square, defines the square edge in both directions, for circular sources, defines the diameter.
     - [L]

   * - :envvar:`YSIZE(m)`
     - 0.0
     - Size of a rectangular or elliptical source :envvar:`m` along the y-direction. For spray bar source, :envvar:`NVTYP(m)` = 5, is the length of the spray bar.
     - [L]

   * - :envvar:`VNX(m)`
     - 0.0
     - Rotation around x-axis of source :envvar:`m`
     - DEGREES

   * - :envvar:`VNY(m)`
     - 0.0
     - Rotation around y-axis of source :envvar:`m`
     - DEGREES

   * - :envvar:`VNZ(m)`
     - 0.0
     - Rotation around z-axis of source :envvar:`m`
     - DEGREES

   * - :envvar:`TMS(t)`
     - 0.0
     - Time table for time-dependent mass momentum source parameters
     - [t]

   * - :envvar:`UV(t,m)`
     - ...
     - x-component of fluid velocity at source :envvar:`m` at time TMS(t)

       .. note:: The velocity component tangential to the source's outlet surface defaults to 0.0. The normal component is computed from the value of flow rate :envvar:`TVFR(t,m)` and density :envvar:`RHOQSRP(m)`.
     - [L/t]

   * - :envvar:`VV(t,m)`
     - ...
     - y-component of fluid velocity at source :envvar:`m` at time :envvar:`TMS(t)`

       .. note:: The velocity component tangential to the source's outlet surface defaults to 0.0. The normal component is either directly specified (when :envvar:`IVQSRP(m)` = 3) or is computed from the value of flow rate :envvar:`TVFR(t,m)` and density :envvar:`RHOQSRP(m)` (when :envvar:`IVQSRP(m)` = 1 or 2)
     - [L/t]

   * - :envvar:`WV(t,m)`
     - ...
     - z-component of fluid velocity at source :envvar:`m` at time :envvar:`TMS(t)`

       .. note:: The velocity component tangential to the source's outlet surface defaults to 0.0. The normal component is either directly specified (when :envvar:`IVQSRP(m)` = 3) or is computed from the value of flow rate :envvar:`TVFR(t,m)` and density :envvar:`RHOQSRP(m)` (when :envvar:`IVQSRP(m)` = 1 or 2)
     - [L/t]

   * - :envvar:`USOU(t,m)`
     - 0.0
     - x-component of the velocity of source :envvar:`m` at time :envvar:`TMS(t)`
     - [L/t]

   * - :envvar:`FUSOU(m)`
     - 
     - The external filename for tabular x-component of the velocity of source :envvar:`m` as a function of time (used only if :envvar:`IUSOUC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IUSOUC(m)`
     - 0
     - The column number for x-component of the velocity of source :envvar:`m` in the external file
     - NONE

   * - :envvar:`VSOU(t,m)`
     - 0.0
     - y-component of the velocity of source :envvar:`m` at time :envvar:`TMS(t)`
     - [L/t]

   * - :envvar:`FVSOU(m)`
     - 
     - The external filename for tabular y-component of the velocity of source :envvar:`m` as a function of time (used only if :envvar:`IVSOUC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IVSOUC(m)`
     - 0
     - The column number for y-component of the velocity of source :envvar:`m` in the external file
     - NONE

   * - :envvar:`WSOU(t,m)`
     - 0.0
     - z-component of the velocity of source :envvar:`m` at time :envvar:`TMS(t)`
     - [L/t]

   * - :envvar:`FWSOU(m)`
     - 
     - The external filename for tabular z-component of the velocity of source :envvar:`m` as a function of time (used only if :envvar:`IWSOUC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IWSOUC(m)`
     - 0
     - The column number for z-component of the velocity of source :envvar:`m` in the external file
     - NONE

   * - :envvar:`TVFR(t,m)`
     - 0.0
     - Total flow rate from source :envvar:`m` at time :envvar:`TMS(t)`, where :envvar:`t` is the index for time

       .. note:: If :envvar:`IVQSRP(m)` = 1, it is volume flow rate. If :envvar:`IVQSRP(m)` = 2, it is mass flow rate. If :envvar:`IVQSRP(m)` = 3, then :envvar:`TVFR(t,m)` need not be specified and is automatically computed from the specified normal velocity :envvar:`WV(m)` and surface area. :envvar:`TVFR(t,m)` is positive if fluid is released, and negative if fluid is removed. Can change sign with time.
     - [L\ :sup:`3`/t] or [M/t]

   * - :envvar:`SCPQSR(t,m,ns)`
     - 0.0
     - Scalar :envvar:`ns` concentration at source :envvar:`m` at time :envvar:`TMS(t)`
     - [M/L\ :sup:`3`]

   * - :envvar:`FSCPQSR(m,ns)`
     - 
     - The external filename for tabular Scalar :envvar:`ns` concentration at source :envvar:`m` as a function of time (used only if :envvar:`ISCPQSRC(m,ns)` :math:`\geq` 2)
     - NONE

   * - :envvar:`ISCPQSRC(m,ns)`
     - 0
     - The column number for Scalar :envvar:`ns` concentration at source :envvar:`m` in the external file
     - NONE

   * - :envvar:`PQSRAIR(t,m)`
     - 0.0
     - Volume fraction of air at source :envvar:`m` at time :envvar:`TMS(t)`

       .. note:: Used only with the air entrainment model (:envvar:`IDFAIR` = 1); see :ref:`AirEntrainmentModelParameters`.
     - NON-DIM

   * - :envvar:`FPQSRAIR(m)`
     - 
     - The external filename for tabular volume fraction of air at source :envvar:`m` as a function of time (used only if :envvar:`IPQSRAIRC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IPQSRAIRC(m)`
     - 0
     - The column number for volume fraction of air at source :envvar:`m` in the external file

       .. note:: Used only with the air entrainment model (:envvar:`IDFAIR` = 1); see :ref:`AirEntrainmentModelParameters`.
     - NONE

   * - :envvar:`PQSRDSIZE(t,m)`
     - :envvar:`DFDIAM_INI`
     - Droplet size at source :envvar:`m` at time :envvar:`TMS(t)`

       .. note:: Used only with the dynamic droplet model (:envvar:`IDSIZE` = 1); see :ref:`DynamicDropletModelParameters`.
     - [L]

   * - :envvar:`FPQSRDSIZE(m)`
     - ' '
     - The external filename for tabular droplet size at source :envvar:`m` as a function of time (used only if :envvar:`IPQSRDSIZEC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IPQSRDSIZEC(m)`
     - 0
     - The column number for droplet size at source :envvar:`m` in the external file :envvar:`FPQSRDSIZE(m)`

       .. note:: Used only with the dynamic droplet size model (:envvar:`IDSIZE` = 1); see :ref:`DynamicDropletModelParameters`.
     - NONE

   * - :envvar:`PQSRDISS(t,m)`
     - 0.0
     - Concentration dissolved solute at source :envvar:`m` at time :envvar:`TMS(t)`

       .. note:: Used only with the dissolved solute model. Used when :envvar:`IDISSOLVE` = 1; see :ref:`DissolutionModelParameters`.
     - [M/L\ :sup:`3`]

   * - :envvar:`FPQSRDISS(m)`
     - 
     - The external filename for tabular concentration dissolved solute at source :envvar:`m` as a function of time (used only if :envvar:`IPQSRDISSC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IPQSRDISSC(m)`
     - 0
     - The column number for concentration dissolved solute at source :envvar:`m` in the external file

       .. note:: Used only with the dissolved solute model. Used when :envvar:`IDISSOLVE` = 1; see :ref:`DissolutionModelParameters`.
     - NONE

   * - :envvar:`PQSRNCG(t,m)`
     - 0.0
     - Volume fraction of non-condensable gas at source :envvar:`m` at time :envvar:`TMS(t)`

       .. note:: Only used with non-condensable gas with phase change model, :envvar:`INCG` = 1 and relative saturation turned off, :envvar:`IRSAT` = 0 (see :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`).

       .. seealso:: \  :envvar:`INCG` and :envvar:`IRSAT` in :ref:`PhysicalModelOptions`.
     - NON-DIM

   * - :envvar:`FPQSRNCG(m)`
     - 
     - The external filename for tabular volume fraction of non-condensable gas at source :envvar:`m` as a function of time (used only if :envvar:`IPQSRNCGC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IPQSRNCGC(m)`
     - 0
     - The column number for volume fraction of non-condensable gas at source :envvar:`m` in the external file

       .. note:: Only used with non-condensable gas with phase change model, :envvar:`INCG` = 1 and relative saturation turned off, :envvar:`IRSAT` = 0 (see :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`).

       .. seealso:: \  :envvar:`INCG` and :envvar:`IRSAT` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`RSATPQSR(t,m)`
     - 0.0
     - Relative saturation of vapor component at source :envvar:`m` at time :envvar:`TMS(t)`

       .. note:: Only used with non-condensable gas with phase change model, :envvar:`INCG` = 1 and relative saturation turned on, :envvar:`IRSAT` = 1 (see :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`).

       .. seealso:: \  :envvar:`INCG` and :envvar:`IRSAT` in :ref:`PhysicalModelOptions`.
     - NON-DIM

   * - :envvar:`FRSATPQSR(m)`
     - 
     - The external filename for tabular relative saturation of vapor component at source :envvar:`m` as a function of time (used only if :envvar:`IRSATPQSRC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IRSATPQSRC(m)`
     - 0
     - The column number for relative saturation of vapor component at source :envvar:`m` in the external file

       .. note:: Only used with non-condensable gas with phase change model, :envvar:`INCG` = 1 and relative saturation turned on, :envvar:`IRSAT` = 1 (see :ref:`condensationEvaporationTwoFluidsNonCondensableGasMR`).

       .. seealso:: \  :envvar:`INCG` and :envvar:`IRSAT` in :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`PQSRCHRG(t,m)`
     - 0.0
     - Electric charge density at source :envvar:`m` at time :envvar:`TMS(t)`. 

       .. note:: Used only with the electric charge density model (:envvar:`IECHRG` = 1); see :ref:`ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters`.
     - [Q/L\ :sup:`3`]

   * - :envvar:`FPQSRCHRG(m)`
     - 
     - The external filename for tabular electric charge density at source :envvar:`m` as a function of time (used only if :envvar:`IPQSRCHRGC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IPQSRCHRGC(m)`
     - 0
     - The column number for electric charge density at source :envvar:`m` in the external file

       .. note:: Used only with the electric charge density model (:envvar:`IECHRG` = 1); see :ref:`ScalarElectrostaticsElectroosmosisandElectromechanicsModelParameters`.
     - NONE

   * - :envvar:`PQSRSEG(t,m)`
     - 0.0
     - Concentration of solute at source :envvar:`m` at time :envvar:`TMS(t)`. 

       .. note:: Used only with the segregation model and solidification model (:envvar:`ISEG` = 1 and :envvar:`IFSLD` = 1); see :ref:`BinaryAlloySegregationParameters` and :ref:`PhysicalModelOptions`.
     - [M/L\ :sup:`3`]

   * - :envvar:`FPQSRSEG(m)`
     - 
     - The external filename for tabular concentration of solute at source :envvar:`m` as a function of time (used only if :envvar:`IPQSRSEGC(m)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IPQSRSEGC(m)`
     - 0
     - The column number for concentration of solute at source :envvar:`m` in the external file

       .. note:: Used only with the segregation model and solidification model (:envvar:`ISEG` = 1 and :envvar:`IFSLD` = 1); see :ref:`BinaryAlloySegregationParameters` and :ref:`PhysicalModelOptions`.
     - NONE

   * - :envvar:`PQSRSS(t,m,k)`
     - 0.0
     - Concentration of suspended sediment species :envvar:`k` at a mass momentum source :envvar:`m` at time :envvar:`TMS(t)`

       .. note:: Used only with the sedimentation & scour model (:envvar:`NSSPC` :math:`>` 0); see :ref:`ScalarSedimentationScourParameters`.
     - [M/L\ :sup:`3`]

   * - :envvar:`FPQSRSS(m,k)`
     - 
     - The external filename for tabular concentration of suspended sediment species :envvar:`k` at a mass momentum source :envvar:`m` as a function of time (used only if :envvar:`IPQSRSSC(m,k)` :math:`\geq` 2)
     - NONE

   * - :envvar:`IPQSRSSC(m,k)`
     - 0
     - The column number for concentration of suspended sediment species :envvar:`k` at a mass momentum source :envvar:`m` in the external file

       .. note:: Used only with the sedimentation & scour model (:envvar:`NSSPC` :math:`>` 0); see :ref:`ScalarSedimentationScourParameters`.
     - NONE

   * - :envvar:`NSOUR(m)`
     - :envvar:`m`
     - Mass momentum source identifier for restarts; used to identify the old mass momentum source number if mass momentum sources have been changed for restart runs.

       =0, for a newly added component

       .. note:: Defaults to the current mass momentum source number.
     - NONE

   * - :envvar:`PSPACE(m)`
     - :math:`\pi/10`
     - Spacing between particles on a mass momentum source. If :envvar:`PSPACE(m)` = 0.5, then the particle spacing on the mass momentum source becomes 0.5 :math:`\times` DXMIN, where the DXMIN is the smallest cell dimension in all the mesh blocks

       .. note:: 
          * Useful in situations where the user wants additional control over the 
            number of particles generated on a mass momentum source.   However, 
            making this too large can result in fewer particles on the mass-momentum
            source. In most cases, it is best to leave it at the default value of 0.5
          * Currently, this variable is not available in the GUI and can be specified only in the :file:`prepin.*` file.
     - NONE

.. _ParticleClasses:

Particle Classes
====================================

.. index::
   single: particles; marker particles

.. _MarkerParticles:

Marker Particles
-----------------------------------

| Marker particles are simple flow tracers; they do not have mass. Marker paticles are added to simulation when :envvar:`NP_MARKER` = 1.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist PARTS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NP_MARKER`
     - 0
     - Marker particle model activation flag.

       =0, the marker particle model is off.
       =1, activate the marker particle model.     
     - NONE

   * - :envvar:`IPMARKER_NMAX`
     - 10,000
     - The maximum allowed number of marker particles
     - NONE  

   * - :envvar:`PMARKER_TITLE`
     - 'marker particles'
     - Title for marker particle class. The maximum length of the title is 30 characters.
     - NONE         

   * - :envvar:`IPMARKER_FS`
     - 1
     - Host fluid flag

       | =0, marker particles can exist in fluid #1 and #2 (or void)
       | =1, marker particles can exist only in fluid #1
       | =2, marker particles can exist only in fluid #2 (or void)       
       
       .. note:: When allowed to exist in void regions, marker particles remain stationary there.       
     - NONE  

   * - :envvar:`IPMARKER_RESTIT`
     - 0
     - Flag for interaction with walls

       | =0, marker particles do not stick to walls
       | =-1, marker particles stick to walls upon first contact

       .. note:: Marker particles do not bounce off walls.
     - NONE  

   * - :envvar:`PMARKER_DIFF`
     - 0.0
     - Constant marker particle diffusion coefficient (see :envvar:`PMARKER_RM` below)
     - [L\ :sup:`2`/t]  

   * - :envvar:`PMARKER_RM`
     - 0.0
     - Inverse Schmidt number for marker particle diffusion; multiplies kinematic viscosity and is added to :envvar:`PMARKER_DIFF`.
     - NON-DIM    

   * - :envvar:`IPMARKER_RESTART`
     - 0
     - Flag for marker particle initialization during restarts, :envvar:`IFREST` = 1.

       | =0, use particle definitions from restart source file :file:`flsgrf`.
       | =1, use particle definitions from :file:`prepin.*`, ignoring the particle data from restart source file :file:`flsgrf`.

       .. seealso:: \  :envvar:`IFREST` in :ref:`RestartOptions`.
     - NONE     

.. index::
   single: particles; mass particles

.. _MassParticles:

Mass Particles
-----------------------------------

| Mass particles represent solid particulate material such as dust particles in air or sand grains in water. Mass paticles are added to simulation when :envvar:`NP_MASS` = 1.

| *n* :math:`\leq` *10, particle species index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist PARTS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NP_MASS`
     - 0
     - Marker particle model activation flag.

       =0, the mass particle model is off.
       =1, activate the mass particle model.     
     - NONE

   * - :envvar:`IPMASS_NMAX`
     - 10,000
     - The maximum allowed number of mass particles
     - NONE  

   * - :envvar:`PMASS_TITLE`
     - 'solid particles'
     - Title for mass particle class. The maximum length of the title is 30 characters.
     - NONE     

   * - :envvar:`IPMASS_MOTION`
     - 1
     - Motion flag for mass particles.

       | =0, mass particles are stationary
       | =1, mass particles move according to the Newton's equation of motion
     - NONE     

   * - :envvar:`IPMASS_FS`
     - 0
     - Host fluid flag

       | =0, mass particles can exist in fluid #1 and #2 (or void)
       | =1, mass particles can exist only in fluid #1
       | =2, mass particles can exist only in fluid #2 (or void)       
     
     - NONE  

   * - :envvar:`IPMASS_IMP`
     - 0
     - Flag for momentum coupling of mass particles and fluid.

       | =0, one-way coupling: particles experience fluid drag and added mass, but fluid does not 'see' the particles
       | =1, two-way coupling: fluid and particles exchange momentum through drag and added mass
     - NONE     

   * - :envvar:`PMASS_RESTIT`
     - 1.0
     - Mass particle coefficient of restitution

       | :math:`<` 0, particles stick when they first come in contact with walls.
       | =0.0, no particle reflection
       | =1.0, full specular particle reflection
     - NON-DIM  

   * - :envvar:`PMASS_DIFF`
     - 0.0
     - Constant mass particle diffusion coefficient (see :envvar:`PMASS_RM` below)
     - [L\ :sup:`2`/t]  

   * - :envvar:`PMASS_RM`
     - 0.0
     - Inverse Schmidt number for mass particle diffusion; multiplies kinematic viscosity and is added to :envvar:`PMASS_DIFF`.
     - NON-DIM                              

   * - :envvar:`PMASS_MACRO`
     - 1.0
     - Macro-particle coefficient. When :envvar:`PMASS_MACRO` > 1.0, each mass particle represents a cloud of :envvar:`PMASS_MACRO` particles.

       .. note:: :envvar:`PMASS_MACRO` is not allowed to be less than 1.0.     
     - NON-DIM                             

   * - :envvar:`PMASS_DRAG`
     - 1.0
     - Multiplier for coefficient of drag for a mass particle, which is a function of Reynolds number of the fluid flow around the particle.
     - NON-DIM

   * - :envvar:`PMASS_HTC`
     - -1.0
     - Heat-transfer coefficient between mass particles and fluid

       If :envvar:`PMASS_HTC` < 0.0, the solver will calculate a heat-transfer coefficient.

       If :envvar:`PMASS_HTC` = 0.0, then no heat transfer to fluid occurs.

     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`PMASS_CV`
     - 0.0
     - Specific heat of a mass particle
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]                            

   * - :envvar:`PMASS_THC`
     - 0.0
     - Thermal conductivity of a mass particle
     - [M L t\ :sup:`-3` T\ :sup:`-1`]

   * - :envvar:`PMASS_DIELC`
     - 1.0
     - Dielectric constant of a mass particle. Used when :envvar:`IEPOT` = 1.
     - NON-DIM   

   * - :envvar:`PMASS_ECOND`
     - 0.0
     - Mass particle electric conductivity. Used with the AC particle dielectrophoresis model, :envvar:`IACDEP` = 1.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`dielectrophoresisRefMR`.
     - [Q\ :sup:`2` t M\ :sup:`-1` L\ :sup:`-3`]      

   * - :envvar:`IPMASS_RESTART`
     - 0
     - Flag for mass particle initialization during restarts, :envvar:`IFREST` = 1.

       | =0, use particle definitions from restart source file :file:`flsgrf`.
       | =1, use particle definitions from :file:`prepin.*`, ignoring the particle data from restart source file :file:`flsgrf`.

       .. seealso:: \  :envvar:`IFREST` in :ref:`RestartOptions`.
     - NONE

   * - :envvar:`IPMASS_SPECIES`
     - 0
     - Number of species of mass particles. Particles in each species are characterized by unique density and size.
     - NONE

   * - :envvar:`PMASS_SPECIES_DENSITY(n)`
     - 0.0
     - Density of mass particles in species :envvar:`n`
     - [M/L\ :sup:`3`] 

   * - :envvar:`PMASS_SPECIES_DIAMETER(n)`
     - 0.0
     - Diameter of mass particles in species :envvar:`n`
     - [L]             

   * - :envvar:`PMASS_SPECIES_TITLE(n)`
     - 'solid particles: species #n'
     - Title for mass particles species :envvar:`n`. The maximum length of the title is 40 characters.
     - NONE                

.. index::
   single: particles; fluid particles

.. _FluidParticles:

Fluid Particles
-----------------------------------

| Fluid particles represent droplets of fluid #1. Their thermo-physical properties are automatically inherited from fluid #1. Fluid paticles are added to simulation when :envvar:`NP_LIQUID` = 1.

| *n* :math:`\leq` *10, particle species index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist PARTS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NP_LIQUID`
     - 0
     - Fluid #1 particle model activation flag.

       =0, the fluid particle model is off
       =1, activate the fluid particle model 
     - NONE

   * - :envvar:`IPLIQUID_NMAX`
     - 10,000
     - The maximum allowed number of fluid particles
     - NONE

   * - :envvar:`PLIQUID_TITLE`
     - 'Fluid #1 droplet particles'
     - Title for fluid particle class. The maximum length of the title is 30 characters.
     - NONE     

   * - :envvar:`IPLIQUID_IMP`
     - 0
     - Flag for momentum coupling of fluid particles and fluid.

       | =0, one-way coupling: particles experience fluid drag and added mass, but fluid does not 'see' the particles
       | =1, two-way coupling: fluid and particles exchange momentum through drag and added mass
     - NONE     

   * - :envvar:`PLIQUID_RESTIT`
     - -1.0
     - Fluid particle coefficient of restitution at liquid state

       | :math:`<` 0, particles stick when they first come in contact with walls, then are converted to fluid #1.
       | =0.0, no particle reflection
       | =1.0, full specular particle reflection
     - NON-DIM  

   * - :envvar:`PLIQUIDSD_RESTIT`
     - 1.0
     - Fluid particle coefficient of restitution at solid state

       | :math:`<` 0, particles stick when they first come in contact with walls.
       | =0.0, no particle reflection
       | =1.0, full specular particle reflection

       .. note:: Used with the solidification model (:envvar:`IFSLD` = 1).
     - NON-DIM     

   * - :envvar:`PLIQUID_DIFF`
     - 0.0
     - Constant fluid particle diffusion coefficient (see :envvar:`PLIQUID_RM` below)
     - [L\ :sup:`2`/t]  

   * - :envvar:`PLIQUID_RM`
     - 0.0
     - Inverse Schmidt number for fluid particle diffusion; multiplies kinematic viscosity and is added to :envvar:`PLIQUID_DIFF`
     - NON-DIM                              

   * - :envvar:`PLIQUID_MACRO`
     - 1.0
     - Macro-particle coefficient. When :envvar:`PLIQUID_MACRO` > 1.0, each fluid particle represents a cloud of :envvar:`PLIQUID_MACRO` particles

       .. note:: :envvar:`PLIQUID_MACRO` is not allowed to be less than 1.0.     
     - NON-DIM                           

   * - :envvar:`PLIQUID_DRAG`
     - 1.0
     - Multiplier for coefficient of drag for a fluid particle, which is a function of Reynolds number of the fluid flow around the particle
     - NON-DIM

   * - :envvar:`PLIQUID_HTC`
     - -1.0
     - Heat-transfer coefficient between fluid particles and fluid

       If :envvar:`PLIQUID_HTC` < 0.0, the solver will calculate a heat-transfer coefficient.

       If :envvar:`PLIQUID_HTC` = 0.0, then no heat transfer to fluid occurs.

     - [M T\ :sup:`-1` t\ :sup:`-3`]         

   * - :envvar:`IPLIQUID_RESTART`
     - 0
     - Flag for fluid particle initialization during restarts, :envvar:`IFREST` = 1.

       | =0, use particle definitions from restart source file :file:`flsgrf`.
       | =1, use particle definitions from :file:`prepin.*`, ignoring the particle data from restart source file :file:`flsgrf`.

       .. seealso:: \  :envvar:`IFREST` in :ref:`RestartOptions`.
     - NONE     

   * - :envvar:`IPLIQUID_SPECIES`
     - 0
     - Number of species of fluid particles. Particles in each species are characterized by unique density and size.
     - NONE

   * - :envvar:`PLIQUID_SPECIES_DENSITY(n)`
     - 0.0
     - Density of fluid particles in species :envvar:`n`
     - [M/L\ :sup:`3`] 

   * - :envvar:`PLIQUID_SPECIES_DIAMETER(n)`
     - 0.0
     - Diameter of fluid particles in species :envvar:`n`
     - [L]             

   * - :envvar:`PLIQUID_SPECIES_TITLE(n)`
     - 'fluid #1 droplet particles: species #n'
     - Title for fluid particles species :envvar:`n`. The maximum length of the title is 40 characters.
     - NONE       

.. index::
   single: particles; gas particles

.. _GasParticles:

Gas Particles
-----------------------------------

| Gas particles represent bubbles of gas moving in fluid. Gas paticles are added to simulation when :envvar:`NP_GAS` = 1.

| *n* :math:`\leq` *10, particle species index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist PARTS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NP_GAS`
     - 0
     - GAs particle model activation flag.

       =0, the gas particle model is off.
       =1, activate the gas particle model.     
     - NONE

   * - :envvar:`IPGAS_NMAX`
     - 10,000
     - The maximum allowed number of gas particles
     - NONE    

   * - :envvar:`PGAS_TITLE`
     - 'gas bubble particles'
     - Title for gas particle class. The maximum length of the title is 30 characters.
     - NONE       

   * - :envvar:`IPGAS_ADD`
     - 0
     - Flag for interaction of gas particles with void regions

       | =0, do not adjust void region pressure when gas particles merge with them
       | =1, adjust void region pressure when gas particles merge with them

       .. note:: Requires :envvar:`IPHCHG` = 3, 4 or 5.     
     - NONE 

   * - :envvar:`IPGAS_FS`
     - 1
     - Host fluid flag

       | =0, gas particles can exist in fluid #1 and #2 (or void)
       | =1, gas particles can exist only in fluid #1
       | =2, gas particles can exist only in fluid #2 (or void)       
   
     - NONE       

   * - :envvar:`IPGAS_IMP`
     - 0
     - Flag for momentum coupling of gas particles and fluid.

       | =0, one-way coupling: particles experience fluid drag and added mass, but fluid does not 'see' the particles
       | =1, two-way coupling: fluid and particles exchange momentum through drag and added mass
     - NONE        

   * - :envvar:`PGAS_RESTIT`
     - 0.0
     - Gas particle coefficient of restitution

       | :math:`<` 0, particles stick when they first come in contact with walls.
       | =0.0, no particle reflection
       | =1.0, full specular particle reflection
     - NON-DIM  

   * - :envvar:`PGAS_DIFF`
     - 0.0
     - Constant gas particle diffusion coefficient (see :envvar:`PGAS_RM` below)
     - [L\ :sup:`2`/t]  

   * - :envvar:`PGAS_RM`
     - 0.0
     - Inverse Schmidt number for gas particle diffusion; multiplies kinematic viscosity and is added to :envvar:`PGAS_DIFF`.
     - NON-DIM                              

   * - :envvar:`PGAS_MACRO`
     - 1.0
     - Macro-particle coefficient. When :envvar:`PGAS_MACRO` > 1.0, each gas particle represents a cloud of :envvar:`PGAS_MACRO` particles.

       .. note:: :envvar:`PGAS_MACRO` is not allowed to be less than 1.0.     
     - NON-DIM 

   * - :envvar:`PGAS_GAMMA`
     - :envvar:`GAMMA`
     - Exponent in particle gas equation of state, ``P*V^GAMMA = constant``. Zero or negative value indicates constant pressure. :envvar:`GAMMA` = ratio of specific heats of gas C\ :sub:`p`/C\ :sub:`v`, assumed constant.

     - NON-DIM                                

   * - :envvar:`PGAS_DRAG`
     - 1.0
     - Multiplier for coefficient of drag for a gas particle, which is a function of Reynolds number of the fluid flow around the particle.
     - NON-DIM   

   * - :envvar:`PGAS_HTC`
     - -1.0
     - Heat-transfer coefficient between gas particles and fluid.

       If :envvar:`PGAS_HTC` < 0.0, the solver will calculate a heat-transfer coefficient.

       If :envvar:`PGAS_HTC` = 0.0, then no heat transfer to fluid occurs.

     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`PGAS_RF`
     - 0.0
     - Specific gas constant for gas particles (:envvar:`PGAS_RF` = (:envvar:`PGAS_GAMMA`-1)•:envvar:`PGAS_CV` for a gamma-law gas)

     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`PGAS_CV`
     - 0.0
     - Specific heat of a gas particle.
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]                            

   * - :envvar:`PGAS_THC`
     - 0.0
     - Thermal conductivity of a gas particle.
     - [M L t\ :sup:`-3` T\ :sup:`-1`]

   * - :envvar:`PGAS_DIELC`
     - 1.0
     - Dielectric constant of a gas particle. Used when :envvar:`IEPOT` = 1.
     - NON-DIM 

   * - :envvar:`PGAS_ECOND`
     - 0.0
     - Gas particle electric conductivity. Used with the AC particle dielectrophoresis model, :envvar:`IACDEP` = 1.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`dielectrophoresisRefMR`.
     - [Q\ :sup:`2` t M\ :sup:`-1` L\ :sup:`-3`]        

   * - :envvar:`IPGAS_RESTART`
     - 0
     - Flag for gas particle initialization during restarts, :envvar:`IFREST` = 1.

       | =0, use particle definitions from restart source file :file:`flsgrf`.
       | =1, use particle definitions from :file:`prepin.*`, ignoring the particle data from restart source file :file:`flsgrf`.

       .. seealso:: \  :envvar:`IFREST` in :ref:`RestartOptions`.
     - NONE    

   * - :envvar:`IPGAS_SPECIES`
     - 0
     - Number of species of gas particles. Particles in each species are characterized by unique density and size.
     - NONE

   * - :envvar:`PGAS_SPECIES_DIAMETER(n)`
     - 0.0
     - Diameter of gas particles in species :envvar:`n`
     - [L]             

   * - :envvar:`PGAS_SPECIES_TITLE(n)`
     - 'gas bubble particles: species #n'
     - Title for gas particles species :envvar:`n`. The maximum length of the title is 40 characters.
     - NONE

.. index::
   single: particles; void particles

.. _VoidParticles:

Void Particles
-----------------------------------

| Void particles represent collapsed void regions moving in fluid. Void paticles are added to simulation when :envvar:`NP_VOID` = 1.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist PARTS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NP_VOID`
     - 0
     - Void particle model activation flag.

       =0, the void particle model is off.
       =1, activate the void particle model.     
     - NONE

   * - :envvar:`IPVOID_NMAX`
     - 10,000
     - The maximum allowed number of void particles
     - NONE          

   * - :envvar:`IPVOID_TYPE`
     - 1
     - Type of void particles

       | =1, constant-pressure void particles
       | =2, dynamically adjusted pressure and size of void particles in response to thermal fluxes and pressure in the surrounding fluid

       .. note:: Requires :envvar:`GAMMA` > 0.0, :envvar:`PVOID_RF` > 0.0 and the use of absolute units for pressure.   
     - NONE   

   * - :envvar:`IPVOID_IMP`
     - 0
     - Flag for momentum coupling of void particles and fluid.

       | =0, one-way coupling: particles experience fluid drag and added mass, but fluid does not 'see' the particles
       | =1, two-way coupling: fluid and particles exchange momentum through drag and added mass
     - NONE               

   * - :envvar:`PVOID_RESTIT`
     - 0.0
     - Void particle coefficient of restitution

       | :math:`<` 0, particles stick when they first come in contact with walls.
       | =0.0, no particle reflection
       | =1.0, full specular particle reflection
     - NON-DIM  

   * - :envvar:`PVOID_DIFF`
     - 0.0
     - Constant void particle diffusion coefficient (see :envvar:`PVOID_RM` below)
     - [L\ :sup:`2`/t]  

   * - :envvar:`PVOID_RM`
     - 0.0
     - Inverse Schmidt number for void particle diffusion; multiplies kinematic viscosity and is added to :envvar:`PVOID_DIFF`.
     - NON-DIM                               

   * - :envvar:`PVOID_DRAG`
     - 1.0
     - Multiplier for coefficient of drag for a void particle, which is a function of Reynolds number of the fluid flow around the particle.
     - NON-DIM   

   * - :envvar:`PVOID_HTC`
     - -1.0
     - Heat-transfer coefficient between void particles and fluid.

       If :envvar:`PVOID_HTC` < 0.0, the solver will calculate a heat-transfer coefficient.

       If :envvar:`PVOID_HTC` = 0.0, then no heat transfer to fluid occurs.

     - [M T\ :sup:`-1` t\ :sup:`-3`]                                

   * - :envvar:`PVOID_RF`
     - 0.0
     - Specific gas constant for void particles (:envvar:`PVOID_RF` = (:envvar:`GAMMA`-1)•:envvar:`PVOID_CV` for a gamma-law gas)

       .. note:: Used when :envvar:`IPVOID_TYPE` = 2.

     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`PVOID_CV`
     - 0.0
     - Specific heat of a void particle.
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]                            

   * - :envvar:`PVOID_THC`
     - 0.0
     - Thermal conductivity of a void particle.
     - [M L t\ :sup:`-3` T\ :sup:`-1`]        

   * - :envvar:`IPVOID_RESTART`
     - 0
     - Flag for void particle initialization during restarts, :envvar:`IFREST` = 1.

       | =0, use particle definitions from restart source file :file:`flsgrf`.
       | =1, use particle definitions from :file:`prepin.*`, ignoring the particle data from restart source file :file:`flsgrf`.

       .. seealso:: \  :envvar:`IFREST` in :ref:`RestartOptions`.
     - NONE                                         

.. index::
   single: particles; user particles

.. _UserParticles:

User Particles
-----------------------------------

| User particles can be introduced into the simulation by the user through solver customization, similar to passive scalars, see :ref:`GeneralandScalarAdvectionParameters`. User paticles can be added to simulation when :envvar:`NSC_PART` > 0.

| *n* :math:`\leq` *10, user particle class index*
| *m* :math:`\leq` *10, particle species index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist PARTS
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NSC_PART`
     - 0
     - Number of user-defined particle classes
     - NONE

   * - :envvar:`IP_NMAX(n)`
     - 10,000
     - The maximum allowed number of user particles in class :envvar:`n`
     - NONE  

   * - :envvar:`P_TITLE(n)`
     - 'particle class # n'
     - Title for user particle class :envvar:`n`. The maximum length of the title is 30 characters.
     - NONE

   * - :envvar:`IP_TYPE(n)`
     - 0
     - Type of user particle class :envvar:`n`

       | =0, marker particles
       | =1, material particles

       .. note:: :envvar:`IP_TYPE(n)` = 1 requires both :envvar:`P_DENSITY(n)` > 0 and :envvar:`P_DIAMETER(n)` > 0.
     - NONE

   * - :envvar:`IP_MOTION(n)`
     - 1
     - Motion flag for user particle class :envvar:`n`

       | =0, particles are stationary
       | =1, particles move either according to the Newton's equation of motion, if :envvar:`IP_TYPE(n)` = 1, or as a marker, if :envvar:`IP_TYPE(n)` = 0, or as defined by the user in the customization.
     - NONE   

   * - :envvar:`IP_FS(n)`
     - 0
     - Host fluid flag for user particles in class :envvar:`n`

       | =0, particles can exist in fluid #1 and #2 (or void)
       | =1, particles can exist only in fluid #1
       | =2, particles can exist only in fluid #2 (or void)       

     - NONE 

   * - :envvar:`IP_IMP(n)`
     - 0
     - Flag for momentum coupling of particles in class :envvar:`n` and fluid.

       | =0, one-way coupling: particles experience fluid drag and added mass, but fluid does not 'see' the particles
       | =1, two-way coupling: fluid and particles exchange momentum through drag and added mass
     - NONE      

   * - :envvar:`P_RESTIT(n)`
     - 1.0
     - Coefficient of restitution for user particles in class :envvar:`n`

       | :math:`<` 0, particles stick when they first come in contact with walls.
       | =0.0, no particle reflection
       | =1.0, full specular particle reflection
     - NON-DIM  

   * - :envvar:`P_DIFF(n)`
     - 0.0
     - Constant diffusion coefficient for user particles in class :envvar:`n` (see :envvar:`P_RM(n)` below)
     - [L\ :sup:`2`/t]  

   * - :envvar:`P_RM(n)`
     - 0.0
     - Inverse Schmidt number diffusion of user particles in class :envvar:`n`; multiplies kinematic viscosity and is added to :envvar:`P_DIFF(n)`.
     - NON-DIM                              

   * - :envvar:`P_CHARGE(n)`
     - 0.0
     - Electric charge of user particles in class :envvar:`n`. Used when :envvar:`IECHRG` = 1.
     - [Q]

   * - :envvar:`P_DENSITY`
     - 0.0
     - Density of user particles in class :envvar:`n`
     - [M/L\ :sup:`3`]

   * - :envvar:`P_MACRO(n)`
     - 1.0
     - Macro-particle coefficient for user particles in class :envvar:`n`. When :envvar:`P_MACRO(n)` > 1.0, each particle represents a cloud of :envvar:`P_MACRO(n)` particles.

       .. note:: :envvar:`P_MACRO(n)` is not allowed to be less than 1.0.     
     - NON-DIM 

   * - :envvar:`P_DIAMETER(n)`
     - 0.0
     - Diameter of user particles in class :envvar:`n`
     - [L]                             

   * - :envvar:`P_DRAG(n)`
     - 0.0
     - Multiplier for coefficient of drag for a user particle in class :envvar:`n`, which is a function of Reynolds number of the fluid flow around the particle.
     - NON-DIM 

   * - :envvar:`P_TEMPERATURE(n)`
     - :envvar:`T_REFERENCE`
     - Initial temperature of user particles in class :envvar:`n`. Used when :envvar:`IFENRG` = 2 or 3.
     - [T]

   * - :envvar:`P_HTC(n)`
     - 0.0
     - Heat-transfer coefficient between user particles in class :envvar:`n` and fluid.

       If :envvar:`P_HTC(n)` < 0.0, the solver will calculate a heat-transfer coefficient.

       If :envvar:`P_HTC(n)` = 0.0, then no heat transfer to fluid occurs.

     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`P_CV(n)`
     - 0.0
     - Specific heat of a user particle in class :envvar:`n`
     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]                            

   * - :envvar:`P_THC(n)`
     - 0.0
     - Thermal conductivity of a user particle in class :envvar:`n`
     - [M L t\ :sup:`-3` T\ :sup:`-1`]

   * - :envvar:`P_DIELC(n)`
     - 0.0
     - Dielectric constant of a user particle in class :envvar:`n`. Used when :envvar:`IEPOT` = 1.
     - NON-DIM  

   * - :envvar:`P_ECOND(n)`
     - 0.0
     - Electric conductivity of user particles in class :envvar:`n`. Used with the AC particle dielectrophoresis model, :envvar:`IACDEP` = 1.

       .. seealso:: \  :doc:`model-reference` -->  :ref:`dielectrophoresisRefMR`.
     - [Q\ :sup:`2` t M\ :sup:`-1` L\ :sup:`-3`] 

   * - :envvar:`IP_SPECIES(n)`
     - 0
     - Number of species of user particles in class :envvar:`n`. Particles in each species are characterized by unique density and size.
     - NONE

   * - :envvar:`P_SPECIES_DENSITY(m,n)`
     - 0.0
     - Density of particles in species :envvar:`m` of user particle class :envvar:`n` 
     - [M/L\ :sup:`3`] 

   * - :envvar:`P_SPECIES_DIAMETER(m,n)`
     - 0.0
     - Diameter of particles in species :envvar:`m` of user particle class :envvar:`n` 
     - [L]             

   * - :envvar:`P_SPECIES_TITLE(m,n)`
     - 'user particle class #n: species #m'
     - Title for particle species :envvar:`m` of user particle class :envvar:`n`. The maximum length of the title is 40 characters.
     - NONE     

   * - :envvar:`N_USR_ATTR(n)`
     - 0
     - NUmber of user-defined free attributes for user particle class :envvar:`n`. A maximum of 3 is currently allowed.
     - NONE               

   * - :envvar:`IP_RESTART(n)`
     - 0
     - Flag for user particle class :envvar:`n` initialization during restarts, :envvar:`IFREST` = 1.

       | =0, use particle definitions from restart source file :file:`flsgrf`.
       | =1, use particle definitions from :file:`prepin.*`, ignoring the particle data from restart source file :file:`flsgrf`.

       .. seealso:: \  :envvar:`IFREST` in :ref:`RestartOptions`.
     - NONE         

.. index:: active simulation control; mass-momentum sources

.. _EventsMassMomentumSources:

Active simulation control of mass-momentum sources
---------------------------------------------------

.. seealso:: \  :doc:`model-reference` -->  :ref:`activeSimulationControlMR`.

| *m* :math:`\leq` *500, index of mass-momentum source*
| *t* :math:`\leq` *500, time index*
| *n* :math:`\leq` *10, mass-momentum source event index*
| *j* :math:`\leq` *10, probe condition index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistXPUTEventsMassMomentumSources:

.. list-table:: Namelist XPUT
   :widths: 25 15 40 20
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`NEVENTS_QSRP(m)`
     - 0
     - Number of events for mass momentum source :envvar:`m`
     - NONE

   * - :envvar:`EVENT_NAME_QSRP(n,m)`
     - ' '
     - Event :envvar:`n` name (up to 50 characters)
     - NONE

   * - :envvar:`IF_EVENT_ENABLED_QSRP(n,m)`
     - 1
     - Event :envvar:`n` enable/disable flag

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IF_GLOBAL_QSRP(n,m)`
     - 0
     - Global condition flag for event :envvar:`n`

       | =0, use local conditions
       | =1, use global conditions

     - NONE

   * - :envvar:`IGLOBAL_QSRP(n,m)`
     - 0
     - Global condition id for event :envvar:`n` (used if :envvar:`IGLOBAL_QSRP(n,m)` = 1)
     - NONE

   * - :envvar:`NPROBES_QSRP(n,m)`
     - 0
     - Number of local probe conditions for event :envvar:`n` (used if :envvar:`IGLOBAL_QSRP(n,m)` = 0)
     - NONE

   * - :envvar:`EVENT_CONDITION_LOGIC_QSRP(n,m)`
     - ' '
     - Logical operator between probe conditions for event :envvar:`n`

       | ='ANY', event triggered when any of the enabled probe conditions satisfied
       | ='ALL', event triggered when all of the enabled probe conditions satisfied

       .. note:: Required when number of enabled probe conditions > 1
     - NONE

   * - :envvar:`EVENT_ACTION_QSRP(n,m)`
     - ' '
     - Event action for event :envvar:`n`

       | ='TVFR', change the total flow rate at the source :envvar:`m`. Only available when :envvar:`IVQSRP(m)` = 3.
       | ='WV', change the z-component of fluid velocity at the source :envvar:`m`. Only available when :envvar:`IVQSRP(m)` = 1 or 2.
     - NONE

   * - :envvar:`TVFR_EVENT(t,n,m)`
     - 0.0
     - Total flow rate at time :envvar:`TMS(t)` for event :envvar:`n`
     - [L\ :sup:`3`/t] or [M/t]

   * - :envvar:`UV_EVENT(t,n,m)`
     - 0.0
     - x-component of fluid velocity at time :envvar:`TMS(t)` for event :envvar:`n`
     - [L/t]

   * - :envvar:`VV_EVENT(t,n,m)`
     - 0.0
     - y-component of fluid velocity at time :envvar:`TMS(t)` for event :envvar:`n`
     - [L/t]

   * - :envvar:`WV_EVENT(t,n,m)`
     - 0.0
     - z-component of fluid velocity at time :envvar:`TMS(t)` for event :envvar:`n`
     - [L/t]

   * - :envvar:`IF_CONDITION_ENABLED_QSRP(j,n,m)`
     - 1
     - Probe condition :envvar:`j` enable/disable flag for event :envvar:`n`

       | =0, disabled
       | =1, enabled
     - NONE

   * - :envvar:`IPRBD_QSRP(j,n,m)`
     - 0
     - Probe id for probe condition :envvar:`j`
     - NONE

   * - :envvar:`IPRBSC_QSRP(j,n,m)`
     - 0
     - Scalar id for probe condition :envvar:`j`

       .. note:: Used when :envvar:`PRBVNAM_QSRP(j,n,m)` = 'SCSCLR'
     - NONE

   * - :envvar:`IPRBSCN_QSRP(j,n,m)`
     - 0
     - Additional scalar index for probe condition :envvar:`j`

       Sediment species id, when :envvar:`PRBVNAM_QSRP` = 'NSSPC', or
       Baffle flux surface id, when :envvar:`PRBVNAM_QSRP` = 'TRACERN'.
     - NONE

   * - :envvar:`PRBVNAM_QSRP(j,n,m)`
     - ...
     - Probe variable name for probe condition :envvar:`j`

       .. note:: Please check table :ref:`namelistXPUTTerminationControlPRBVNAM` for valid variable names and descriptions.
     - NONE

   * - :envvar:`IFPRBVABS_QSRP(j,n,m)`
     - 0
     - Specify if to use the absolute probe variable value for probe condition :envvar:`j`

       | =0, use the real value
       | =1, use absolute value
     - NONE

   * - :envvar:`PRBVROP_QSRP(j,n,m)`
     - ' '
     - Probe variable relational operator for probe condition :envvar:`j`

       | ='LT', probe condition satisfied when probe variable value is *less* than the critical value
       | ='LE', probe condition satisfied when probe variable value is *less* than or *equal* to the critical value
       | ='EQ', probe condition satisfied when probe variable value is *equal* to the critical value
       | ='NE', probe condition satisfied when probe variable value is *not equal* to the critical value
       | ='GE', probe condition satisfied when probe variable value is *greater* than or *equal* to the critical value
       | ='GT', probe condition satisfied when probe variable value is *greater* than the critical value
     - NONE

   * - :envvar:`PRBVAL_CRITICAL_QSRP(j,n,m)`
     - 0.0
     - Critical value for probe condition :envvar:`j`
     - NONE

   * - :envvar:`PRBDT_QSRP(j,n,m)`
     - 0.0
     - Duration after the critical value has reached for probe condition :envvar:`j`
     - [t]  

=========================================================
Spray Cooling Namelist - SPRAY
=========================================================
.. note::  Only available through |f3dc|.
.. note::  Used when :envvar:`IFSPRAY` = 1.

| *m* :math:`\leq` *500, component index*
| *nab* :math:`\leq` *500, angle index for beta*
| *nae* :math:`\leq` *500, angle index for epsilon*
| *nb* :math:`\leq` *500, bank index*
| *nd* :math:`\leq` *500, distance index*
| *nn* :math:`\leq` *500, nozzle index*
| *ntemp* :math:`\leq` *500, temperature index*
| *ntime* :math:`\leq` *500, time index*

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. _namelistSpray:

.. list-table:: Namelist SPRAY
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`TCP_X(ntime)`
     - 0.0
     - TCP X coordinate
     - [L]

   * - :envvar:`TCP_Y(ntime)`
     - 0.0
     - TCP Y coordinate
     - [L]

   * - :envvar:`TCP_Z(ntime)`
     - 0.0
     - TCP Z coordinate
     - [L]

   * - :envvar:`TCP_RX(ntime)`
     - 0.0
     - TCP rotation about X axis
     - [DEG]

   * - :envvar:`TCP_RY(ntime)`
     - 0.0
     - TCP rotation about Y axis
     - [DEG]

   * - :envvar:`TCP_RZ(ntime)`
     - 0.0
     - TCP rotation about Z axis
     - [DEG]

   * - :envvar:`TCP_TIME(ntime)`
     - 0.0
     - TCP time table
     - [t]

   * - :envvar:`IFTCP`
     - 0
     - Flag to specify TCP from internal file

       .. note:: Up to 256 characters.

     - NONE

   * - :envvar:`FTCP_X`
     - ''
     - :envvar:`TCP_X` input external file name

       .. note:: Used when :envvar:`IFTCP` = 1. Up to 256 characters.

     - NONE

   * - :envvar:`I_TCP_X`
     - 0
     - :envvar:`TCP_X` input from external file

       .. note:: Column number for :envvar:`TCP_X`. Requires :envvar:`IFTCP` = 1 and :math:`\geq` 2.

     - NONE

   * - :envvar:`FTCP_Y`
     - ''
     - :envvar:`TCP_Y` input external file name

       .. note:: Used when :envvar:`IFTCP` = 1. Up to 256 characters.

     - NONE

   * - :envvar:`I_TCP_Y`
     - 0
     - :envvar:`TCP_Y` input from external file

       .. note:: Column number for :envvar:`TCP_Y`. Requires :envvar:`IFTCP` = 1 and :math:`\geq` 2.

     - NONE

   * - :envvar:`FTCP_Z`
     - ''
     - :envvar:`TCP_Z` input external file name

       .. note:: Used when :envvar:`IFTCP` = 1. Up to 256 characters.

     - NONE

   * - :envvar:`I_TCP_Z`
     - 0
     - :envvar:`TCP_Z` input from external file

       .. note:: Column number for :envvar:`TCP_Z`. Requires :envvar:`IFTCP` = 1 and :math:`\geq` 2.

     - NONE

   * - :envvar:`FTCP_RX`
     - ''
     - :envvar:`TCP_RX` input external file name

       .. note:: Used when :envvar:`IFTCP` = 1. Up to 256 characters.

     - NONE

   * - :envvar:`I_TCP_RX`
     - 0
     - :envvar:`TCP_RX` input from external file

       .. note:: Column number for :envvar:`TCP_Y`. Requires :envvar:`IFTCP` = 1 and :math:`\geq` 2.

     - NONE

   * - :envvar:`FTCP_RY`
     - ''
     - :envvar:`TCP_RY` external file name

       .. note:: Used when :envvar:`IFTCP` = 1. Up to 256 characters.

     - NONE

   * - :envvar:`I_TCP_RY`
     - 0
     - :envvar:`TCP_RY` input from external file

       .. note:: Column number for :envvar:`TCP_RY`. Requires :envvar:`IFTCP` = 1 and :math:`\geq` 2.

     - NONE

   * - :envvar:`FTCP_RZ`
     - ''
     - :envvar:`TCP_RZ` input external file name

       .. note:: Used when :envvar:`IFTCP` = 1. Up to 256 characters.

     - NONE

   * - :envvar:`I_TCP_RZ`
     - 0
     - TCP Z input from external file

       .. note:: Column number for :envvar:`TCP_RZ`. Requires :envvar:`IFTCP` = 1 and :math:`\geq` 2.

     - NONE

   * - :envvar:`NBANKS`
     - 0
     - Number of spray banks
     - NONE

   * - :envvar:`BANK_NAME(nb)`
     - ''
     - Name of bank :envvar:`nb`

       .. note:: Up to 50 characters.

     - NONE

   * - :envvar:`IF_BANK_ENABLED(nb)`
     - 1
     - Flag for bank :envvar:`nb` enable/disable status

       | =0, disabled
       | =1, enabled

     - NONE

   * - :envvar:`BANK_NOZZLE_NAME(nb)`
     - ''
     - Nozzle name of bank :envvar:`nb`

       .. note:: Up to 256 characters.

     - NONE

   * - :envvar:`BANK_NOZZLE_TYPE(nb)`
     - 1
     - Nozzle type for bank :envvar:`nb`

       | =1, small or medium spray 

       .. note:: Only support small or medium spray type for now.

     - NONE

   * - :envvar:`BANK_TEMP(nb)`
     - ...
     - Spray temperature of bank :envvar:`nb`
     - [T]

   * - :envvar:`CONE_ANGLE(nb)`
     - 0.0
     - Spray cone angle of bank :envvar:`nb`
     - [DEG]

   * - :envvar:`BANK_SPRAY_OBS(m,nb)`
     - 0
     - The :envvar:`m` th Spray component index for bank :envvar:`nb`
     - NONE

   * - :envvar:`BANK_CONTROL(ntime,nb)`
     - 1
     - Bank on/off status

       | =0, off between :envvar:`BANK_TIME(ntime)` and :envvar:`BANK_TIME(ntime+1)`
       | =1, on between :envvar:`BANK_TIME(ntime)` and :envvar:`BANK_TIME(ntime+1)`
     - NONE

   * - :envvar:`BANK_TIME(ntime,nb)`
     - 0.0
     - Bank time table
     - [t]

   * - :envvar:`IHTC_CALC(nb)`
     - 0
     - Flag for heat transfer coefficient computation method for spray cooling for bank :envvar:`nb`

       | =0, computed based on :envvar:`BANK_HTC(ntemp,nb)` and dependencies tables
       | =1, compute based on spray medium properties

     - NONE

   * - :envvar:`BANK_HTC(ntemp,nb)`
     - 0.0
     - Heat transfer coefficient as a function of mold temperature for the bank :envvar:`nb`

       .. note:: used if :envvar:`IHTC_CALC(nb)` = 0.

     - [M T\ :sup:`-1` t\ :sup:`-3`]

   * - :envvar:`BANK_HTC_TEMP(ntemp,nb)`
     - 0.0
     - Heat transfer coefficient temperature table
     - NONE

   * - :envvar:`HTC_DIST_FACTOR(nd,nb)`
     - 1.0
     - Heat transfer coefficient distance dependence factor table

       .. note:: used if :envvar:`IHTC_CALC(nb)` = 0.

     - NONE

   * - :envvar:`HTC_DIST(nd,nb)`
     - 0.0
     - Heat transfer coefficient distance table for bank :envvar:`nb`
     - NONE

   * - :envvar:`HTC_ANGLE_B_FACTOR(nab,nb)`
     - 1.0
     - Heat transfer coefficient angle |beta| dependence factor table for bank :envvar:`nb`

       .. note:: used if :envvar:`IHTC_CALC(nb)` = 0.

     - NONE

   * - :envvar:`HTC_ANGLE_B(nab,nb)`
     - 0.0
     - Heat transfer coefficient angle |beta| table for bank :envvar:`nb`
     - NONE

   * - :envvar:`HTC_ANGLE_E_FACTOR(nae,nb)`
     - 1.0
     - Heat transfer coefficient angle |epsilon| dependence factor table for bank :envvar:`nb`

       .. note:: used if :envvar:`IHTC_CALC(nb)` = 0.

     - NONE

   * - :envvar:`HTC_ANGLE_E(nae,nb)`
     - 0.0
     - Heat transfer coefficient angle |epsilon| table for bank :envvar:`nb`
     - NONE

   * - :envvar:`HTC_EFFC(nb)`
     - 0.75
     - Spray cooling heat transfer efficiency coefficient for bank :envvar:`nb`

       .. note:: used if :envvar:`IHTC_CALC(nb)` = 1.

     - NONE

   * - :envvar:`HTC_RHO(nb)`
     - -1.0
     - Density of the spray medium for bank :envvar:`nb`

       .. note:: used if :envvar:`IHTC_CALC(nb)` = 1.

     - [M/L :sup:`3`]

   * - :envvar:`HTC_VFLR(nb)`
     - 0.0
     - Spray medium volume flow rate for each nozzle for bank :envvar:`nb`

       .. note:: used if :envvar:`IHTC_CALC(nb)` = 1.

     - [L\ :sup:`3`/t]

   * - :envvar:`HTC_CLHV(nb)`
     - 0.0
     - Spray medium latent heat of vaporization for bank :envvar:`nb`

       .. note:: used if :envvar:`IHTC_CALC(nb)` = 1.

     - [L\ :sup:`2`/t\ :sup:`2`]

   * - :envvar:`HTC_CV(nb)`
     - 0.0
     - Spray medium specific heat for bank :envvar:`nb`

       .. note:: used if :envvar:`IHTC_CALC(nb)` = 1.

     - [L\ :sup:`2` t\ :sup:`-2` T\ :sup:`-1`]

   * - :envvar:`HTC_TV(nb)`
     - ...
     - Spray medium vaporization temperature for bank :envvar:`nb`

       .. note:: used if :envvar:`IHTC_CALC(nb)` = 1.

     - [T]

   * - :envvar:`NNOZZLES(nb)`
     - 0
     - Number of nozzles for bank :envvar:`nb`
     - NONE
     
   * - :envvar:`SPRAY_ORIGIN_X(nn,nb)`
     - 0.0
     - Spray origin for X for nozzle :envvar:`nn` in bank :envvar:`nb`
     - [L]

   * - :envvar:`SPRAY_ORIGIN_Y(nn,nb)`
     - 0.0
     - Spray origin for Y for nozzle :envvar:`nn` in bank :envvar:`nb`
     - [L]

   * - :envvar:`SPRAY_ORIGIN_Z(nn,nb)`
     - 0.0
     - Spray origin for Z for nozzle :envvar:`nn` in bank :envvar:`nb`
     - [L]

   * - :envvar:`SPRAY_END_X(nn,nb)`
     - 0.0
     - Spray end for X for nozzle :envvar:`nn` in bank :envvar:`nb`
     - [L]

   * - :envvar:`SPRAY_END_Y(nn,nb)`
     - 0.0
     - Spray end for Y for nozzle :envvar:`nn` in bank :envvar:`nb`
     - [L]

   * - :envvar:`SPRAY_END_Z(nn,nb)`
     - 0.0
     - Spray end for Z for nozzle :envvar:`nn` in bank :envvar:`nb`
     - [L]

   * - :envvar:`SPRAY_DIRECTION_X(nn,nb)`
     - 0.0
     - Spray direction for X for nozzle :envvar:`nn` in bank :envvar:`nb`
     - [L]

   * - :envvar:`SPRAY_DIRECTION_Y(nn,nb)`
     - 0.0
     - Spray direction for Y for nozzle :envvar:`nn` in bank :envvar:`nb`
     - [L]

   * - :envvar:`SPRAY_DIRECTION_Z(nn,nb)`
     - 0.0
     - Spray direction for Z for nozzle :envvar:`nn` in bank :envvar:`nb`
     - [L]

   * - :envvar:`IFNOZZLE(nb)`
     - 0
     - Flag input for input nozzle definition from external file for bank :envvar:`nb`
     - NONE

   * - :envvar:`FNOZZLE(nb)`
     - ''
     - External file name for nozzle definition for bank :envvar:`nb`
       
       .. note:: Used when :envvar:`IFNOZZLE` = 1. Up to 256 characters.

     - NONE

   * - :envvar:`I_SPRAY_ORIGIN_X(nb)`
     - 0
     - Column number for spray origin X for bank :envvar:`nb`
       
       .. note:: Used when :envvar:`IFNOZZLE` = 1. 

     - NONE

   * - :envvar:`I_SPRAY_ORIGIN_Y(nb)`
     - 0
     - Column number for spray origin Y for bank :envvar:`nb`
       
       .. note:: Used when :envvar:`IFNOZZLE` = 1. 

     - NONE

   * - :envvar:`I_SPRAY_ORIGIN_Z(nb)`
     - 0
     - Column number for spray origin Z for bank :envvar:`nb`
       
       .. note:: Used when :envvar:`IFNOZZLE` = 1. 

     - NONE

   * - :envvar:`I_SPRAY_END_X(nb)`
     - 0
     - Column number for spray end X for bank :envvar:`nb`
       
       .. note:: Used when :envvar:`IFNOZZLE` = 1. 

     - NONE

   * - :envvar:`I_SPRAY_END_Y(nb)`
     - 0
     - Column number for spray end Y for bank :envvar:`nb`
       
       .. note:: Used when :envvar:`IFNOZZLE` = 1. 

     - NONE

   * - :envvar:`I_SPRAY_END_Z(nb)`
     - 0
     - Column number for spray end Z for bank :envvar:`nb`
       
       .. note:: Used when :envvar:`IFNOZZLE` = 1. 

     - NONE

   * - :envvar:`I_SPRAY_DIRECTION_X(nb)`
     - 0
     - Column number for spray direction X for bank :envvar:`nb`
       
       .. note:: Used when :envvar:`IFNOZZLE` = 1. 

     - NONE

   * - :envvar:`I_SPRAY_DIRECTION_Y(nb)`
     - 0
     - Column number for spray direction Y for bank :envvar:`nb`
       
       .. note:: Used when :envvar:`IFNOZZLE` = 1. 

     - NONE

   * - :envvar:`I_SPRAY_DIRECTION_Z(nb)`
     - 0
     - Column number for spray direction Z for bank :envvar:`nb`
       
       .. note:: Used when :envvar:`IFNOZZLE` = 1. 

     - NONE

.. index::
   pair: user defined namelist; USRDAT

.. _UserDefinedNamelistUSRDAT:

===============================
User Defined Namelist - USRDAT
===============================

.. note:: This namelist may be customized by source users and is only read if :envvar:`IUSRD` :math:`>` 0 in :ref:`UserDefinedVariables`.

.. tabularcolumns:: |p{7.25cm}|p{2.0cm}|p{5.0cm}|p{2.25cm}|

.. list-table:: Namelist USRDAT
   :widths: 10 20 55 15
   :header-rows: 1
   :class: longtable

   * - NAME
     - DEFAULT
     - DESCRIPTION
     - DIMENSIONS

   * - :envvar:`CDUMVR`
     - ...
     - Character dummy variable
     - NONE

   * - :envvar:`IUDUMV`
     - ...
     - Integer dummy variable
     - NONE

   * - :envvar:`REMARK`
     - ...
     - Dummy character string for adding comments to :envvar:`URSDAT`
     - NONE

   * - :envvar:`UDUMVR`
     - ...
     - Real dummy variable
     - Varies